riot.tag2("checkboxes",'<div class="layout vertical"> <div id="title"> <div onclick="{toggle}" show="{!opts.title}"> <yield><\/yield> <\/div> <div onclick="{toggle}" show="{opts.title}" class="layout horizontal" style="white-space: nowrap;"> <span show="{!selected_items || selected_items.length == 0}">Select {opts.title}<\/span> <span style="font-weight: bold" show="{selected_items && selected_items.length > 0}">({selected_items.length})Selected {opts.title}<\/span> <div style="float:right; height:20px; width:20px;"> <svg viewbox="0 0 24 24" preserveaspectratio="xMidYMid meet" class="style-scope iron-icon" style="pointer-events: none; display: block; width: 100%; height: 100%;"> <g class="style-scope iron-icon"> <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" class="style-scope iron-icon"> <\/path> <\/g> <\/svg> <\/div> <\/div> <div style="height: 1px; background-color:black;"><\/div> <\/div> <div id="ddl_container" riot-style=" direction: {opts.direction};"> <ul id="list" class="{opts.pre_scale_class} {fade_in: is_shown} {fade_out: !is_shown} {scale: !is_shown && opts.scale_type != \'scale_height\'} {scale_height: !is_shown && opts.scale_type == \'scale_height\'}" riot-style="background-color:{opts.background_color}; display: table; "> <li class="check_list" each="{item, i in opts.list}"> <div class="layout horizontal"> <div class="layout horizontal highlight-text checkbox_container" onclick="{select_item}" data-_id="{i}"> <input type="checkbox" value="{item.title}" __checked="{selected_items.indexOf(i) > -1}" onclick="{prevent_default}" data-_id="{i}"> <span data-_id="{i}">{item.title}<\/span> <span if="{item.cost}" data-_id="{i}">&nbsp;{ucosmic.currency(item.cost)}<\/span> <\/div> <div class="flex" if="{has_index(i)}"> <menu_drop_down data-_id="{i}" my_path="{my_path}" id="menu_item_ddl" list="{item.options.items}" pre_scale_class="pre_scale_top_center" is_shown="{show_option}" title="{item.options.title}" background_color="rgba(144,144,144, .9)" selected_callback="{ddl_option_selected}" selected_item_id="{item.options.selected[0]}" scale_type="scale_height" direction="ltr"> <\/menu_drop_down> <\/div> <\/div> <\/li> <\/ul> <\/div> <\/div>','checkboxes #title,[riot-tag="checkboxes"] #title{ cursor: pointer; } checkboxes #ddl_container,[riot-tag="checkboxes"] #ddl_container{ position: relative; height: 0; width: 0; overflow: visible; } checkboxes ul,[riot-tag="checkboxes"] ul{ white-space: nowrap; overflow-y: visible; margin-right: 10px; display: inline-block; padding: 10px 5px; list-style-type: none; background-color: rgba(255,255,255,.9); -webkit-border-radius:10px; -moz-border-radius:10px; border-radius:10px; box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4); margin: 0; max-height: 50%; z-index: 1; width: initial; width: auto; } checkboxes li:not(:last-child),[riot-tag="checkboxes"] li:not(:last-child) { margin-bottom: 10px; } checkboxes #list,[riot-tag="checkboxes"] #list{ position: absolute; max-height: 70%; top: 0px; } checkboxes .float_text,[riot-tag="checkboxes"] .float_text{ font-size: .7em; margin:0; padding: 0; height: 0; width: 0; overflow: visible; color: gray; mix-blend-mode: difference; } checkboxes .float_text div,[riot-tag="checkboxes"] .float_text div{ position: relative; top: -1em; width: 80px; text-align: start; }',"",function(){"use strict";var n=this;n.is_shown=!1;n.item_selected="";n.has_index=function(t){return n.selected_items&&n.selected_items.indexOf(t)>-1};n.prevent_default=function(t){t.stopPropagation();n.select_item(t)};n.select_item=function(t){n.opts.selected_callback(parseInt(t.target.dataset._id))};n.ddl_option_selected=function(t,i){var r=find_closest(t.target,"menu_drop_down").dataset._id;n.opts.list[parseInt(r)].options.selected=[i];n.opts.selected_callback(null)};n.document_click_handler=function(t){find_closest_parent(t.target,"#ddl_container")||n.toggle()};n.toggle=function(){n.is_shown=n.is_shown?!1:!0;n.is_shown?setTimeout(function(){document.body.addEventListener("click",n.document_click_handler)},0):document.body.removeEventListener("click",n.document_click_handler);n.update()};n.get_container_width=function(){n.container_width=n.title.offsetWidth+"px"};n.on("mount",function(){n.get_container_width()});n.on("update",function(){n.selected_items=n.opts.selected_items_ids;n.my_path=this.opts.my_path?Object.assign({},this.opts.my_path):{};n.my_path.item_options_item={_ids:this.opts._id}})},"{ }");
//# sourceMappingURL=checkboxes.min.js.map
