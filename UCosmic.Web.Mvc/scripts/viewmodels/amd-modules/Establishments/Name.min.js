define(["require","exports","./ServerApiModel","../Widgets/Spinner"],function(n,t,i,r){var s=i,u=r,f=function(){function n(n){this.id=0,this.ownerId=0,this.text="",this.isOfficialName=!1,this.isFormerName=!1,this.languageCode="",this.languageName="",this.ownerId=n}return n}(),e,o;t.ServerNameApiModel=f,e=function(){function n(){this._ruleName="validEstablishmentNameText",this._isAwaitingResponse=!1,this.async=!0,this.message="error",ko.validation.rules[this._ruleName]=this,ko.validation.addExtender(this._ruleName)}return n.prototype.validator=function(n,t,i){var u=this,r;t.isTextValidatableAsync()?this._isAwaitingResponse||(r=App.Routes.WebApi.Establishments.Names.validateText(t.ownerId(),t.id()),this._isAwaitingResponse=!0,$.post(r,t.serializeData()).always(function(){u._isAwaitingResponse=!1}).done(function(){i(!0)}).fail(function(n){i({isValid:!1,message:n.responseText})})):i(!0)},n}(),new e,o=function(){function n(n,t){var i=this;this.id=ko.observable(),this.ownerId=ko.observable(),this.text=ko.observable(),this.isOfficialName=ko.observable(),this.isFormerName=ko.observable(),this.languageName=ko.observable(),this.languageCode=ko.observable(),this.editMode=ko.observable(),this.$textElement=undefined,this.$languagesElement=undefined,this.$confirmPurgeDialog=undefined,this.saveSpinner=new u.Spinner(new u.SpinnerOptions(0,!1)),this.purgeSpinner=new u.Spinner(new u.SpinnerOptions(0,!1)),this.textValidationSpinner=new u.Spinner(new u.SpinnerOptions(0,!1)),this.saveEditorClicked=!1,this.owner=t,n||(n=new f(this.owner.id)),n.id===0&&(n.ownerId=this.owner.id),this.originalValues=n,ko.mapping.fromJS(n,{},this),this.isOfficialNameEnabled=ko.computed(function(){return!i.originalValues.isOfficialName}),this.isTextValidatableAsync=ko.computed(function(){return i.text()!==i.originalValues.text}),this.text.extend({required:{message:"Establishment name is required."},maxLength:400,validEstablishmentNameText:this}),this.text.isValidating.subscribe(function(n){n?i.textValidationSpinner.start():(i.textValidationSpinner.stop(),i.saveEditorClicked&&i.saveEditor())}),this.selectedLanguageCode=ko.observable(this.originalValues.languageCode),this.owner.languages.subscribe(function(){i.selectedLanguageCode(i.languageCode())}),this.isOfficialName.subscribe(function(n){n&&i.isFormerName(!1)}),this.mutationSuccess=function(n){i.owner.requestNames(function(){i.owner.editingName(0),i.editMode(!1),i.saveSpinner.stop(),i.purgeSpinner.stop(),App.flasher.flash(n)})},this.mutationError=function(n){n.status===400&&(i.owner.$genericAlertDialog.find("p.content").html(n.responseText.replace("\n","<br /><br />")),i.owner.$genericAlertDialog.dialog({title:"Alert Message",dialogClass:"jquery-ui",width:"auto",resizable:!1,modal:!0,buttons:{Ok:function(){i.owner.$genericAlertDialog.dialog("close")}}})),i.saveSpinner.stop(),i.purgeSpinner.stop()},ko.validation.group(this)}return n.prototype.clickOfficialNameCheckbox=function(){var n=this;return this.originalValues.isOfficialName&&(this.owner.$genericAlertDialog.find("p.content").html("In order to choose a different official name for this establishment, edit the name you wish to make the new official name."),this.owner.$genericAlertDialog.dialog({title:"Alert Message",dialogClass:"jquery-ui",width:"auto",resizable:!1,modal:!0,buttons:{Ok:function(){n.owner.$genericAlertDialog.dialog("close")}}})),!0},n.prototype.showEditor=function(){var n=this.owner.editingName();n||(this.owner.editingName(this.id()||-1),this.editMode(!0),this.$textElement.trigger("autosize"),this.$textElement.focus())},n.prototype.saveEditor=function(){return this.saveEditorClicked=!0,this.isValid()?this.text.isValidating()||(this.saveEditorClicked=!1,this.saveSpinner.start(),this.id()?$.ajax({url:App.Routes.WebApi.Establishments.Names.put(this.owner.id,this.id()),type:"PUT",data:this.serializeData()}).done(this.mutationSuccess).fail(this.mutationError):this.owner.id&&$.ajax({url:App.Routes.WebApi.Establishments.Names.post(this.owner.id),type:"POST",data:this.serializeData()}).done(this.mutationSuccess).fail(this.mutationError)):(this.saveEditorClicked=!1,this.errors.showAllMessages()),!1},n.prototype.cancelEditor=function(){this.owner.editingName(0),this.id()?(ko.mapping.fromJS(this.originalValues,{},this),this.editMode(!1)):this.owner.Names.shift()},n.prototype.purge=function(n,t){var i=this,r;if(t.stopPropagation(),!this.owner.editingName()){if(this.isOfficialName()){this.owner.$genericAlertDialog.find("p.content").html("You cannot delete an establishment's official name.<br />To delete this name, first assign another name as official."),this.owner.$genericAlertDialog.dialog({title:"Alert Message",dialogClass:"jquery-ui",width:"auto",resizable:!1,modal:!0,buttons:{Ok:function(){i.owner.$genericAlertDialog.dialog("close")}}});return}this.purgeSpinner.start(),r=!1,this.$confirmPurgeDialog.dialog({dialogClass:"jquery-ui",width:"auto",resizable:!1,modal:!0,close:function(){r||i.purgeSpinner.stop()},buttons:[{text:"Yes, confirm delete",click:function(){r=!0,i.$confirmPurgeDialog.dialog("close"),$.ajax({url:App.Routes.WebApi.Establishments.Names.del(i.owner.id,i.id()),type:"DELETE"}).done(i.mutationSuccess).fail(i.mutationError)}},{text:"No, cancel delete",click:function(){i.$confirmPurgeDialog.dialog("close"),i.purgeSpinner.stop()},"data-css-link":!0}]})}},n.prototype.serializeData=function(){return{id:this.id(),ownerId:this.ownerId(),text:$.trim(this.text()),isOfficialName:this.isOfficialName(),isFormerName:this.isFormerName(),languageCode:this.selectedLanguageCode()}},n}(),t.Name=o})