var ViewModels;(function(n){(function(n){var t=function(){function n(n){this.locations=ko.observableArray(),this.selectedLocations=ko.observableArray(),this.activityTypes=ko.observableArray(),this.addingTag=ko.observable(!1),this.newTag=ko.observable(),this.uploadingDocument=ko.observable(!1),this.id=ko.observable(n)}return n.prototype.load=function(){var n=this,r=$.Deferred(),u=$.Deferred(),t,i;return $.get(App.Routes.WebApi.Activities.getLocations(0)).done(function(n){u.resolve(n)}).fail(function(n,t,i){u.reject(n,t,i)}),t=$.Deferred(),$.get(App.Routes.WebApi.Employees.ModuleSettings.ActivityTypes.get()).done(function(n){t.resolve(n)}).fail(function(n,i,r){t.reject(n,i,r)}),i=$.Deferred(),$.ajax({type:"GET",url:App.Routes.WebApi.Activities.get(this.id()),success:function(n){i.resolve(n)},error:function(n,t,r){i.reject(n,t,r)}}),$.when(t,u,i).done(function(t,i,u){var e,o,f;for(n.activityTypes=ko.mapping.fromJS(t),n.locations=ko.mapping.fromJS(i),e=function(n){ko.mapping.fromJS(n,{},this),this.proxyImageSource=ko.observable(App.Routes.WebApi.Activities.getDocumentProxyImage(this.id(),n.id))},o={documents:{create:function(n){return new e(n.data)}},startsOn:{create:function(n){return n.data!=null?ko.observable(moment(n.data).toDate()):ko.observable()}},endsOn:{create:function(n){return n.data!=null?ko.observable(moment(n.data).toDate()):ko.observable()}}},ko.mapping.fromJS(u,o,n),f=0;f<n.values.locations().length;f+=1)n.selectedLocations.push(n.values.locations()[f].placeId());for(f=0;f<n.activityTypes().length;f+=1)n.activityTypes()[f].checked=ko.computed(n.defHasActivityTypeCallback(f));r.resolve()}).fail(function(n,t,i){r.reject(n,t,i)}),r},n.prototype.addActivityType=function(n){var i=this.getActivityTypeIndexById(n),t;i==-1&&(t=ko.mapping.fromJS({id:0,typeId:n}),this.values.types.push(t))},n.prototype.removeActivityType=function(n){var t=this.getActivityTypeIndexById(n),i;t!=-1&&(i=this.values.types()[t],this.values.types.remove(i))},n.prototype.getTypeName=function(n){var t="",i=this.getActivityTypeIndexById(n);return i!=-1&&(t=this.activityTypes[i].type),t},n.prototype.getActivityTypeIndexById=function(n){var i=-1,t;if(this.values.types!=null&&this.values.types().length>0){for(t=0;t<this.values.types().length&&n!=this.values.types()[t].typeId();)t+=1;t<this.values.types().length&&(i=t)}return i},n.prototype.hasActivityType=function(n){return this.getActivityTypeIndexById(n)!=-1},n.prototype.defHasActivityTypeCallback=function(n){var t=this;return{read:function(){return t.hasActivityType(t.activityTypes()[n].id())},write:function(t){t?this.addActivityType(this.activityTypes()[n].id()):this.removeActivityType(this.activityTypes()[n].id())},owner:this}},n.prototype.updateLocations=function(n){var t,i;for(this.values.locations=ko.observableArray(),t=0;t<n.length;t+=1)i=ko.mapping.fromJS({id:0,placeId:n[t]}),this.values.locations.push(i)},n.prototype.addTag=function(){var n=this.newTag(),t,i;n=n!=null?n.trim():null,n==null||n.length==0||this.haveTag(n)||(t={id:0,number:0,text:n,domainTypeText:null,domainKey:null,modeText:this.modeText(),isInstitution:!1},i=ko.mapping.fromJS(t),this.values.tags.push(i)),this.newTag(null)},n.prototype.removeTag=function(n){this.values.tags.remove(n)},n.prototype.haveTag=function(n){return this.tagIndex(n)!=-1},n.prototype.tagIndex=function(n){for(var t=0;t<this.values.tags().length&&n!=this.values.tags()[t].text();)t+=1;return this.values.tags().length>0&&t<this.values.tags().length?t:-1},n.prototype.validateUploadableFileTypeByExtension=function(n,t){var r=!0,i=t;return i==null||i.length==0||i.length>255?r=!1:(i[0]==="."&&(i=i.substring(1)),jQuery.ajax({async:!1,type:"POST",url:App.Routes.WebApi.Activities.validateUploadFileTypeByExtension(n),data:ko.toJSON(i),dataType:"json",contentType:"application/json",success:function(){r=!0},error:function(){r=!1}})),r},n.prototype.loadDocuments=function(){var n=this;jQuery.ajax({type:"GET",url:App.Routes.WebApi.Activities.getDocuments(this.id(),this.modeText()),dataType:"json",success:function(t){var u=function(n){ko.mapping.fromJS(n,{},this),this.proxyImageSource=ko.observable(App.Routes.WebApi.Activities.getDocumentProxyImage(this.id(),n.id))},f={create:function(n){return new u(n.data)}},r=ko.mapping.fromJS(t,f),i;for(n.values.documents.removeAll(),i=0;i<r().length;i+=1)n.values.documents.push(r()[i])},error:function(n,t,i){alert("Unable to update documents list. "+t+"|"+i)}})},n.prototype.deleteDocument=function(n){var t=this;jQuery.ajax({type:"DELETE",url:App.Routes.WebApi.Activities.deleteDocument(this.id(),n.id()),dataType:"json",success:function(){t.loadDocuments()},error:function(n,t,i){alert("Unable to delete document. "+t+"|"+i)}})},n}();n.Activity=t})(n.Activities||(n.Activities={}));var t=n.Activities})(ViewModels||(ViewModels={}))