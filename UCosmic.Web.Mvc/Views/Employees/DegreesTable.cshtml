@using System.Globalization
@using UCosmic.Web.Mvc.Models

@model DegreeSearchModel

@{
    ViewBag.Title = "Search Formal Education";
}

@section bib
{
    <nav class="bib">
        @Html.Partial(MVC.Employees.Views._Bib, new EmployeesBibNavModel { Degrees = true })
    </nav>
}

@section scripts
{
    <script src="~/scripts/oss/linq.js"></script>
    <script src="~/scripts/app/Pager.js"></script>
    <script src="~/scripts/app/Spinner.js"></script>
    @* API routes come from CSHTML files *@
    <script>
        @{Html.RenderPartial(MVC.JavaScriptRoutes.Views.Establishments);}
    </script>
    @Scripts.Render("~/bundles/people/degrees/search")
    <script>
        var settings = {
            input: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.Input))'),
            output: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.Output))'),
            countryOptions: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.CountryOptions))'),
        };
        var viewModel = new Degrees.ViewModels.Search(settings, @ViewBag.EmployeesEstablishmentId);
        viewModel.applyBindings(document.getElementById('degree_search_form'));
    </script>
}

<div class="content fixed to-top" data-current-module="degrees">
    <form class="group" method="GET" id="degree_search_form" data-bind="jQuery: '$form'">
        <div class="on-left from-top">
            @* HEADING & PIVOT RADIOS *@
            <div class="group">
                <div class="on-left">
                    <header>
                        <h1>
                            @ViewBag.Title
                        </h1>
                    </header>
                </div>
                <div class="on-right" style="margin-top: 8px;">
                    <a href="@Url.Action(MVC.Employees.DegreesTable(Model.Domain, null))" class="restore-underline">Reset search</a>
                </div>
            </div>

            @* KEYWORD TEXT BOX *@
            <table style="border: none; border-collapse: collapse; width: 100%;">
                <tr>
                    <td style="width: 95%;">
                        <div class="field" style="margin-bottom: 0;">
                            <input type="search" value="@Model.Input.Keyword" placeholder="Find formal education by keyword" name="keyword"
                                   data-bind="event: { search: onKeywordInputSearchEvent }" />
                        </div>
                    </td>
                    <td style="text-align: right;">
                        <div class="field" style="margin-bottom: 0; margin-left: 12px;">
                            <input type="submit" value="Search" title="Click here or press the enter key to search." style="margin-right: 0;" />
                        </div>
                    </td>
                </tr>
            </table>

            @* PAGER STATUS *@
            @if (Model != null && Model.Output.Items.Any())
            {
                <table style="width:100%; margin-bottom:8px;">
                    <tr>
                        <td>
                            <div style=" height: 24px; margin: 10px 0 0 0;">
                                <strong>
                                    Showing <span>@Model.Output.FirstNumber</span>
                                    @if (@Model.Output.PageCount > 0)
                                    {
                                        <span>- <span>@Model.Output.LastNumber</span></span>
                                    }
                                    of <span>@Model.Output.ItemTotal</span>
                                    <span> degrees</span>
                                </strong>
                                @if (Model != null && Model.Output != null && Model.Output.PageCount > 0)
                                {
                                    <span>
                                        (page
                                        @Html.DropDownListFor(x => x.Output.PageNumber, Enumerable.Range(1, Model.Output.PageCount)
                                .Select(x => new SelectListItem
                                {
                                    Text = x.ToString(CultureInfo.InvariantCulture),
                                    Value = x.ToString(CultureInfo.InvariantCulture),
                                }),
                                new
                                {
                                    Name = "pageNumber",
                                    data_bind = "value: pager.input.pageNumberText",
                                    style = "padding: 0; margin: 0; line-height: 16px; height: auto;",
                                })
                                        of <span>@Model.Output.PageCount</span>)
                                    </span>
                                }
                            </div>
                            <div>
                                <strong>
                                    earned by
                                    @if (Model != null && Model.Summary.People_Count > 1)
                                    {
                                        <span> @Model.Summary.People_Count</span>
                                        <span> people</span>
                                    }
                                    else if (Model != null && Model.Summary.People_Count == 1)
                                    {
                                        <span> 1</span>
                                        <span> person</span>
                                    }
                                    <span> from</span>
                                    @if (Model != null && Model.Summary.Institution_Count > 1)
                                    {
                                        <span> @Model.Summary.Institution_Count</span>
                                        <span> institutions</span>
                                    }
                                    else if (Model != null && Model.Summary.Institution_Count == 1)
                                    {
                                        <span> 1</span>
                                        <span> institution</span>
                                    }

                                    <span> in</span>
                                    @if (Model != null && Model.Summary.Country_Count > 1)
                                    {
                                        <span> @Model.Summary.Country_Count</span>
                                        <span> countries.</span>
                                    }
                                    else if (Model != null && Model.Summary.Country_Count == 1)
                                    {
                                        <span> 1</span>
                                        <span> country.</span>
                                    }
                                </strong>

                            </div>
                            @* PREV & NEXT PAGER BUTTONS *@
                            <div style="margin: 5px 0 0 0; width:180px; float:left;" class="field" data-bind="with: pager.input">
                                <button class="link" data-bind="click: prev, enable: prevAllowed" disabled="disabled">&lt;&lt; Previous</button>
                                |
                                <button class="link" data-bind="click: next, enable: nextAllowed" disabled="disabled">Next &gt;&gt;</button>
                            </div>
                            <div style="margin: 5px 0 0 0; display: none; float:left" data-bind="visible: loadingSpinner.isVisible">
                                <img src="~/images/icons/spinner/spinner-20-blue.gif" alt="" />
                                <strong>Loading...</strong>
                            </div>
                        </td>
                        <td style="vertical-align: top;" align="right">
                            @* SORT DROPDOWN *@
                            <div class="field"
                                 style="margin:8px 0 0;">
                                @Html.DropDownListFor(x => x.Input.OrderBy,
                                        new[]
                                        {
                                            new SelectListItem { Text = "Sort by person last name A-Z", Value = "lastname-asc" },
                                            new SelectListItem { Text = "Sort by person last name Z-A", Value = "lastname-desc" },
                                            new SelectListItem { Text = "Sort by country A-Z", Value = "country-asc" },
                                            new SelectListItem { Text = "Sort by country Z-A", Value = "country-desc" },
                                        },
                                        new
                                        {
                                            @class = "side",
                                            Name = "orderBy",
                                            data_bind = "value: orderBy"
                                        })
                            </div>

                            @* PAGE SIZE DROPDOWN *@
                            <div class="field"
                                 style="margin:4px 0;">
                                @Html.DropDownListFor(x => x.Input.PageSize,
                                    new[]
                                    {
                                        new SelectListItem { Text = "Show 10 results per page", Value = "10" },
                                        new SelectListItem { Text = "Show 20 results per page", Value = "20" },
                                        new SelectListItem { Text = "Show 50 results per page", Value = "50" },
                                        new SelectListItem { Text = "Show 100 results per page", Value = "100" },
                                        new SelectListItem { Text = "Show 250 results per page", Value = "250" },
                                    },
                                    new
                                    {
                                        @class = "side",
                                        Name = "pageSize",
                                        data_bind = "value: pager.input.pageSizeText"
                                    })
                            </div>
                        </td>
                    </tr>
                </table>
            }

            @* ZERO RESULTS MESSAGE *@
            @if (Model.Output == null || Model.Output.Items == null || !Model.Output.Items.Any())
            {
                <p>
                    There are no results that match your search terms.
                </p>
            }
            else
            {
                @* ACTIVITY RESULTS TABLE *@
                <table class="data">
                    <colgroup>
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Who?</th>
                            <th>What?</th>
                            <th>Where?</th>
                        </tr>
                    </thead>
                    <tbody class="searchResults">
                        @foreach (var degree in Model.Output.Items)
                        {
                            <tr>
                                @* PERSON COLUMN *@
                                <td class="person-column">
                                    <a href="@Url.Action(MVC.People.Degrees(degree.Owner.PersonId, null))">
                                        @degree.Owner.LastCommaFirst
                                    </a>
                                </td>

                                @* DEGREE COLUMN *@
                                <td style="vertical-align: top;">
                                    <strong>@degree.Title</strong> @degree.FieldOfStudy @degree.YearAwarded<br />
                                    @if (degree.AlmaMater != null)
                                    {
                                        <strong title="@(degree.AlmaMater.OfficialName != degree.AlmaMater.TranslatedName ? degree.AlmaMater.OfficialName : null)">
                                            @degree.AlmaMater.TranslatedName
                                        </strong>
                                    }
                                </td>

                                @* COUNTRY COLUMN *@
                                <td class="locations-column">
                                    @degree.CountryName
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @* PREV & NEXT PAGER BUTTONS *@
                <div class="field" data-bind="with: pager.input">
                    <button class="link" data-bind="click: prev, enable: prevAllowed" disabled="disabled">&lt;&lt; Previous</button>
                    |
                    <button class="link" data-bind="click: next, enable: nextAllowed" disabled="disabled">Next &gt;&gt;</button>
                </div>
            }
        </div>
        <aside class="on-right from-top" data-fixed-scroll="root">
            <div data-fixed-scroll="anchor"></div>
            <div data-fixed-scroll="content">
                <nav class="side">
                    <ul class="top">
                        <li class="static square-bottom" style="margin-bottom: 0;">
                            <div class="group">
                                <div class="on-left"></div>
                            </div>
                            <div class="group no-link" style="margin-left: 15px;">
                                <span class="text">
                                </span>
                            </div>
                        </li>
                        <li class="static square-bottom">
                            <div class="content">
                                <div class="field">
                                    <div id="campusSelect">
                                        <ul data-bind="foreach: affiliations()">
                                            <li style="margin-bottom: 4px;display: none" data-bind="visible: $parent.hasEstablishmentSelects()">
                                                <div>
                                                    <select class="campusSelect" data-bind="options: options, value: value,
                                                            optionsText: 'text', optionsValue: 'value', jQuery: '$select',
                                                            attr: { id: 'campusSelect' + $index() }"
                                                            style="padding: 1px; margin: initial; height: auto; width: 100%; font-size: 14px;">
                                                        <option>[Loading...]</option>
                                                    </select>
                                                </div>
                                            </li>
                                        </ul>
                                        <span data-bind="visible: !hasEstablishmentSelects()">Loading...</span>
                                        <input type="hidden" data-bind="value: selectedEstablishment" name="ancestorid" />
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                    <ul class="middle">
                        <li class="static square-bottom" style="margin-bottom: 0;">
                            <div class="group">
                                <div class="on-left"></div>
                            </div>
                            <div class="group no-link">
                                <span class="arrow"></span>
                                <span class="text" style="border-radius: 0;">
                                    Filter Options
                                    <img src="~/images/icons/spinner/spinner-20-blue-on-ddd.gif" alt=""
                                         style="margin-left: 4px; display: none;" data-bind="visible: loadingSpinner.isVisible" />
                                </span>
                            </div>
                        </li>
                        <li class="static square-bottom">
                            <div class="content">
                                @* COUNTRY DROPDOWN *@
                                <div class="field">
                                    @Html.DropDownListFor(x => x.Input.CountryCode, Model.CountryOptions, "[All countries]", new
                                    {
                                        @class = "side",
                                        Name = "countryCode",
                                        data_bind = "value: countryCode, options: countryOptions, optionsCaption: '[All countries]', optionsText: 'text', optionsValue: 'value'"
                                    })
                                </div>





                        </li>
                    </ul>
                    <ul class="bottom">
                        <li class="current">
                            <a class="group">
                                <span class="arrow"></span>
                                <span class="text">Table</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>
    </form>
</div>