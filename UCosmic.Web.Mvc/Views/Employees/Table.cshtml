@using System.Globalization
@using UCosmic.Web.Mvc.Models

@model ActivitySearchModel

@{
    ViewBag.Title = "Search Activities";
}



@section bib
{
    <nav class="bib">
        @Html.Partial(MVC.Employees.Views._Bib, new EmployeesBibNavModel { Activities = true })
    </nav>
}



@section styles
{
    <link href="~/styles/sass/sheets/employees/activities-table.css" rel="stylesheet" />
}



@section scripts
{
    <script src="~/scripts/oss/linq.js"></script>
    <script src="~/scripts/app/Pager.js"></script>
    <script src="~/scripts/app/Spinner.js"></script>
    <script>
        @{ Html.RenderPartial(MVC.JavaScriptRoutes.Views.Places); }
        @{ Html.RenderPartial(MVC.JavaScriptRoutes.Views.Establishments); }
    </script>

    @Scripts.Render("~/bundles/activities/table")

    <script>
        var settings = {
            input: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.Input))'),
            output: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.Output))'),
            activityTypes: $.parseJSON('@Html.Raw(Html.SerializeObject(Model.ActivityTypes))'),
            tenantId: parseInt('@ViewBag.EmployeesEstablishmentId'),
            ancestorId: parseInt('@ViewBag.AncestorId'),
        };
        //var searchOptions = JSON.parse(sessionStorage.getItem('ActivitySearchOptions'));
        //if (searchOptions) {
        //    //searchOptions = settings.input;
        //    settings.input.placeNames[0] = searchOptions.placeNames;
        //    $.each(searchOptions.activityTypeIds, function (index, value) {
        //        settings.input.activityTypeIds[index] = parseInt(value);
        //    });
        //}
        var viewModel = new Activities.ViewModels.Search(settings);
        viewModel.applyBindings(document.getElementById('activity_search_form'));
    </script>
}



<div class="content fixed to-top" data-current-module="employees">
    <form class="group" method="GET" id="activity_search_form" data-bind="jQuery: '$form'">
        <div class="on-left from-top">
            @* HEADING & PIVOT RADIOS *@
            <div class="group" style="height:30px;">
                <div class="on-left">
                    <header style=" margin-bottom:0px;">
                        <h1>
                            Advanced Search for
                        </h1>
                    </header>
                </div>
                <div class="on-left">
                    @{
                        var activitiesWeight = Model.Input.Pivot != ActivitySearchPivot.People ? "checked" : null;
                        var peopleWeight = Model.Input.Pivot == ActivitySearchPivot.People ? "checked" : null;
                    }
                    <label class="activities-pivot @activitiesWeight"
                           data-bind="css: { checked: isActivitiesChecked }">
                        <input type="radio" name="pivot" value="@((int)ActivitySearchPivot.Activities)" checked="@(Model.Input.Pivot != ActivitySearchPivot.People ? "checked" : null)"
                               data-bind="checked: pivot" style="cursor: pointer;" />
                        Activities
                    </label>
                    <label class="activities-pivot @peopleWeight"
                           data-bind="css: { checked: isPeopleChecked }">
                        <input type="radio" name="pivot" value="@((int)ActivitySearchPivot.People)" checked="@(Model.Input.Pivot == ActivitySearchPivot.People ? "checked" : null)"
                               data-bind="checked: pivot" style="cursor: pointer;" />
                        People
                    </label>
                </div>
                <div class="on-right" style="margin-top: 8px;">
                    <a href="@Url.Action(MVC.Employees.Table(Model.Domain, null))" class="restore-underline">Reset search</a>
                </div>
            </div>
            <p style="font-size: 12px; display: none; margin:0px; color:grey;" data-bind="visible: pivot()==1">
                The Activities view shows the number of activities tagged to a specific country or body of water.
            </p>
            <p style="font-size: 12px; display: none; margin:0px; color:grey;" data-bind="visible: pivot()==2">
                The People view shows the number of activities tagged to a specific person.
            </p>

            @* KEYWORD TEXT BOX *@
            <table style="border: none; border-collapse: collapse; width: 100%;">
                <tr>
                    <td style="width: 95%;">
                        <div class="field" style="margin-bottom: 0;">
                            <input type="search" value="@Model.Input.Keyword" placeholder="Narrow all displayed activities by keyword" name="keyword"
                                   data-bind="event: { search: onKeywordInputSearchEvent }" />
                        </div>
                    </td>
                    <td style="text-align: right;">
                        <div class="field" style="margin-bottom: 0; margin-left: 12px;">
                            <input type="submit" value="Search" title="Click here or press the enter key to search." style="margin-right: 0;" />
                        </div>
                    </td>
                </tr>
            </table>

            @* PAGER STATUS *@
            @*@if (Model != null && Model.Output.Items.Any())
                {

                }*@

            @* ZERO RESULTS MESSAGE *@
            @if (Model.Output == null || Model.Output.Items == null || !Model.Output.Items.Any())
            {
                <table style="width:100%">
                    <tr>
                        <td>
                            <div style="position:relative; top:10px;">
                                There are no results that match your search terms.
                            </div>
                        </td>
                        <td align="right">
                            @* SORT DROPDOWN *@
                            <div class="field"
                                 style=" margin: 10px 0 0 0;">
                                @Html.DropDownListFor(x => x.Input.OrderBy,
                                                    new[]
                                                    {
                                                        new SelectListItem { Text = "Sort with most recent at top", Value = "recency-desc" },
                                                        new SelectListItem { Text = "Sort with most recent at bottom", Value = "recency-asc" },
                                                        new SelectListItem { Text = "Sort by activity title A-Z", Value = "title-asc" },
                                                        new SelectListItem { Text = "Sort by activity title Z-A", Value = "title-desc" },
                                                        new SelectListItem { Text = "Sort by location A-Z", Value = "location-asc" },
                                                        new SelectListItem { Text = "Sort by location Z-A", Value = "location-desc" },
                                                        new SelectListItem { Text = "Sort by person last name A-Z", Value = "lastname-asc" },
                                                        new SelectListItem { Text = "Sort by person last name Z-A", Value = "lastname-desc" },
                                                        new SelectListItem { Text = "Sort by type A-Z", Value = "type-asc" },
                                                        new SelectListItem { Text = "Sort by type Z-A", Value = "type-desc" },
                                                    },
                                                    new
                                                    {
                                                        @class = "side",
                                                        Name = "orderBy",
                                                        data_bind = "value: orderBy",
                                                    })
                            </div>

                            @* PAGE SIZE DROPDOWN *@
                            <div class="field"
                                 style="margin:0;">
                                @Html.DropDownListFor(x => x.Input.PageSize,
                                                    new[]
                                                    {
                                                        new SelectListItem { Text = "Show 10 results per page", Value = "10" },
                                                        new SelectListItem { Text = "Show 20 results per page", Value = "20" },
                                                        new SelectListItem { Text = "Show 50 results per page", Value = "50" },
                                                        new SelectListItem { Text = "Show 100 results per page", Value = "100" },
                                                        new SelectListItem { Text = "Show 250 results per page", Value = "250" },
                                                    },
                                                    new
                                                    {
                                                        @class = "side",
                                                        Name = "pageSize",
                                                        data_bind = "value: pager.input.pageSizeText"
                                                    })
                            </div>
                        </td>
                    </tr>
                </table>
            }
            else
            {
                var activitiesDisplay = Model.Input.Pivot != ActivitySearchPivot.People ? "table" : "none";
                var peopleDisplay = Model.Input.Pivot == ActivitySearchPivot.People ? "table" : "none";

                <table style="width:100%">
                    <tr>
                        <td>
                            <div style="height: 40px; ">
                                <strong>
                                    Showing <span>@Model.Output.FirstNumber</span>
                                    @if (@Model.Output.PageCount > 0)
                                    {
                                        <span>- <span>@Model.Output.LastNumber</span></span>
                                    }
                                    of <span>@Model.Output.ItemTotal</span>
                                    @if (@Model.Output.ItemTotal > 1)
                                    {
                                        <span>activities</span>
                                    }
                                    else
                                    {
                                        <span>activity</span>
                                    }
                                </strong>
                                @if (Model != null && Model.Output != null && Model.Output.PageCount > 0)
                                {
                                    <span>
                                        (page
                                        @Html.DropDownListFor(x => x.Output.PageNumber, Enumerable.Range(1, Model.Output.PageCount)
                                .Select(x => new SelectListItem
                                {
                                    Text = x.ToString(CultureInfo.InvariantCulture),
                                    Value = x.ToString(CultureInfo.InvariantCulture),
                                }),
                                new
                                {
                                    Name = "pageNumber",
                                    data_bind = "value: pager.input.pageNumberText",
                                    style = "padding: 0; margin: 0; line-height: 16px; height: auto;",
                                })
                                        of <span>@Model.Output.PageCount</span>)
                                    </span>
                                }
                                @if (@Model.Output.peopleTotal > 0)
                                {
                                    <strong style="display:block;">
                                        <span> from @Model.Output.peopleTotal</span>
                                        @if (@Model.Output.peopleTotal > 1)
                                        {
                                            <span>people.</span>
                                        }
                                        else
                                        {
                                            <span>person.</span>
                                        }
                                    </strong>
                                }
                            </div>

                            @* PREV & NEXT PAGER BUTTONS *@
                            <div style="margin: 5px 0 0 0; width:180px; float:left;" class="field" data-bind="with: pager.input">
                                <button class="link" data-bind="click: prev, enable: prevAllowed" disabled="disabled">&lt;&lt; Previous</button>
                                |
                                <button class="link" data-bind="click: next, enable: nextAllowed" disabled="disabled">Next &gt;&gt;</button>
                            </div>
                            <div style="margin: 5px 0 0 0; display: none; float:left" data-bind="visible: loadingSpinner.isVisible">
                                <img src="~/images/icons/spinner/spinner-20-blue.gif" alt="" />
                                <strong>Loading...</strong>
                            </div>
                        </td>
                        <td align="right">
                            @* SORT DROPDOWN *@
                            <div class="field"
                                 style=" margin: 10px 0 0 0;">
                                @Html.DropDownListFor(x => x.Input.OrderBy,
                                                    new[]
                                                    {
                                                        new SelectListItem { Text = "Sort with most recent at top", Value = "recency-desc" },
                                                        new SelectListItem { Text = "Sort with most recent at bottom", Value = "recency-asc" },
                                                        new SelectListItem { Text = "Sort by activity title A-Z", Value = "title-asc" },
                                                        new SelectListItem { Text = "Sort by activity title Z-A", Value = "title-desc" },
                                                        new SelectListItem { Text = "Sort by location A-Z", Value = "location-asc" },
                                                        new SelectListItem { Text = "Sort by location Z-A", Value = "location-desc" },
                                                        new SelectListItem { Text = "Sort by person last name A-Z", Value = "lastname-asc" },
                                                        new SelectListItem { Text = "Sort by person last name Z-A", Value = "lastname-desc" },
                                                        new SelectListItem { Text = "Sort by type A-Z", Value = "type-asc" },
                                                        new SelectListItem { Text = "Sort by type Z-A", Value = "type-desc" },
                                                    },
                                                    new
                                                    {
                                                        @class = "side",
                                                        Name = "orderBy",
                                                        data_bind = "value: orderBy",
                                                        style = "width: 220px;"
                                                    })
                            </div>

                            @* PAGE SIZE DROPDOWN *@
                            <div class="field"
                                 style="margin:4px 0;">
                                @Html.DropDownListFor(x => x.Input.PageSize,
                                                    new[]
                                                    {
                                                        new SelectListItem { Text = "Show 10 results per page", Value = "10" },
                                                        new SelectListItem { Text = "Show 20 results per page", Value = "20" },
                                                        new SelectListItem { Text = "Show 50 results per page", Value = "50" },
                                                        new SelectListItem { Text = "Show 100 results per page", Value = "100" },
                                                        new SelectListItem { Text = "Show 250 results per page", Value = "250" },
                                                    },
                                                    new
                                                    {
                                                        @class = "side",
                                                        Name = "pageSize",
                                                        data_bind = "value: pager.input.pageSizeText",
                                                        style = "width: 220px;"
                                                    })
                            </div>
                        </td>
                    </tr>



                </table>

                @* ACTIVITY RESULTS TABLE *@
                <table class="data" style="display: @activitiesDisplay; margin: 8px 0;" data-bind="visible: isActivitiesChecked">
                    <colgroup>
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Location(s)</th>
                            <th>Activity Title</th>
                            <th>Type(s)</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody class="searchResults">
                        @foreach (var activity in Model.Output.Items)
                        {
                            <tr>
                                @* LOCATIONS COLUMN *@
                                <td class="locations-column">
                                    <ul style="display: inline-block;">
                                        @foreach (var place in activity.Places)
                                        {
                                            <li class="comma-list"><span>@place.PlaceName</span></li>
                                        }
                                    </ul>
                                </td>

                                @* TITLE COLUMN *@
                                <td style="vertical-align: top;">
                                    <a href="@Url.Action(MVC.Activities.Details(activity.ActivityId))">
                                        @activity.Title
                                    </a>
                                    - @activity.Owner.DisplayName
                                </td>

                                @* TYPE ICONS COLUMN *@
                                <td style="vertical-align: top;">
                                    <table style="border: none;" class="no-data">
                                        <tr>
                                            @for (var i = 0; i < activity.Types.Length; i++)
                                            {
                                                <td style="border: none; margin: 2px; padding: 2px;">
                                                    <span style="display: inline-block; width: 32px; text-align: center;">
                                                        <img title="@activity.Types[i].Text" height="24"
                                                             src="@Url.HttpRouteUrl(null, new {controller = "EmployeeModuleSettings", action = "GetIcon", typeId = activity.Types[i].TypeId})" alt="" />
                                                    </span>
                                                </td>
                                                //How many columns per row
                                                if ((i + 1) % 2 == 0)
                                                {
                                                    Html.Raw("</tr>");
                                                    Html.Raw("<tr>");
                                                }
                                            }
                                        </tr>
                                    </table>
                                </td>

                                @* DATES COLUMN *@
                                <td style="vertical-align: top;">
                                    @{Html.RenderPartial(MVC.Employees.Views._ActivityDatesDisplay, activity);}
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @* PEOPLE RESULTS TABLE *@
                <table class="data" style="display: @peopleDisplay;" data-bind="visible: isPeopleChecked">
                    <colgroup>
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                        <col style="vertical-align: top;" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Who</th>
                            <th>What</th>
                            <th>Where</th>
                            <th>When</th>
                        </tr>
                    </thead>
                    <tbody class="searchResults">
                        @foreach (var activity in Model.Output.Items)
                        {
                            <tr>
                                @* PERSON COLUMN *@
                                <td class="person-column">
                                    <a href="@Url.Action(MVC.People.Activities(activity.Owner.PersonId, null))">
                                        @activity.Owner.LastCommaFirst
                                    </a>
                                </td>

                                @* TITLE COLUMN *@
                                <td style="vertical-align: top;">
                                    <a href="@Url.Action(MVC.Activities.Details(activity.ActivityId))">
                                        @activity.Title
                                    </a>
                                    @if (activity.Types.Any())
                                    {
                                        <ul style="display: inline;">
                                            @foreach (var type in activity.Types)
                                            {
                                                <li style="display: inline;">
                                                    <img style="vertical-align: top; margin-left: 4px; margin-top: 2px; max-width: 16px;" title="@type.Text" height="16"
                                                         src="@Url.HttpRouteUrl(null, new {controller = "EmployeeModuleSettings", action = "GetIcon", typeId = type.TypeId})" alt="(@type.Text)" />
                                                </li>
                                            }
                                        </ul>
                                    }
                                </td>

                                @* LOCATIONS COLUMN *@
                                <td class="locations-column">
                                    <ul style="display: inline-block;">
                                        @foreach (var place in activity.Places)
                                        {
                                            <li class="comma-list"><span>@place.PlaceName</span></li>
                                        }
                                    </ul>
                                </td>

                                @* DATES COLUMN*@
                                <td style="vertical-align: top;">
                                    @{Html.RenderPartial(MVC.Employees.Views._ActivityDatesDisplay, activity);}
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @* PREV & NEXT PAGER BUTTONS *@
                <div class="field" data-bind="with: pager.input">
                    <button class="link" data-bind="click: prev, enable: prevAllowed" disabled="disabled">&lt;&lt; Previous</button>
                    |
                    <button class="link" data-bind="click: next, enable: nextAllowed" disabled="disabled">Next &gt;&gt;</button>
                </div>
            }
        </div>
        <aside class="on-right from-top" data-fixed-scroll="root">
            <div data-fixed-scroll="anchor"></div>
            <div data-fixed-scroll="content">
                <nav class="side">

                    <ul class="top">
                        <li class="static square-bottom" style="margin-bottom: 0;">
                            <div class="group">
                                <div class="on-left"></div>
                            </div>
                            <div class="group no-link" style="margin-left: 15px;">
                                <span class="text">
                                </span>
                            </div>
                        </li>
                        <li class="static square-bottom">
                            <div class="content">
                                <div class="field">
                                    <div>
                                        <ul data-bind="foreach: affiliations()">
                                            <li style="margin-bottom: 4px;display: none" data-bind="visible: $parent.hasEstablishmentSelects()">
                                                <div>
                                                    <select class="campusSelect" data-bind="options: options, value: value,
                                                            optionsText: 'text', optionsValue: 'value', jQuery: '$select',
                                                            attr: { id: 'campusSelect' + $index() }"
                                                            style="padding: 1px; margin: initial; height: auto; width: 100%; font-size: 14px;">
                                                        <option>[Loading...]</option>
                                                    </select>
                                                </div>
                                            </li>
                                        </ul>
                                        <span data-bind="visible: !hasEstablishmentSelects()">Loading...</span>
                                        <input type="hidden" data-bind="value: selectedEstablishment" name="ancestorid" />
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                    <ul class="middle">
                        <li class="static square-bottom " style="margin-bottom: 0;">
                            <div class="group">
                                <div class="on-left"></div>
                            </div>
                            <div class="group no-link">
                                <span class="arrow"></span>
                                <span class="text" style="border-radius: 0;">
                                    Filter by location
                                    <img src="~/images/icons/spinner/spinner-20-blue-on-ddd.gif" alt=""
                                         style="margin-left: 4px; display: none;" data-bind="visible: loadingSpinner.isVisible" />
                                </span>
                            </div>
                        </li>
                        <li class="static square-bottom">
                            <div class="content">
                                @* LOCATION AUTOCOMPLETE *@
                                <div class="location combobox field">
                                    <input name="placeNames" type="text" placeholder="[Filter by location]" data-bind="jQuery: '$location'"
                                           value="@(Model.Input.PlaceNames != null && Model.Input.PlaceNames.Any() ? Model.Input.PlaceNames.First() : "")"
                                           class="side" />
                                    <input name="placeIds" type="hidden" data-bind="jQuery: '$placeIds'"
                                           value="@(Model.Input.PlaceIds != null && Model.Input.PlaceIds.Any() ? Model.Input.PlaceIds.First() : (int?)null)" />
                                </div>

                                @* ACTIVITY TYPE CHECKBOXES *@
                                @if (Model.ActivityTypes != null && Model.ActivityTypes.Any())
                                {
                                    <div class="field" style="margin-top: 12px;">
                                        <strong>Filter by activity type</strong>
                                        <ol style="color: #000; font-size: 13px; margin-top: 4px;">
                                            @for (var i = 0; i < Model.ActivityTypes.Count(); i++)
                                            {
                                                var activityType = Model.ActivityTypes.ElementAt(i);
                                                var isChecked = Model.Input.ActivityTypeIds == null ||
                                                                !Model.Input.ActivityTypeIds.Any() ||
                                                                Model.Input.ActivityTypeIds.Contains(activityType.ActivityTypeId)
                                                    ? "checked" : null;
                                                var checkBoxId = string.Format("activity_type_checkbox_{0}", Guid.NewGuid());
                                                <li>
                                                    <div class="group">
                                                        <div class="on-left">
                                                            <label style="cursor: pointer;" data-bind="with: activityTypeCheckBoxes()[@i]">
                                                                <input type="checkbox" id="@checkBoxId"
                                                                       name="activityTypeIds" value="@activityType.ActivityTypeId" checked="@isChecked"
                                                                       style="cursor: pointer;" data-bind="checked: isChecked" />
                                                                <img title="@activityType.Text" width="14" alt="" style="margin-top: -6px; cursor: pointer;"
                                                                     src="@Url.HttpRouteUrl(null, new { controller = "EmployeeModuleSettings", action = "GetIcon", typeId = activityType.ActivityTypeId })" />
                                                            </label>
                                                        </div>
                                                        <div class="on-left" style="width: 180px; margin-left: 4px; margin-top: -2px;">
                                                            <label style="cursor: pointer; vertical-align: top;" for="@checkBoxId">
                                                                @activityType.Text
                                                            </label>
                                                        </div>
                                                    </div>
                                                </li>
                                            }
                                        </ol>
                                        <div style="margin-top: 4px;">
                                            <input type="submit" value="Search"
                                                   style="font-size: 14px; line-height: normal; padding: 4px 8px; margin-right: 4px;" />
                                            @{ var checkAllDisabled = Model.Input.ActivityTypeIds == null || !Model.Input.ActivityTypeIds.Any()
                                                                      || Model.Input.ActivityTypeIds.All(x => Model.ActivityTypes.Select(y => y.ActivityTypeId).Contains(x))
                                                   ? "disabled" : null; }
                                            <button type="button" class="link"
                                                    data-bind="click: checkAllActivityTypes, disable: isCheckAllActivityTypesDisabled"
                                                    style="font-size: 14px; line-height: normal; margin-right: 4px;" disabled="@checkAllDisabled">
                                                Check all
                                            </button>
                                            <button type="button" class="link"
                                                    data-bind="click: uncheckAllActivityTypes, disable: isUncheckAllActivityTypesDisabled"
                                                    style="font-size: 14px; line-height: normal;">
                                                Uncheck all
                                            </button>
                                        </div>
                                    </div>
                                }

                                @* DATE FIELDS *@
                                <div class="dates picker field" style="margin-top: 12px;">
                                    <strong>Filter by date(s)</strong>
                                    <div class="group">
                                        <div class="on-left" style="width: 110px;">
                                            <input type="text" name="Since" placeholder="From" class="side" value="@Model.Input.Since" data-role="datepicker"
                                                   data-bind="value: since, valueUpdate: 'afterkeydown', jQuery: '$since'" />
                                        </div>
                                        <div class="on-right" style="width: 110px;">
                                            <input type="text" name="Until" placeholder="To" class="side" value="@Model.Input.Until" data-role="datepicker"
                                                   data-bind="value: until, valueUpdate: 'afterkeydown', jQuery: '$until'" />
                                        </div>
                                    </div>
                                    <div style="font-size: 12px; color: #555;">
                                        YYYY or M/YYYY or M/D/YYYY
                                    </div>
                                    <div style="color: #000; font-size: 13px; line-height: 13px; margin-top: 4px;">
                                        @{
                                            var includeUndated = Model.Input.IncludeUndated == null ||
                                                                 Model.Input.IncludeUndated.Value
                                                ? "checked" : null;
                                        }
                                        <label style="cursor: pointer; vertical-align: top;">
                                            <input type="checkbox" name="includeUndated" checked="@includeUndated" value="true" style="cursor: pointer;" /> Include undated activities
                                            <input type="hidden" name="includeUndated" value="false" />
                                        </label>
                                    </div>
                                    <div style="margin-top: 8px">
                                        @{
                                            var clearSinceDisabled = string.IsNullOrWhiteSpace(Model.Input.Since) ? "disabled" : null;
                                            var clearUntilDisabled = string.IsNullOrWhiteSpace(Model.Input.Until) ? "disabled" : null;
                                        }
                                        <input type="submit" value="Search" style="font-size: 14px; line-height: normal; padding: 4px 8px; margin-right: 4px;" />
                                        <button type="button" class="link"
                                                data-bind="click: clearSince, disable: isClearSinceDisabled"
                                                disabled="@clearSinceDisabled"
                                                style="font-size: 14px; line-height: normal; margin-right: 4px;">
                                            Clear from
                                        </button>
                                        <button type="button" class="link"
                                                data-bind="click: clearUntil, disable: isClearUntilDisabled"
                                                disabled="@clearUntilDisabled"
                                                style="font-size: 14px; line-height: normal;">
                                            Clear to
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>



                    <ul class="bottom">
                        <li>
                            <a href="@Url.Action(MVC.Employees.TenantIndex(Model.Domain))" class="group">
                                <span class="arrow"></span>
                                <span class="text">Global Snapshot</span>
                            </a>
                        </li>
                        <li class="current">
                            <a class="group">
                                <span class="arrow"></span>
                                <span class="text">Advanced Search (Table)</span>
                            </a>
                        </li>
                        <li>
                            @{
                                var mapUrl = Url.Action(MVC.Employees.Map());
                                if (Request.QueryString != null && !string.IsNullOrWhiteSpace(Request.QueryString.ToString()))
                                {
                                    mapUrl = string.Format("{0}?{1}", mapUrl, Request.QueryString);
                                }
                            }
                            <a style=" display: none;" href="@mapUrl" class="group" data-bind="visible: !MapDataIsLoading()">
                                <span class="arrow"></span>
                                <span class="text">Advanced Search (Map)</span>
                            </a>
                            <a class="group" style="cursor: not-allowed" data-bind="visible: MapDataIsLoading">
                                <span class="arrow"></span>
                                <span class="text">
                                    <img src="~/images/icons/spinner/spinner-20-grey.gif" alt="" />
                                    <strong title="This can take a few minutes.">Loading Search (Map)...</strong>
                                </span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>
    </form>
</div>