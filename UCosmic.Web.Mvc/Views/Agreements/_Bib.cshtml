@{
    var tenancy = Request.Tenancy();
    var styleDomain = tenancy != null ? tenancy.StyleDomain : "default";
    var hasStyleDomain = !string.IsNullOrWhiteSpace(styleDomain);
}
<ul class="group">
    <li class="search_table" >
        <a  href="@Url.Action(hasStyleDomain ? MVC.Agreements.TenantIndex(styleDomain) : MVC.Agreements.Index())#/table/">Table</a>
    </li>
    <li class="search_map" >
        <a  href="@Url.Action(hasStyleDomain ? MVC.Agreements.TenantIndex(styleDomain) : MVC.Agreements.Index())#/map/">Map</a>
    </li>
    @if (User.IsInAnyRole(RoleName.AgreementManagers))
    {
        <li class="new">
            <a href="@Url.Action(MVC.Agreements.New())">New</a>
        </li>
    }
    @if (ViewBag.Show != null)
    {
        <li class="show">
            @if (ViewBag.Show is int)
            {
                <a href="@Url.Action(MVC.Agreements.Show((int)ViewBag.Show))">Details</a>
            }
            else
            {
                <span>Details</span>
            }
        </li>
    }
    @if (ViewBag.Edit != null && User.IsInAnyRole(RoleName.AgreementManagers))
    {
        <li class="edit">
            @if (ViewBag.Edit is int)
            {
                <a href="@Url.Action(MVC.Agreements.Edit((int)ViewBag.Edit))">Edit</a>
            }
            else
            {
                <span>Edit</span>
            }
        </li>
    }
    @if (User.IsInAnyRole(RoleName.AgreementSupervisor))
    {
        <li class="settings">
            <a href="@Url.Action(MVC.Agreements.Settings())">Settings</a>
        </li>
    }
    

</ul>
