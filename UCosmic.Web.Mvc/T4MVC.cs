// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC
{
    public static UCosmic.Web.Mvc.Controllers.ActivitiesController Activities = new UCosmic.Web.Mvc.Controllers.T4MVC_ActivitiesController();
    public static UCosmic.Web.Mvc.Controllers.AdminController Admin = new UCosmic.Web.Mvc.Controllers.T4MVC_AdminController();
    public static UCosmic.Web.Mvc.Controllers.AdminFirebaseController AdminFirebase = new UCosmic.Web.Mvc.Controllers.T4MVC_AdminFirebaseController();
    public static UCosmic.Web.Mvc.Controllers.AgreementsController Agreements = new UCosmic.Web.Mvc.Controllers.T4MVC_AgreementsController();
    public static UCosmic.Web.Mvc.Controllers.ApiTestController ApiTest = new UCosmic.Web.Mvc.Controllers.T4MVC_ApiTestController();
    public static UCosmic.Web.Mvc.Controllers.EmployeesController Employees = new UCosmic.Web.Mvc.Controllers.T4MVC_EmployeesController();
    public static UCosmic.Web.Mvc.Controllers.ErrorsController Errors = new UCosmic.Web.Mvc.Controllers.T4MVC_ErrorsController();
    public static UCosmic.Web.Mvc.Controllers.EstablishmentsController Establishments = new UCosmic.Web.Mvc.Controllers.T4MVC_EstablishmentsController();
    public static UCosmic.Web.Mvc.Controllers.FacultyStaffController FacultyStaff = new UCosmic.Web.Mvc.Controllers.T4MVC_FacultyStaffController();
    public static UCosmic.Web.Mvc.Controllers.HomeController Home = new UCosmic.Web.Mvc.Controllers.T4MVC_HomeController();
    public static UCosmic.Web.Mvc.Controllers.IdentityController Identity = new UCosmic.Web.Mvc.Controllers.T4MVC_IdentityController();
    public static UCosmic.Web.Mvc.Controllers.JavaScriptRoutesController JavaScriptRoutes = new UCosmic.Web.Mvc.Controllers.T4MVC_JavaScriptRoutesController();
    public static UCosmic.Web.Mvc.Controllers.MyProfileController MyProfile = new UCosmic.Web.Mvc.Controllers.T4MVC_MyProfileController();
    public static UCosmic.Web.Mvc.Controllers.PeopleController People = new UCosmic.Web.Mvc.Controllers.T4MVC_PeopleController();
    public static UCosmic.Web.Mvc.Controllers.ReceiveSamlAuthnResponseController ReceiveSamlAuthnResponse = new UCosmic.Web.Mvc.Controllers.T4MVC_ReceiveSamlAuthnResponseController();
    public static UCosmic.Web.Mvc.Controllers.RepsController Reps = new UCosmic.Web.Mvc.Controllers.T4MVC_RepsController();
    public static UCosmic.Web.Mvc.Controllers.SamlMetadataController SamlMetadata = new UCosmic.Web.Mvc.Controllers.T4MVC_SamlMetadataController();
    public static UCosmic.Web.Mvc.Controllers.StudentsController Students = new UCosmic.Web.Mvc.Controllers.T4MVC_StudentsController();
    public static UCosmic.Web.Mvc.Controllers.SummaryController Summary = new UCosmic.Web.Mvc.Controllers.T4MVC_SummaryController();
    public static UCosmic.Web.Mvc.Controllers.TenancyController Tenancy = new UCosmic.Web.Mvc.Controllers.T4MVC_TenancyController();
    public static UCosmic.Web.Mvc.Controllers.UsersController Users = new UCosmic.Web.Mvc.Controllers.T4MVC_UsersController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_System_Web_Mvc_RedirectToRouteResult : System.Web.Mvc.RedirectToRouteResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_RedirectToRouteResult(string area, string controller, string action, string protocol = null): base(" ", default(System.Web.Routing.RouteValueDictionary), default(bool))
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_System_Web_Mvc_RedirectResult : System.Web.Mvc.RedirectResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_RedirectResult(string area, string controller, string action, string protocol = null): base(" ", default(bool))
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class scripts {
        private const string URLPATH = "~/scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
                      
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class app {
            private const string URLPATH = "~/scripts/app";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string App_ts = Url("App.ts");
            public static readonly string App_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/App.min.js") ? Url("App.min.js") : Url("App.js");
                          
            public static readonly string DataCacher_ts = Url("DataCacher.ts");
            public static readonly string DataCacher_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/DataCacher.min.js") ? Url("DataCacher.min.js") : Url("DataCacher.js");
                          
            public static readonly string Flasher_ts = Url("Flasher.ts");
            public static readonly string Flasher_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Flasher.min.js") ? Url("Flasher.min.js") : Url("Flasher.js");
                          
            public static readonly string FormSelect_ts = Url("FormSelect.ts");
            public static readonly string FormSelect_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/FormSelect.min.js") ? Url("FormSelect.min.js") : Url("FormSelect.js");
                          
            public static readonly string HistoryJS_ts = Url("HistoryJS.ts");
            public static readonly string HistoryJS_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HistoryJS.min.js") ? Url("HistoryJS.min.js") : Url("HistoryJS.js");
                          
            public static readonly string ImageSwapper_ts = Url("ImageSwapper.ts");
            public static readonly string ImageSwapper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ImageSwapper.min.js") ? Url("ImageSwapper.min.js") : Url("ImageSwapper.js");
                          
            public static readonly string Models_d_ts = Url("Models.d.ts");
            public static readonly string PagedSearch_ts = Url("PagedSearch.ts");
            public static readonly string PagedSearch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PagedSearch.min.js") ? Url("PagedSearch.min.js") : Url("PagedSearch.js");
                          
            public static readonly string Pager_ts = Url("Pager.ts");
            public static readonly string Pager_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Pager.min.js") ? Url("Pager.min.js") : Url("Pager.js");
                          
            public static readonly string Pagination_d_ts = Url("Pagination.d.ts");
            public static readonly string Routes_d_ts = Url("Routes.d.ts");
            public static readonly string Routes_ts = Url("Routes.ts");
            public static readonly string Routes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Routes.min.js") ? Url("Routes.min.js") : Url("Routes.js");
                          
            public static readonly string SideSwiper_ts = Url("SideSwiper.ts");
            public static readonly string SideSwiper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SideSwiper.min.js") ? Url("SideSwiper.min.js") : Url("SideSwiper.js");
                          
            public static readonly string Spinner_ts = Url("Spinner.ts");
            public static readonly string Spinner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Spinner.min.js") ? Url("Spinner.min.js") : Url("Spinner.js");
                          
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class google {
            private const string URLPATH = "~/scripts/google";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string ColumnChart_ts = Url("ColumnChart.ts");
            public static readonly string ColumnChart_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColumnChart.min.js") ? Url("ColumnChart.min.js") : Url("ColumnChart.js");
                          
            public static readonly string GeoChart_ts = Url("GeoChart.ts");
            public static readonly string GeoChart_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/GeoChart.min.js") ? Url("GeoChart.min.js") : Url("GeoChart.js");
                          
            public static readonly string LineChart_ts = Url("LineChart.ts");
            public static readonly string LineChart_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LineChart.min.js") ? Url("LineChart.min.js") : Url("LineChart.js");
                          
            public static readonly string Map_ts = Url("Map.ts");
            public static readonly string Map_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Map.min.js") ? Url("Map.min.js") : Url("Map.js");
                          
            public static readonly string ToolsOverlay_ts = Url("ToolsOverlay.ts");
            public static readonly string ToolsOverlay_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ToolsOverlay.min.js") ? Url("ToolsOverlay.min.js") : Url("ToolsOverlay.js");
                          
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class history {
            private const string URLPATH = "~/scripts/history";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string amplify_store_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/amplify.store.min.js") ? Url("amplify.store.min.js") : Url("amplify.store.js");
                          
            public static readonly string history_adapter_dojo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/history.adapter.dojo.min.js") ? Url("history.adapter.dojo.min.js") : Url("history.adapter.dojo.js");
                          
            public static readonly string history_adapter_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/history.adapter.jquery.min.js") ? Url("history.adapter.jquery.min.js") : Url("history.adapter.jquery.js");
                          
            public static readonly string history_adapter_mootools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/history.adapter.mootools.min.js") ? Url("history.adapter.mootools.min.js") : Url("history.adapter.mootools.js");
                          
            public static readonly string history_adapter_prototype_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/history.adapter.prototype.min.js") ? Url("history.adapter.prototype.min.js") : Url("history.adapter.prototype.js");
                          
            public static readonly string history_adapter_yui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/history.adapter.yui.min.js") ? Url("history.adapter.yui.min.js") : Url("history.adapter.yui.js");
                          
            public static readonly string history_adapter_zepto_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/history.adapter.zepto.min.js") ? Url("history.adapter.zepto.min.js") : Url("history.adapter.zepto.js");
                          
            public static readonly string history_html4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/history.html4.min.js") ? Url("history.html4.min.js") : Url("history.html4.js");
                          
            public static readonly string history_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/history.min.js") ? Url("history.min.js") : Url("history.js");
                          
            public static readonly string json2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json2.min.js") ? Url("json2.min.js") : Url("json2.js");
                          
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery {
            private const string URLPATH = "~/scripts/jquery";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_1_9_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.9.1.intellisense.min.js") ? Url("jquery-1.9.1.intellisense.min.js") : Url("jquery-1.9.1.intellisense.js");
                          
            public static readonly string jquery_1_9_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.9.1.min.js") ? Url("jquery-1.9.1.min.js") : Url("jquery-1.9.1.js");
                          
            public static readonly string jquery_1_9_1_min_js = Url("jquery-1.9.1.min.js");
            public static readonly string jquery_ui_1_9_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.9.2.min.js") ? Url("jquery-ui-1.9.2.min.js") : Url("jquery-ui-1.9.2.js");
                          
            public static readonly string jquery_ui_1_9_2_min_js = Url("jquery-ui-1.9.2.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery_globalize {
                private const string URLPATH = "~/scripts/jquery/jquery.globalize";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class cultures {
                    private const string URLPATH = "~/scripts/jquery/jquery.globalize/cultures";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string globalize_culture_af_ZA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.af-ZA.min.js") ? Url("globalize.culture.af-ZA.min.js") : Url("globalize.culture.af-ZA.js");
                                  
                    public static readonly string globalize_culture_af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.af.min.js") ? Url("globalize.culture.af.min.js") : Url("globalize.culture.af.js");
                                  
                    public static readonly string globalize_culture_am_ET_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.am-ET.min.js") ? Url("globalize.culture.am-ET.min.js") : Url("globalize.culture.am-ET.js");
                                  
                    public static readonly string globalize_culture_am_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.am.min.js") ? Url("globalize.culture.am.min.js") : Url("globalize.culture.am.js");
                                  
                    public static readonly string globalize_culture_ar_AE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-AE.min.js") ? Url("globalize.culture.ar-AE.min.js") : Url("globalize.culture.ar-AE.js");
                                  
                    public static readonly string globalize_culture_ar_BH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-BH.min.js") ? Url("globalize.culture.ar-BH.min.js") : Url("globalize.culture.ar-BH.js");
                                  
                    public static readonly string globalize_culture_ar_DZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-DZ.min.js") ? Url("globalize.culture.ar-DZ.min.js") : Url("globalize.culture.ar-DZ.js");
                                  
                    public static readonly string globalize_culture_ar_EG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-EG.min.js") ? Url("globalize.culture.ar-EG.min.js") : Url("globalize.culture.ar-EG.js");
                                  
                    public static readonly string globalize_culture_ar_IQ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-IQ.min.js") ? Url("globalize.culture.ar-IQ.min.js") : Url("globalize.culture.ar-IQ.js");
                                  
                    public static readonly string globalize_culture_ar_JO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-JO.min.js") ? Url("globalize.culture.ar-JO.min.js") : Url("globalize.culture.ar-JO.js");
                                  
                    public static readonly string globalize_culture_ar_KW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-KW.min.js") ? Url("globalize.culture.ar-KW.min.js") : Url("globalize.culture.ar-KW.js");
                                  
                    public static readonly string globalize_culture_ar_LB_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-LB.min.js") ? Url("globalize.culture.ar-LB.min.js") : Url("globalize.culture.ar-LB.js");
                                  
                    public static readonly string globalize_culture_ar_LY_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-LY.min.js") ? Url("globalize.culture.ar-LY.min.js") : Url("globalize.culture.ar-LY.js");
                                  
                    public static readonly string globalize_culture_ar_MA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-MA.min.js") ? Url("globalize.culture.ar-MA.min.js") : Url("globalize.culture.ar-MA.js");
                                  
                    public static readonly string globalize_culture_ar_OM_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-OM.min.js") ? Url("globalize.culture.ar-OM.min.js") : Url("globalize.culture.ar-OM.js");
                                  
                    public static readonly string globalize_culture_ar_QA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-QA.min.js") ? Url("globalize.culture.ar-QA.min.js") : Url("globalize.culture.ar-QA.js");
                                  
                    public static readonly string globalize_culture_ar_SA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-SA.min.js") ? Url("globalize.culture.ar-SA.min.js") : Url("globalize.culture.ar-SA.js");
                                  
                    public static readonly string globalize_culture_ar_SY_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-SY.min.js") ? Url("globalize.culture.ar-SY.min.js") : Url("globalize.culture.ar-SY.js");
                                  
                    public static readonly string globalize_culture_ar_TN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-TN.min.js") ? Url("globalize.culture.ar-TN.min.js") : Url("globalize.culture.ar-TN.js");
                                  
                    public static readonly string globalize_culture_ar_YE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar-YE.min.js") ? Url("globalize.culture.ar-YE.min.js") : Url("globalize.culture.ar-YE.js");
                                  
                    public static readonly string globalize_culture_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ar.min.js") ? Url("globalize.culture.ar.min.js") : Url("globalize.culture.ar.js");
                                  
                    public static readonly string globalize_culture_arn_CL_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.arn-CL.min.js") ? Url("globalize.culture.arn-CL.min.js") : Url("globalize.culture.arn-CL.js");
                                  
                    public static readonly string globalize_culture_arn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.arn.min.js") ? Url("globalize.culture.arn.min.js") : Url("globalize.culture.arn.js");
                                  
                    public static readonly string globalize_culture_as_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.as-IN.min.js") ? Url("globalize.culture.as-IN.min.js") : Url("globalize.culture.as-IN.js");
                                  
                    public static readonly string globalize_culture_as_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.as.min.js") ? Url("globalize.culture.as.min.js") : Url("globalize.culture.as.js");
                                  
                    public static readonly string globalize_culture_az_Cyrl_AZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.az-Cyrl-AZ.min.js") ? Url("globalize.culture.az-Cyrl-AZ.min.js") : Url("globalize.culture.az-Cyrl-AZ.js");
                                  
                    public static readonly string globalize_culture_az_Cyrl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.az-Cyrl.min.js") ? Url("globalize.culture.az-Cyrl.min.js") : Url("globalize.culture.az-Cyrl.js");
                                  
                    public static readonly string globalize_culture_az_Latn_AZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.az-Latn-AZ.min.js") ? Url("globalize.culture.az-Latn-AZ.min.js") : Url("globalize.culture.az-Latn-AZ.js");
                                  
                    public static readonly string globalize_culture_az_Latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.az-Latn.min.js") ? Url("globalize.culture.az-Latn.min.js") : Url("globalize.culture.az-Latn.js");
                                  
                    public static readonly string globalize_culture_az_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.az.min.js") ? Url("globalize.culture.az.min.js") : Url("globalize.culture.az.js");
                                  
                    public static readonly string globalize_culture_ba_RU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ba-RU.min.js") ? Url("globalize.culture.ba-RU.min.js") : Url("globalize.culture.ba-RU.js");
                                  
                    public static readonly string globalize_culture_ba_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ba.min.js") ? Url("globalize.culture.ba.min.js") : Url("globalize.culture.ba.js");
                                  
                    public static readonly string globalize_culture_be_BY_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.be-BY.min.js") ? Url("globalize.culture.be-BY.min.js") : Url("globalize.culture.be-BY.js");
                                  
                    public static readonly string globalize_culture_be_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.be.min.js") ? Url("globalize.culture.be.min.js") : Url("globalize.culture.be.js");
                                  
                    public static readonly string globalize_culture_bg_BG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bg-BG.min.js") ? Url("globalize.culture.bg-BG.min.js") : Url("globalize.culture.bg-BG.js");
                                  
                    public static readonly string globalize_culture_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bg.min.js") ? Url("globalize.culture.bg.min.js") : Url("globalize.culture.bg.js");
                                  
                    public static readonly string globalize_culture_bn_BD_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bn-BD.min.js") ? Url("globalize.culture.bn-BD.min.js") : Url("globalize.culture.bn-BD.js");
                                  
                    public static readonly string globalize_culture_bn_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bn-IN.min.js") ? Url("globalize.culture.bn-IN.min.js") : Url("globalize.culture.bn-IN.js");
                                  
                    public static readonly string globalize_culture_bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bn.min.js") ? Url("globalize.culture.bn.min.js") : Url("globalize.culture.bn.js");
                                  
                    public static readonly string globalize_culture_bo_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bo-CN.min.js") ? Url("globalize.culture.bo-CN.min.js") : Url("globalize.culture.bo-CN.js");
                                  
                    public static readonly string globalize_culture_bo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bo.min.js") ? Url("globalize.culture.bo.min.js") : Url("globalize.culture.bo.js");
                                  
                    public static readonly string globalize_culture_br_FR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.br-FR.min.js") ? Url("globalize.culture.br-FR.min.js") : Url("globalize.culture.br-FR.js");
                                  
                    public static readonly string globalize_culture_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.br.min.js") ? Url("globalize.culture.br.min.js") : Url("globalize.culture.br.js");
                                  
                    public static readonly string globalize_culture_bs_Cyrl_BA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bs-Cyrl-BA.min.js") ? Url("globalize.culture.bs-Cyrl-BA.min.js") : Url("globalize.culture.bs-Cyrl-BA.js");
                                  
                    public static readonly string globalize_culture_bs_Cyrl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bs-Cyrl.min.js") ? Url("globalize.culture.bs-Cyrl.min.js") : Url("globalize.culture.bs-Cyrl.js");
                                  
                    public static readonly string globalize_culture_bs_Latn_BA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bs-Latn-BA.min.js") ? Url("globalize.culture.bs-Latn-BA.min.js") : Url("globalize.culture.bs-Latn-BA.js");
                                  
                    public static readonly string globalize_culture_bs_Latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bs-Latn.min.js") ? Url("globalize.culture.bs-Latn.min.js") : Url("globalize.culture.bs-Latn.js");
                                  
                    public static readonly string globalize_culture_bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.bs.min.js") ? Url("globalize.culture.bs.min.js") : Url("globalize.culture.bs.js");
                                  
                    public static readonly string globalize_culture_ca_ES_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ca-ES.min.js") ? Url("globalize.culture.ca-ES.min.js") : Url("globalize.culture.ca-ES.js");
                                  
                    public static readonly string globalize_culture_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ca.min.js") ? Url("globalize.culture.ca.min.js") : Url("globalize.culture.ca.js");
                                  
                    public static readonly string globalize_culture_co_FR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.co-FR.min.js") ? Url("globalize.culture.co-FR.min.js") : Url("globalize.culture.co-FR.js");
                                  
                    public static readonly string globalize_culture_co_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.co.min.js") ? Url("globalize.culture.co.min.js") : Url("globalize.culture.co.js");
                                  
                    public static readonly string globalize_culture_cs_CZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.cs-CZ.min.js") ? Url("globalize.culture.cs-CZ.min.js") : Url("globalize.culture.cs-CZ.js");
                                  
                    public static readonly string globalize_culture_cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.cs.min.js") ? Url("globalize.culture.cs.min.js") : Url("globalize.culture.cs.js");
                                  
                    public static readonly string globalize_culture_cy_GB_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.cy-GB.min.js") ? Url("globalize.culture.cy-GB.min.js") : Url("globalize.culture.cy-GB.js");
                                  
                    public static readonly string globalize_culture_cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.cy.min.js") ? Url("globalize.culture.cy.min.js") : Url("globalize.culture.cy.js");
                                  
                    public static readonly string globalize_culture_da_DK_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.da-DK.min.js") ? Url("globalize.culture.da-DK.min.js") : Url("globalize.culture.da-DK.js");
                                  
                    public static readonly string globalize_culture_da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.da.min.js") ? Url("globalize.culture.da.min.js") : Url("globalize.culture.da.js");
                                  
                    public static readonly string globalize_culture_de_AT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.de-AT.min.js") ? Url("globalize.culture.de-AT.min.js") : Url("globalize.culture.de-AT.js");
                                  
                    public static readonly string globalize_culture_de_CH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.de-CH.min.js") ? Url("globalize.culture.de-CH.min.js") : Url("globalize.culture.de-CH.js");
                                  
                    public static readonly string globalize_culture_de_DE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.de-DE.min.js") ? Url("globalize.culture.de-DE.min.js") : Url("globalize.culture.de-DE.js");
                                  
                    public static readonly string globalize_culture_de_LI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.de-LI.min.js") ? Url("globalize.culture.de-LI.min.js") : Url("globalize.culture.de-LI.js");
                                  
                    public static readonly string globalize_culture_de_LU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.de-LU.min.js") ? Url("globalize.culture.de-LU.min.js") : Url("globalize.culture.de-LU.js");
                                  
                    public static readonly string globalize_culture_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.de.min.js") ? Url("globalize.culture.de.min.js") : Url("globalize.culture.de.js");
                                  
                    public static readonly string globalize_culture_dsb_DE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.dsb-DE.min.js") ? Url("globalize.culture.dsb-DE.min.js") : Url("globalize.culture.dsb-DE.js");
                                  
                    public static readonly string globalize_culture_dsb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.dsb.min.js") ? Url("globalize.culture.dsb.min.js") : Url("globalize.culture.dsb.js");
                                  
                    public static readonly string globalize_culture_dv_MV_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.dv-MV.min.js") ? Url("globalize.culture.dv-MV.min.js") : Url("globalize.culture.dv-MV.js");
                                  
                    public static readonly string globalize_culture_dv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.dv.min.js") ? Url("globalize.culture.dv.min.js") : Url("globalize.culture.dv.js");
                                  
                    public static readonly string globalize_culture_el_GR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.el-GR.min.js") ? Url("globalize.culture.el-GR.min.js") : Url("globalize.culture.el-GR.js");
                                  
                    public static readonly string globalize_culture_el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.el.min.js") ? Url("globalize.culture.el.min.js") : Url("globalize.culture.el.js");
                                  
                    public static readonly string globalize_culture_en_029_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-029.min.js") ? Url("globalize.culture.en-029.min.js") : Url("globalize.culture.en-029.js");
                                  
                    public static readonly string globalize_culture_en_AU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-AU.min.js") ? Url("globalize.culture.en-AU.min.js") : Url("globalize.culture.en-AU.js");
                                  
                    public static readonly string globalize_culture_en_BZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-BZ.min.js") ? Url("globalize.culture.en-BZ.min.js") : Url("globalize.culture.en-BZ.js");
                                  
                    public static readonly string globalize_culture_en_CA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-CA.min.js") ? Url("globalize.culture.en-CA.min.js") : Url("globalize.culture.en-CA.js");
                                  
                    public static readonly string globalize_culture_en_GB_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-GB.min.js") ? Url("globalize.culture.en-GB.min.js") : Url("globalize.culture.en-GB.js");
                                  
                    public static readonly string globalize_culture_en_IE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-IE.min.js") ? Url("globalize.culture.en-IE.min.js") : Url("globalize.culture.en-IE.js");
                                  
                    public static readonly string globalize_culture_en_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-IN.min.js") ? Url("globalize.culture.en-IN.min.js") : Url("globalize.culture.en-IN.js");
                                  
                    public static readonly string globalize_culture_en_JM_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-JM.min.js") ? Url("globalize.culture.en-JM.min.js") : Url("globalize.culture.en-JM.js");
                                  
                    public static readonly string globalize_culture_en_MY_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-MY.min.js") ? Url("globalize.culture.en-MY.min.js") : Url("globalize.culture.en-MY.js");
                                  
                    public static readonly string globalize_culture_en_NZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-NZ.min.js") ? Url("globalize.culture.en-NZ.min.js") : Url("globalize.culture.en-NZ.js");
                                  
                    public static readonly string globalize_culture_en_PH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-PH.min.js") ? Url("globalize.culture.en-PH.min.js") : Url("globalize.culture.en-PH.js");
                                  
                    public static readonly string globalize_culture_en_SG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-SG.min.js") ? Url("globalize.culture.en-SG.min.js") : Url("globalize.culture.en-SG.js");
                                  
                    public static readonly string globalize_culture_en_TT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-TT.min.js") ? Url("globalize.culture.en-TT.min.js") : Url("globalize.culture.en-TT.js");
                                  
                    public static readonly string globalize_culture_en_US_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-US.min.js") ? Url("globalize.culture.en-US.min.js") : Url("globalize.culture.en-US.js");
                                  
                    public static readonly string globalize_culture_en_ZA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-ZA.min.js") ? Url("globalize.culture.en-ZA.min.js") : Url("globalize.culture.en-ZA.js");
                                  
                    public static readonly string globalize_culture_en_ZW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.en-ZW.min.js") ? Url("globalize.culture.en-ZW.min.js") : Url("globalize.culture.en-ZW.js");
                                  
                    public static readonly string globalize_culture_es_AR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-AR.min.js") ? Url("globalize.culture.es-AR.min.js") : Url("globalize.culture.es-AR.js");
                                  
                    public static readonly string globalize_culture_es_BO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-BO.min.js") ? Url("globalize.culture.es-BO.min.js") : Url("globalize.culture.es-BO.js");
                                  
                    public static readonly string globalize_culture_es_CL_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-CL.min.js") ? Url("globalize.culture.es-CL.min.js") : Url("globalize.culture.es-CL.js");
                                  
                    public static readonly string globalize_culture_es_CO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-CO.min.js") ? Url("globalize.culture.es-CO.min.js") : Url("globalize.culture.es-CO.js");
                                  
                    public static readonly string globalize_culture_es_CR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-CR.min.js") ? Url("globalize.culture.es-CR.min.js") : Url("globalize.culture.es-CR.js");
                                  
                    public static readonly string globalize_culture_es_DO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-DO.min.js") ? Url("globalize.culture.es-DO.min.js") : Url("globalize.culture.es-DO.js");
                                  
                    public static readonly string globalize_culture_es_EC_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-EC.min.js") ? Url("globalize.culture.es-EC.min.js") : Url("globalize.culture.es-EC.js");
                                  
                    public static readonly string globalize_culture_es_ES_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-ES.min.js") ? Url("globalize.culture.es-ES.min.js") : Url("globalize.culture.es-ES.js");
                                  
                    public static readonly string globalize_culture_es_GT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-GT.min.js") ? Url("globalize.culture.es-GT.min.js") : Url("globalize.culture.es-GT.js");
                                  
                    public static readonly string globalize_culture_es_HN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-HN.min.js") ? Url("globalize.culture.es-HN.min.js") : Url("globalize.culture.es-HN.js");
                                  
                    public static readonly string globalize_culture_es_MX_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-MX.min.js") ? Url("globalize.culture.es-MX.min.js") : Url("globalize.culture.es-MX.js");
                                  
                    public static readonly string globalize_culture_es_NI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-NI.min.js") ? Url("globalize.culture.es-NI.min.js") : Url("globalize.culture.es-NI.js");
                                  
                    public static readonly string globalize_culture_es_PA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-PA.min.js") ? Url("globalize.culture.es-PA.min.js") : Url("globalize.culture.es-PA.js");
                                  
                    public static readonly string globalize_culture_es_PE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-PE.min.js") ? Url("globalize.culture.es-PE.min.js") : Url("globalize.culture.es-PE.js");
                                  
                    public static readonly string globalize_culture_es_PR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-PR.min.js") ? Url("globalize.culture.es-PR.min.js") : Url("globalize.culture.es-PR.js");
                                  
                    public static readonly string globalize_culture_es_PY_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-PY.min.js") ? Url("globalize.culture.es-PY.min.js") : Url("globalize.culture.es-PY.js");
                                  
                    public static readonly string globalize_culture_es_SV_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-SV.min.js") ? Url("globalize.culture.es-SV.min.js") : Url("globalize.culture.es-SV.js");
                                  
                    public static readonly string globalize_culture_es_US_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-US.min.js") ? Url("globalize.culture.es-US.min.js") : Url("globalize.culture.es-US.js");
                                  
                    public static readonly string globalize_culture_es_UY_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-UY.min.js") ? Url("globalize.culture.es-UY.min.js") : Url("globalize.culture.es-UY.js");
                                  
                    public static readonly string globalize_culture_es_VE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es-VE.min.js") ? Url("globalize.culture.es-VE.min.js") : Url("globalize.culture.es-VE.js");
                                  
                    public static readonly string globalize_culture_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.es.min.js") ? Url("globalize.culture.es.min.js") : Url("globalize.culture.es.js");
                                  
                    public static readonly string globalize_culture_et_EE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.et-EE.min.js") ? Url("globalize.culture.et-EE.min.js") : Url("globalize.culture.et-EE.js");
                                  
                    public static readonly string globalize_culture_et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.et.min.js") ? Url("globalize.culture.et.min.js") : Url("globalize.culture.et.js");
                                  
                    public static readonly string globalize_culture_eu_ES_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.eu-ES.min.js") ? Url("globalize.culture.eu-ES.min.js") : Url("globalize.culture.eu-ES.js");
                                  
                    public static readonly string globalize_culture_eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.eu.min.js") ? Url("globalize.culture.eu.min.js") : Url("globalize.culture.eu.js");
                                  
                    public static readonly string globalize_culture_fa_IR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fa-IR.min.js") ? Url("globalize.culture.fa-IR.min.js") : Url("globalize.culture.fa-IR.js");
                                  
                    public static readonly string globalize_culture_fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fa.min.js") ? Url("globalize.culture.fa.min.js") : Url("globalize.culture.fa.js");
                                  
                    public static readonly string globalize_culture_fi_FI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fi-FI.min.js") ? Url("globalize.culture.fi-FI.min.js") : Url("globalize.culture.fi-FI.js");
                                  
                    public static readonly string globalize_culture_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fi.min.js") ? Url("globalize.culture.fi.min.js") : Url("globalize.culture.fi.js");
                                  
                    public static readonly string globalize_culture_fil_PH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fil-PH.min.js") ? Url("globalize.culture.fil-PH.min.js") : Url("globalize.culture.fil-PH.js");
                                  
                    public static readonly string globalize_culture_fil_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fil.min.js") ? Url("globalize.culture.fil.min.js") : Url("globalize.culture.fil.js");
                                  
                    public static readonly string globalize_culture_fo_FO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fo-FO.min.js") ? Url("globalize.culture.fo-FO.min.js") : Url("globalize.culture.fo-FO.js");
                                  
                    public static readonly string globalize_culture_fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fo.min.js") ? Url("globalize.culture.fo.min.js") : Url("globalize.culture.fo.js");
                                  
                    public static readonly string globalize_culture_fr_BE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fr-BE.min.js") ? Url("globalize.culture.fr-BE.min.js") : Url("globalize.culture.fr-BE.js");
                                  
                    public static readonly string globalize_culture_fr_CA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fr-CA.min.js") ? Url("globalize.culture.fr-CA.min.js") : Url("globalize.culture.fr-CA.js");
                                  
                    public static readonly string globalize_culture_fr_CH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fr-CH.min.js") ? Url("globalize.culture.fr-CH.min.js") : Url("globalize.culture.fr-CH.js");
                                  
                    public static readonly string globalize_culture_fr_FR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fr-FR.min.js") ? Url("globalize.culture.fr-FR.min.js") : Url("globalize.culture.fr-FR.js");
                                  
                    public static readonly string globalize_culture_fr_LU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fr-LU.min.js") ? Url("globalize.culture.fr-LU.min.js") : Url("globalize.culture.fr-LU.js");
                                  
                    public static readonly string globalize_culture_fr_MC_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fr-MC.min.js") ? Url("globalize.culture.fr-MC.min.js") : Url("globalize.culture.fr-MC.js");
                                  
                    public static readonly string globalize_culture_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fr.min.js") ? Url("globalize.culture.fr.min.js") : Url("globalize.culture.fr.js");
                                  
                    public static readonly string globalize_culture_fy_NL_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fy-NL.min.js") ? Url("globalize.culture.fy-NL.min.js") : Url("globalize.culture.fy-NL.js");
                                  
                    public static readonly string globalize_culture_fy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.fy.min.js") ? Url("globalize.culture.fy.min.js") : Url("globalize.culture.fy.js");
                                  
                    public static readonly string globalize_culture_ga_IE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ga-IE.min.js") ? Url("globalize.culture.ga-IE.min.js") : Url("globalize.culture.ga-IE.js");
                                  
                    public static readonly string globalize_culture_ga_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ga.min.js") ? Url("globalize.culture.ga.min.js") : Url("globalize.culture.ga.js");
                                  
                    public static readonly string globalize_culture_gd_GB_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.gd-GB.min.js") ? Url("globalize.culture.gd-GB.min.js") : Url("globalize.culture.gd-GB.js");
                                  
                    public static readonly string globalize_culture_gd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.gd.min.js") ? Url("globalize.culture.gd.min.js") : Url("globalize.culture.gd.js");
                                  
                    public static readonly string globalize_culture_gl_ES_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.gl-ES.min.js") ? Url("globalize.culture.gl-ES.min.js") : Url("globalize.culture.gl-ES.js");
                                  
                    public static readonly string globalize_culture_gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.gl.min.js") ? Url("globalize.culture.gl.min.js") : Url("globalize.culture.gl.js");
                                  
                    public static readonly string globalize_culture_gsw_FR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.gsw-FR.min.js") ? Url("globalize.culture.gsw-FR.min.js") : Url("globalize.culture.gsw-FR.js");
                                  
                    public static readonly string globalize_culture_gsw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.gsw.min.js") ? Url("globalize.culture.gsw.min.js") : Url("globalize.culture.gsw.js");
                                  
                    public static readonly string globalize_culture_gu_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.gu-IN.min.js") ? Url("globalize.culture.gu-IN.min.js") : Url("globalize.culture.gu-IN.js");
                                  
                    public static readonly string globalize_culture_gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.gu.min.js") ? Url("globalize.culture.gu.min.js") : Url("globalize.culture.gu.js");
                                  
                    public static readonly string globalize_culture_ha_Latn_NG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ha-Latn-NG.min.js") ? Url("globalize.culture.ha-Latn-NG.min.js") : Url("globalize.culture.ha-Latn-NG.js");
                                  
                    public static readonly string globalize_culture_ha_Latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ha-Latn.min.js") ? Url("globalize.culture.ha-Latn.min.js") : Url("globalize.culture.ha-Latn.js");
                                  
                    public static readonly string globalize_culture_ha_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ha.min.js") ? Url("globalize.culture.ha.min.js") : Url("globalize.culture.ha.js");
                                  
                    public static readonly string globalize_culture_he_IL_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.he-IL.min.js") ? Url("globalize.culture.he-IL.min.js") : Url("globalize.culture.he-IL.js");
                                  
                    public static readonly string globalize_culture_he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.he.min.js") ? Url("globalize.culture.he.min.js") : Url("globalize.culture.he.js");
                                  
                    public static readonly string globalize_culture_hi_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hi-IN.min.js") ? Url("globalize.culture.hi-IN.min.js") : Url("globalize.culture.hi-IN.js");
                                  
                    public static readonly string globalize_culture_hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hi.min.js") ? Url("globalize.culture.hi.min.js") : Url("globalize.culture.hi.js");
                                  
                    public static readonly string globalize_culture_hr_BA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hr-BA.min.js") ? Url("globalize.culture.hr-BA.min.js") : Url("globalize.culture.hr-BA.js");
                                  
                    public static readonly string globalize_culture_hr_HR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hr-HR.min.js") ? Url("globalize.culture.hr-HR.min.js") : Url("globalize.culture.hr-HR.js");
                                  
                    public static readonly string globalize_culture_hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hr.min.js") ? Url("globalize.culture.hr.min.js") : Url("globalize.culture.hr.js");
                                  
                    public static readonly string globalize_culture_hsb_DE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hsb-DE.min.js") ? Url("globalize.culture.hsb-DE.min.js") : Url("globalize.culture.hsb-DE.js");
                                  
                    public static readonly string globalize_culture_hsb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hsb.min.js") ? Url("globalize.culture.hsb.min.js") : Url("globalize.culture.hsb.js");
                                  
                    public static readonly string globalize_culture_hu_HU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hu-HU.min.js") ? Url("globalize.culture.hu-HU.min.js") : Url("globalize.culture.hu-HU.js");
                                  
                    public static readonly string globalize_culture_hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hu.min.js") ? Url("globalize.culture.hu.min.js") : Url("globalize.culture.hu.js");
                                  
                    public static readonly string globalize_culture_hy_AM_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hy-AM.min.js") ? Url("globalize.culture.hy-AM.min.js") : Url("globalize.culture.hy-AM.js");
                                  
                    public static readonly string globalize_culture_hy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.hy.min.js") ? Url("globalize.culture.hy.min.js") : Url("globalize.culture.hy.js");
                                  
                    public static readonly string globalize_culture_id_ID_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.id-ID.min.js") ? Url("globalize.culture.id-ID.min.js") : Url("globalize.culture.id-ID.js");
                                  
                    public static readonly string globalize_culture_id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.id.min.js") ? Url("globalize.culture.id.min.js") : Url("globalize.culture.id.js");
                                  
                    public static readonly string globalize_culture_ig_NG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ig-NG.min.js") ? Url("globalize.culture.ig-NG.min.js") : Url("globalize.culture.ig-NG.js");
                                  
                    public static readonly string globalize_culture_ig_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ig.min.js") ? Url("globalize.culture.ig.min.js") : Url("globalize.culture.ig.js");
                                  
                    public static readonly string globalize_culture_ii_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ii-CN.min.js") ? Url("globalize.culture.ii-CN.min.js") : Url("globalize.culture.ii-CN.js");
                                  
                    public static readonly string globalize_culture_ii_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ii.min.js") ? Url("globalize.culture.ii.min.js") : Url("globalize.culture.ii.js");
                                  
                    public static readonly string globalize_culture_is_IS_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.is-IS.min.js") ? Url("globalize.culture.is-IS.min.js") : Url("globalize.culture.is-IS.js");
                                  
                    public static readonly string globalize_culture_is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.is.min.js") ? Url("globalize.culture.is.min.js") : Url("globalize.culture.is.js");
                                  
                    public static readonly string globalize_culture_it_CH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.it-CH.min.js") ? Url("globalize.culture.it-CH.min.js") : Url("globalize.culture.it-CH.js");
                                  
                    public static readonly string globalize_culture_it_IT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.it-IT.min.js") ? Url("globalize.culture.it-IT.min.js") : Url("globalize.culture.it-IT.js");
                                  
                    public static readonly string globalize_culture_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.it.min.js") ? Url("globalize.culture.it.min.js") : Url("globalize.culture.it.js");
                                  
                    public static readonly string globalize_culture_iu_Cans_CA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.iu-Cans-CA.min.js") ? Url("globalize.culture.iu-Cans-CA.min.js") : Url("globalize.culture.iu-Cans-CA.js");
                                  
                    public static readonly string globalize_culture_iu_Cans_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.iu-Cans.min.js") ? Url("globalize.culture.iu-Cans.min.js") : Url("globalize.culture.iu-Cans.js");
                                  
                    public static readonly string globalize_culture_iu_Latn_CA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.iu-Latn-CA.min.js") ? Url("globalize.culture.iu-Latn-CA.min.js") : Url("globalize.culture.iu-Latn-CA.js");
                                  
                    public static readonly string globalize_culture_iu_Latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.iu-Latn.min.js") ? Url("globalize.culture.iu-Latn.min.js") : Url("globalize.culture.iu-Latn.js");
                                  
                    public static readonly string globalize_culture_iu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.iu.min.js") ? Url("globalize.culture.iu.min.js") : Url("globalize.culture.iu.js");
                                  
                    public static readonly string globalize_culture_ja_JP_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ja-JP.min.js") ? Url("globalize.culture.ja-JP.min.js") : Url("globalize.culture.ja-JP.js");
                                  
                    public static readonly string globalize_culture_ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ja.min.js") ? Url("globalize.culture.ja.min.js") : Url("globalize.culture.ja.js");
                                  
                    public static readonly string globalize_culture_ka_GE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ka-GE.min.js") ? Url("globalize.culture.ka-GE.min.js") : Url("globalize.culture.ka-GE.js");
                                  
                    public static readonly string globalize_culture_ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ka.min.js") ? Url("globalize.culture.ka.min.js") : Url("globalize.culture.ka.js");
                                  
                    public static readonly string globalize_culture_kk_KZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.kk-KZ.min.js") ? Url("globalize.culture.kk-KZ.min.js") : Url("globalize.culture.kk-KZ.js");
                                  
                    public static readonly string globalize_culture_kk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.kk.min.js") ? Url("globalize.culture.kk.min.js") : Url("globalize.culture.kk.js");
                                  
                    public static readonly string globalize_culture_kl_GL_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.kl-GL.min.js") ? Url("globalize.culture.kl-GL.min.js") : Url("globalize.culture.kl-GL.js");
                                  
                    public static readonly string globalize_culture_kl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.kl.min.js") ? Url("globalize.culture.kl.min.js") : Url("globalize.culture.kl.js");
                                  
                    public static readonly string globalize_culture_km_KH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.km-KH.min.js") ? Url("globalize.culture.km-KH.min.js") : Url("globalize.culture.km-KH.js");
                                  
                    public static readonly string globalize_culture_km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.km.min.js") ? Url("globalize.culture.km.min.js") : Url("globalize.culture.km.js");
                                  
                    public static readonly string globalize_culture_kn_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.kn-IN.min.js") ? Url("globalize.culture.kn-IN.min.js") : Url("globalize.culture.kn-IN.js");
                                  
                    public static readonly string globalize_culture_kn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.kn.min.js") ? Url("globalize.culture.kn.min.js") : Url("globalize.culture.kn.js");
                                  
                    public static readonly string globalize_culture_ko_KR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ko-KR.min.js") ? Url("globalize.culture.ko-KR.min.js") : Url("globalize.culture.ko-KR.js");
                                  
                    public static readonly string globalize_culture_ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ko.min.js") ? Url("globalize.culture.ko.min.js") : Url("globalize.culture.ko.js");
                                  
                    public static readonly string globalize_culture_kok_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.kok-IN.min.js") ? Url("globalize.culture.kok-IN.min.js") : Url("globalize.culture.kok-IN.js");
                                  
                    public static readonly string globalize_culture_kok_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.kok.min.js") ? Url("globalize.culture.kok.min.js") : Url("globalize.culture.kok.js");
                                  
                    public static readonly string globalize_culture_ky_KG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ky-KG.min.js") ? Url("globalize.culture.ky-KG.min.js") : Url("globalize.culture.ky-KG.js");
                                  
                    public static readonly string globalize_culture_ky_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ky.min.js") ? Url("globalize.culture.ky.min.js") : Url("globalize.culture.ky.js");
                                  
                    public static readonly string globalize_culture_lb_LU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.lb-LU.min.js") ? Url("globalize.culture.lb-LU.min.js") : Url("globalize.culture.lb-LU.js");
                                  
                    public static readonly string globalize_culture_lb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.lb.min.js") ? Url("globalize.culture.lb.min.js") : Url("globalize.culture.lb.js");
                                  
                    public static readonly string globalize_culture_lo_LA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.lo-LA.min.js") ? Url("globalize.culture.lo-LA.min.js") : Url("globalize.culture.lo-LA.js");
                                  
                    public static readonly string globalize_culture_lo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.lo.min.js") ? Url("globalize.culture.lo.min.js") : Url("globalize.culture.lo.js");
                                  
                    public static readonly string globalize_culture_lt_LT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.lt-LT.min.js") ? Url("globalize.culture.lt-LT.min.js") : Url("globalize.culture.lt-LT.js");
                                  
                    public static readonly string globalize_culture_lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.lt.min.js") ? Url("globalize.culture.lt.min.js") : Url("globalize.culture.lt.js");
                                  
                    public static readonly string globalize_culture_lv_LV_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.lv-LV.min.js") ? Url("globalize.culture.lv-LV.min.js") : Url("globalize.culture.lv-LV.js");
                                  
                    public static readonly string globalize_culture_lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.lv.min.js") ? Url("globalize.culture.lv.min.js") : Url("globalize.culture.lv.js");
                                  
                    public static readonly string globalize_culture_mi_NZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mi-NZ.min.js") ? Url("globalize.culture.mi-NZ.min.js") : Url("globalize.culture.mi-NZ.js");
                                  
                    public static readonly string globalize_culture_mi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mi.min.js") ? Url("globalize.culture.mi.min.js") : Url("globalize.culture.mi.js");
                                  
                    public static readonly string globalize_culture_mk_MK_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mk-MK.min.js") ? Url("globalize.culture.mk-MK.min.js") : Url("globalize.culture.mk-MK.js");
                                  
                    public static readonly string globalize_culture_mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mk.min.js") ? Url("globalize.culture.mk.min.js") : Url("globalize.culture.mk.js");
                                  
                    public static readonly string globalize_culture_ml_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ml-IN.min.js") ? Url("globalize.culture.ml-IN.min.js") : Url("globalize.culture.ml-IN.js");
                                  
                    public static readonly string globalize_culture_ml_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ml.min.js") ? Url("globalize.culture.ml.min.js") : Url("globalize.culture.ml.js");
                                  
                    public static readonly string globalize_culture_mn_Cyrl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mn-Cyrl.min.js") ? Url("globalize.culture.mn-Cyrl.min.js") : Url("globalize.culture.mn-Cyrl.js");
                                  
                    public static readonly string globalize_culture_mn_MN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mn-MN.min.js") ? Url("globalize.culture.mn-MN.min.js") : Url("globalize.culture.mn-MN.js");
                                  
                    public static readonly string globalize_culture_mn_Mong_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mn-Mong-CN.min.js") ? Url("globalize.culture.mn-Mong-CN.min.js") : Url("globalize.culture.mn-Mong-CN.js");
                                  
                    public static readonly string globalize_culture_mn_Mong_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mn-Mong.min.js") ? Url("globalize.culture.mn-Mong.min.js") : Url("globalize.culture.mn-Mong.js");
                                  
                    public static readonly string globalize_culture_mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mn.min.js") ? Url("globalize.culture.mn.min.js") : Url("globalize.culture.mn.js");
                                  
                    public static readonly string globalize_culture_moh_CA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.moh-CA.min.js") ? Url("globalize.culture.moh-CA.min.js") : Url("globalize.culture.moh-CA.js");
                                  
                    public static readonly string globalize_culture_moh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.moh.min.js") ? Url("globalize.culture.moh.min.js") : Url("globalize.culture.moh.js");
                                  
                    public static readonly string globalize_culture_mr_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mr-IN.min.js") ? Url("globalize.culture.mr-IN.min.js") : Url("globalize.culture.mr-IN.js");
                                  
                    public static readonly string globalize_culture_mr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mr.min.js") ? Url("globalize.culture.mr.min.js") : Url("globalize.culture.mr.js");
                                  
                    public static readonly string globalize_culture_ms_BN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ms-BN.min.js") ? Url("globalize.culture.ms-BN.min.js") : Url("globalize.culture.ms-BN.js");
                                  
                    public static readonly string globalize_culture_ms_MY_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ms-MY.min.js") ? Url("globalize.culture.ms-MY.min.js") : Url("globalize.culture.ms-MY.js");
                                  
                    public static readonly string globalize_culture_ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ms.min.js") ? Url("globalize.culture.ms.min.js") : Url("globalize.culture.ms.js");
                                  
                    public static readonly string globalize_culture_mt_MT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mt-MT.min.js") ? Url("globalize.culture.mt-MT.min.js") : Url("globalize.culture.mt-MT.js");
                                  
                    public static readonly string globalize_culture_mt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.mt.min.js") ? Url("globalize.culture.mt.min.js") : Url("globalize.culture.mt.js");
                                  
                    public static readonly string globalize_culture_nb_NO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nb-NO.min.js") ? Url("globalize.culture.nb-NO.min.js") : Url("globalize.culture.nb-NO.js");
                                  
                    public static readonly string globalize_culture_nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nb.min.js") ? Url("globalize.culture.nb.min.js") : Url("globalize.culture.nb.js");
                                  
                    public static readonly string globalize_culture_ne_NP_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ne-NP.min.js") ? Url("globalize.culture.ne-NP.min.js") : Url("globalize.culture.ne-NP.js");
                                  
                    public static readonly string globalize_culture_ne_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ne.min.js") ? Url("globalize.culture.ne.min.js") : Url("globalize.culture.ne.js");
                                  
                    public static readonly string globalize_culture_nl_BE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nl-BE.min.js") ? Url("globalize.culture.nl-BE.min.js") : Url("globalize.culture.nl-BE.js");
                                  
                    public static readonly string globalize_culture_nl_NL_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nl-NL.min.js") ? Url("globalize.culture.nl-NL.min.js") : Url("globalize.culture.nl-NL.js");
                                  
                    public static readonly string globalize_culture_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nl.min.js") ? Url("globalize.culture.nl.min.js") : Url("globalize.culture.nl.js");
                                  
                    public static readonly string globalize_culture_nn_NO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nn-NO.min.js") ? Url("globalize.culture.nn-NO.min.js") : Url("globalize.culture.nn-NO.js");
                                  
                    public static readonly string globalize_culture_nn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nn.min.js") ? Url("globalize.culture.nn.min.js") : Url("globalize.culture.nn.js");
                                  
                    public static readonly string globalize_culture_no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.no.min.js") ? Url("globalize.culture.no.min.js") : Url("globalize.culture.no.js");
                                  
                    public static readonly string globalize_culture_nso_ZA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nso-ZA.min.js") ? Url("globalize.culture.nso-ZA.min.js") : Url("globalize.culture.nso-ZA.js");
                                  
                    public static readonly string globalize_culture_nso_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.nso.min.js") ? Url("globalize.culture.nso.min.js") : Url("globalize.culture.nso.js");
                                  
                    public static readonly string globalize_culture_oc_FR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.oc-FR.min.js") ? Url("globalize.culture.oc-FR.min.js") : Url("globalize.culture.oc-FR.js");
                                  
                    public static readonly string globalize_culture_oc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.oc.min.js") ? Url("globalize.culture.oc.min.js") : Url("globalize.culture.oc.js");
                                  
                    public static readonly string globalize_culture_or_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.or-IN.min.js") ? Url("globalize.culture.or-IN.min.js") : Url("globalize.culture.or-IN.js");
                                  
                    public static readonly string globalize_culture_or_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.or.min.js") ? Url("globalize.culture.or.min.js") : Url("globalize.culture.or.js");
                                  
                    public static readonly string globalize_culture_pa_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.pa-IN.min.js") ? Url("globalize.culture.pa-IN.min.js") : Url("globalize.culture.pa-IN.js");
                                  
                    public static readonly string globalize_culture_pa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.pa.min.js") ? Url("globalize.culture.pa.min.js") : Url("globalize.culture.pa.js");
                                  
                    public static readonly string globalize_culture_pl_PL_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.pl-PL.min.js") ? Url("globalize.culture.pl-PL.min.js") : Url("globalize.culture.pl-PL.js");
                                  
                    public static readonly string globalize_culture_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.pl.min.js") ? Url("globalize.culture.pl.min.js") : Url("globalize.culture.pl.js");
                                  
                    public static readonly string globalize_culture_prs_AF_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.prs-AF.min.js") ? Url("globalize.culture.prs-AF.min.js") : Url("globalize.culture.prs-AF.js");
                                  
                    public static readonly string globalize_culture_prs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.prs.min.js") ? Url("globalize.culture.prs.min.js") : Url("globalize.culture.prs.js");
                                  
                    public static readonly string globalize_culture_ps_AF_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ps-AF.min.js") ? Url("globalize.culture.ps-AF.min.js") : Url("globalize.culture.ps-AF.js");
                                  
                    public static readonly string globalize_culture_ps_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ps.min.js") ? Url("globalize.culture.ps.min.js") : Url("globalize.culture.ps.js");
                                  
                    public static readonly string globalize_culture_pt_BR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.pt-BR.min.js") ? Url("globalize.culture.pt-BR.min.js") : Url("globalize.culture.pt-BR.js");
                                  
                    public static readonly string globalize_culture_pt_PT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.pt-PT.min.js") ? Url("globalize.culture.pt-PT.min.js") : Url("globalize.culture.pt-PT.js");
                                  
                    public static readonly string globalize_culture_pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.pt.min.js") ? Url("globalize.culture.pt.min.js") : Url("globalize.culture.pt.js");
                                  
                    public static readonly string globalize_culture_qut_GT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.qut-GT.min.js") ? Url("globalize.culture.qut-GT.min.js") : Url("globalize.culture.qut-GT.js");
                                  
                    public static readonly string globalize_culture_qut_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.qut.min.js") ? Url("globalize.culture.qut.min.js") : Url("globalize.culture.qut.js");
                                  
                    public static readonly string globalize_culture_quz_BO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.quz-BO.min.js") ? Url("globalize.culture.quz-BO.min.js") : Url("globalize.culture.quz-BO.js");
                                  
                    public static readonly string globalize_culture_quz_EC_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.quz-EC.min.js") ? Url("globalize.culture.quz-EC.min.js") : Url("globalize.culture.quz-EC.js");
                                  
                    public static readonly string globalize_culture_quz_PE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.quz-PE.min.js") ? Url("globalize.culture.quz-PE.min.js") : Url("globalize.culture.quz-PE.js");
                                  
                    public static readonly string globalize_culture_quz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.quz.min.js") ? Url("globalize.culture.quz.min.js") : Url("globalize.culture.quz.js");
                                  
                    public static readonly string globalize_culture_rm_CH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.rm-CH.min.js") ? Url("globalize.culture.rm-CH.min.js") : Url("globalize.culture.rm-CH.js");
                                  
                    public static readonly string globalize_culture_rm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.rm.min.js") ? Url("globalize.culture.rm.min.js") : Url("globalize.culture.rm.js");
                                  
                    public static readonly string globalize_culture_ro_RO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ro-RO.min.js") ? Url("globalize.culture.ro-RO.min.js") : Url("globalize.culture.ro-RO.js");
                                  
                    public static readonly string globalize_culture_ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ro.min.js") ? Url("globalize.culture.ro.min.js") : Url("globalize.culture.ro.js");
                                  
                    public static readonly string globalize_culture_ru_RU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ru-RU.min.js") ? Url("globalize.culture.ru-RU.min.js") : Url("globalize.culture.ru-RU.js");
                                  
                    public static readonly string globalize_culture_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ru.min.js") ? Url("globalize.culture.ru.min.js") : Url("globalize.culture.ru.js");
                                  
                    public static readonly string globalize_culture_rw_RW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.rw-RW.min.js") ? Url("globalize.culture.rw-RW.min.js") : Url("globalize.culture.rw-RW.js");
                                  
                    public static readonly string globalize_culture_rw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.rw.min.js") ? Url("globalize.culture.rw.min.js") : Url("globalize.culture.rw.js");
                                  
                    public static readonly string globalize_culture_sa_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sa-IN.min.js") ? Url("globalize.culture.sa-IN.min.js") : Url("globalize.culture.sa-IN.js");
                                  
                    public static readonly string globalize_culture_sa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sa.min.js") ? Url("globalize.culture.sa.min.js") : Url("globalize.culture.sa.js");
                                  
                    public static readonly string globalize_culture_sah_RU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sah-RU.min.js") ? Url("globalize.culture.sah-RU.min.js") : Url("globalize.culture.sah-RU.js");
                                  
                    public static readonly string globalize_culture_sah_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sah.min.js") ? Url("globalize.culture.sah.min.js") : Url("globalize.culture.sah.js");
                                  
                    public static readonly string globalize_culture_se_FI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.se-FI.min.js") ? Url("globalize.culture.se-FI.min.js") : Url("globalize.culture.se-FI.js");
                                  
                    public static readonly string globalize_culture_se_NO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.se-NO.min.js") ? Url("globalize.culture.se-NO.min.js") : Url("globalize.culture.se-NO.js");
                                  
                    public static readonly string globalize_culture_se_SE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.se-SE.min.js") ? Url("globalize.culture.se-SE.min.js") : Url("globalize.culture.se-SE.js");
                                  
                    public static readonly string globalize_culture_se_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.se.min.js") ? Url("globalize.culture.se.min.js") : Url("globalize.culture.se.js");
                                  
                    public static readonly string globalize_culture_si_LK_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.si-LK.min.js") ? Url("globalize.culture.si-LK.min.js") : Url("globalize.culture.si-LK.js");
                                  
                    public static readonly string globalize_culture_si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.si.min.js") ? Url("globalize.culture.si.min.js") : Url("globalize.culture.si.js");
                                  
                    public static readonly string globalize_culture_sk_SK_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sk-SK.min.js") ? Url("globalize.culture.sk-SK.min.js") : Url("globalize.culture.sk-SK.js");
                                  
                    public static readonly string globalize_culture_sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sk.min.js") ? Url("globalize.culture.sk.min.js") : Url("globalize.culture.sk.js");
                                  
                    public static readonly string globalize_culture_sl_SI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sl-SI.min.js") ? Url("globalize.culture.sl-SI.min.js") : Url("globalize.culture.sl-SI.js");
                                  
                    public static readonly string globalize_culture_sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sl.min.js") ? Url("globalize.culture.sl.min.js") : Url("globalize.culture.sl.js");
                                  
                    public static readonly string globalize_culture_sma_NO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sma-NO.min.js") ? Url("globalize.culture.sma-NO.min.js") : Url("globalize.culture.sma-NO.js");
                                  
                    public static readonly string globalize_culture_sma_SE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sma-SE.min.js") ? Url("globalize.culture.sma-SE.min.js") : Url("globalize.culture.sma-SE.js");
                                  
                    public static readonly string globalize_culture_sma_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sma.min.js") ? Url("globalize.culture.sma.min.js") : Url("globalize.culture.sma.js");
                                  
                    public static readonly string globalize_culture_smj_NO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.smj-NO.min.js") ? Url("globalize.culture.smj-NO.min.js") : Url("globalize.culture.smj-NO.js");
                                  
                    public static readonly string globalize_culture_smj_SE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.smj-SE.min.js") ? Url("globalize.culture.smj-SE.min.js") : Url("globalize.culture.smj-SE.js");
                                  
                    public static readonly string globalize_culture_smj_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.smj.min.js") ? Url("globalize.culture.smj.min.js") : Url("globalize.culture.smj.js");
                                  
                    public static readonly string globalize_culture_smn_FI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.smn-FI.min.js") ? Url("globalize.culture.smn-FI.min.js") : Url("globalize.culture.smn-FI.js");
                                  
                    public static readonly string globalize_culture_smn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.smn.min.js") ? Url("globalize.culture.smn.min.js") : Url("globalize.culture.smn.js");
                                  
                    public static readonly string globalize_culture_sms_FI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sms-FI.min.js") ? Url("globalize.culture.sms-FI.min.js") : Url("globalize.culture.sms-FI.js");
                                  
                    public static readonly string globalize_culture_sms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sms.min.js") ? Url("globalize.culture.sms.min.js") : Url("globalize.culture.sms.js");
                                  
                    public static readonly string globalize_culture_sq_AL_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sq-AL.min.js") ? Url("globalize.culture.sq-AL.min.js") : Url("globalize.culture.sq-AL.js");
                                  
                    public static readonly string globalize_culture_sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sq.min.js") ? Url("globalize.culture.sq.min.js") : Url("globalize.culture.sq.js");
                                  
                    public static readonly string globalize_culture_sr_Cyrl_BA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Cyrl-BA.min.js") ? Url("globalize.culture.sr-Cyrl-BA.min.js") : Url("globalize.culture.sr-Cyrl-BA.js");
                                  
                    public static readonly string globalize_culture_sr_Cyrl_CS_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Cyrl-CS.min.js") ? Url("globalize.culture.sr-Cyrl-CS.min.js") : Url("globalize.culture.sr-Cyrl-CS.js");
                                  
                    public static readonly string globalize_culture_sr_Cyrl_ME_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Cyrl-ME.min.js") ? Url("globalize.culture.sr-Cyrl-ME.min.js") : Url("globalize.culture.sr-Cyrl-ME.js");
                                  
                    public static readonly string globalize_culture_sr_Cyrl_RS_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Cyrl-RS.min.js") ? Url("globalize.culture.sr-Cyrl-RS.min.js") : Url("globalize.culture.sr-Cyrl-RS.js");
                                  
                    public static readonly string globalize_culture_sr_Cyrl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Cyrl.min.js") ? Url("globalize.culture.sr-Cyrl.min.js") : Url("globalize.culture.sr-Cyrl.js");
                                  
                    public static readonly string globalize_culture_sr_Latn_BA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Latn-BA.min.js") ? Url("globalize.culture.sr-Latn-BA.min.js") : Url("globalize.culture.sr-Latn-BA.js");
                                  
                    public static readonly string globalize_culture_sr_Latn_CS_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Latn-CS.min.js") ? Url("globalize.culture.sr-Latn-CS.min.js") : Url("globalize.culture.sr-Latn-CS.js");
                                  
                    public static readonly string globalize_culture_sr_Latn_ME_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Latn-ME.min.js") ? Url("globalize.culture.sr-Latn-ME.min.js") : Url("globalize.culture.sr-Latn-ME.js");
                                  
                    public static readonly string globalize_culture_sr_Latn_RS_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Latn-RS.min.js") ? Url("globalize.culture.sr-Latn-RS.min.js") : Url("globalize.culture.sr-Latn-RS.js");
                                  
                    public static readonly string globalize_culture_sr_Latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr-Latn.min.js") ? Url("globalize.culture.sr-Latn.min.js") : Url("globalize.culture.sr-Latn.js");
                                  
                    public static readonly string globalize_culture_sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sr.min.js") ? Url("globalize.culture.sr.min.js") : Url("globalize.culture.sr.js");
                                  
                    public static readonly string globalize_culture_sv_FI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sv-FI.min.js") ? Url("globalize.culture.sv-FI.min.js") : Url("globalize.culture.sv-FI.js");
                                  
                    public static readonly string globalize_culture_sv_SE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sv-SE.min.js") ? Url("globalize.culture.sv-SE.min.js") : Url("globalize.culture.sv-SE.js");
                                  
                    public static readonly string globalize_culture_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sv.min.js") ? Url("globalize.culture.sv.min.js") : Url("globalize.culture.sv.js");
                                  
                    public static readonly string globalize_culture_sw_KE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sw-KE.min.js") ? Url("globalize.culture.sw-KE.min.js") : Url("globalize.culture.sw-KE.js");
                                  
                    public static readonly string globalize_culture_sw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.sw.min.js") ? Url("globalize.culture.sw.min.js") : Url("globalize.culture.sw.js");
                                  
                    public static readonly string globalize_culture_syr_SY_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.syr-SY.min.js") ? Url("globalize.culture.syr-SY.min.js") : Url("globalize.culture.syr-SY.js");
                                  
                    public static readonly string globalize_culture_syr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.syr.min.js") ? Url("globalize.culture.syr.min.js") : Url("globalize.culture.syr.js");
                                  
                    public static readonly string globalize_culture_ta_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ta-IN.min.js") ? Url("globalize.culture.ta-IN.min.js") : Url("globalize.culture.ta-IN.js");
                                  
                    public static readonly string globalize_culture_ta_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ta.min.js") ? Url("globalize.culture.ta.min.js") : Url("globalize.culture.ta.js");
                                  
                    public static readonly string globalize_culture_te_IN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.te-IN.min.js") ? Url("globalize.culture.te-IN.min.js") : Url("globalize.culture.te-IN.js");
                                  
                    public static readonly string globalize_culture_te_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.te.min.js") ? Url("globalize.culture.te.min.js") : Url("globalize.culture.te.js");
                                  
                    public static readonly string globalize_culture_tg_Cyrl_TJ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tg-Cyrl-TJ.min.js") ? Url("globalize.culture.tg-Cyrl-TJ.min.js") : Url("globalize.culture.tg-Cyrl-TJ.js");
                                  
                    public static readonly string globalize_culture_tg_Cyrl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tg-Cyrl.min.js") ? Url("globalize.culture.tg-Cyrl.min.js") : Url("globalize.culture.tg-Cyrl.js");
                                  
                    public static readonly string globalize_culture_tg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tg.min.js") ? Url("globalize.culture.tg.min.js") : Url("globalize.culture.tg.js");
                                  
                    public static readonly string globalize_culture_th_TH_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.th-TH.min.js") ? Url("globalize.culture.th-TH.min.js") : Url("globalize.culture.th-TH.js");
                                  
                    public static readonly string globalize_culture_th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.th.min.js") ? Url("globalize.culture.th.min.js") : Url("globalize.culture.th.js");
                                  
                    public static readonly string globalize_culture_tk_TM_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tk-TM.min.js") ? Url("globalize.culture.tk-TM.min.js") : Url("globalize.culture.tk-TM.js");
                                  
                    public static readonly string globalize_culture_tk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tk.min.js") ? Url("globalize.culture.tk.min.js") : Url("globalize.culture.tk.js");
                                  
                    public static readonly string globalize_culture_tn_ZA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tn-ZA.min.js") ? Url("globalize.culture.tn-ZA.min.js") : Url("globalize.culture.tn-ZA.js");
                                  
                    public static readonly string globalize_culture_tn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tn.min.js") ? Url("globalize.culture.tn.min.js") : Url("globalize.culture.tn.js");
                                  
                    public static readonly string globalize_culture_tr_TR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tr-TR.min.js") ? Url("globalize.culture.tr-TR.min.js") : Url("globalize.culture.tr-TR.js");
                                  
                    public static readonly string globalize_culture_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tr.min.js") ? Url("globalize.culture.tr.min.js") : Url("globalize.culture.tr.js");
                                  
                    public static readonly string globalize_culture_tt_RU_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tt-RU.min.js") ? Url("globalize.culture.tt-RU.min.js") : Url("globalize.culture.tt-RU.js");
                                  
                    public static readonly string globalize_culture_tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tt.min.js") ? Url("globalize.culture.tt.min.js") : Url("globalize.culture.tt.js");
                                  
                    public static readonly string globalize_culture_tzm_Latn_DZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tzm-Latn-DZ.min.js") ? Url("globalize.culture.tzm-Latn-DZ.min.js") : Url("globalize.culture.tzm-Latn-DZ.js");
                                  
                    public static readonly string globalize_culture_tzm_Latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tzm-Latn.min.js") ? Url("globalize.culture.tzm-Latn.min.js") : Url("globalize.culture.tzm-Latn.js");
                                  
                    public static readonly string globalize_culture_tzm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.tzm.min.js") ? Url("globalize.culture.tzm.min.js") : Url("globalize.culture.tzm.js");
                                  
                    public static readonly string globalize_culture_ug_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ug-CN.min.js") ? Url("globalize.culture.ug-CN.min.js") : Url("globalize.culture.ug-CN.js");
                                  
                    public static readonly string globalize_culture_ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ug.min.js") ? Url("globalize.culture.ug.min.js") : Url("globalize.culture.ug.js");
                                  
                    public static readonly string globalize_culture_uk_UA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.uk-UA.min.js") ? Url("globalize.culture.uk-UA.min.js") : Url("globalize.culture.uk-UA.js");
                                  
                    public static readonly string globalize_culture_uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.uk.min.js") ? Url("globalize.culture.uk.min.js") : Url("globalize.culture.uk.js");
                                  
                    public static readonly string globalize_culture_ur_PK_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ur-PK.min.js") ? Url("globalize.culture.ur-PK.min.js") : Url("globalize.culture.ur-PK.js");
                                  
                    public static readonly string globalize_culture_ur_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.ur.min.js") ? Url("globalize.culture.ur.min.js") : Url("globalize.culture.ur.js");
                                  
                    public static readonly string globalize_culture_uz_Cyrl_UZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.uz-Cyrl-UZ.min.js") ? Url("globalize.culture.uz-Cyrl-UZ.min.js") : Url("globalize.culture.uz-Cyrl-UZ.js");
                                  
                    public static readonly string globalize_culture_uz_Cyrl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.uz-Cyrl.min.js") ? Url("globalize.culture.uz-Cyrl.min.js") : Url("globalize.culture.uz-Cyrl.js");
                                  
                    public static readonly string globalize_culture_uz_Latn_UZ_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.uz-Latn-UZ.min.js") ? Url("globalize.culture.uz-Latn-UZ.min.js") : Url("globalize.culture.uz-Latn-UZ.js");
                                  
                    public static readonly string globalize_culture_uz_Latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.uz-Latn.min.js") ? Url("globalize.culture.uz-Latn.min.js") : Url("globalize.culture.uz-Latn.js");
                                  
                    public static readonly string globalize_culture_uz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.uz.min.js") ? Url("globalize.culture.uz.min.js") : Url("globalize.culture.uz.js");
                                  
                    public static readonly string globalize_culture_vi_VN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.vi-VN.min.js") ? Url("globalize.culture.vi-VN.min.js") : Url("globalize.culture.vi-VN.js");
                                  
                    public static readonly string globalize_culture_vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.vi.min.js") ? Url("globalize.culture.vi.min.js") : Url("globalize.culture.vi.js");
                                  
                    public static readonly string globalize_culture_wo_SN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.wo-SN.min.js") ? Url("globalize.culture.wo-SN.min.js") : Url("globalize.culture.wo-SN.js");
                                  
                    public static readonly string globalize_culture_wo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.wo.min.js") ? Url("globalize.culture.wo.min.js") : Url("globalize.culture.wo.js");
                                  
                    public static readonly string globalize_culture_xh_ZA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.xh-ZA.min.js") ? Url("globalize.culture.xh-ZA.min.js") : Url("globalize.culture.xh-ZA.js");
                                  
                    public static readonly string globalize_culture_xh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.xh.min.js") ? Url("globalize.culture.xh.min.js") : Url("globalize.culture.xh.js");
                                  
                    public static readonly string globalize_culture_yo_NG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.yo-NG.min.js") ? Url("globalize.culture.yo-NG.min.js") : Url("globalize.culture.yo-NG.js");
                                  
                    public static readonly string globalize_culture_yo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.yo.min.js") ? Url("globalize.culture.yo.min.js") : Url("globalize.culture.yo.js");
                                  
                    public static readonly string globalize_culture_zh_CHS_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-CHS.min.js") ? Url("globalize.culture.zh-CHS.min.js") : Url("globalize.culture.zh-CHS.js");
                                  
                    public static readonly string globalize_culture_zh_CHT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-CHT.min.js") ? Url("globalize.culture.zh-CHT.min.js") : Url("globalize.culture.zh-CHT.js");
                                  
                    public static readonly string globalize_culture_zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-CN.min.js") ? Url("globalize.culture.zh-CN.min.js") : Url("globalize.culture.zh-CN.js");
                                  
                    public static readonly string globalize_culture_zh_Hans_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-Hans.min.js") ? Url("globalize.culture.zh-Hans.min.js") : Url("globalize.culture.zh-Hans.js");
                                  
                    public static readonly string globalize_culture_zh_Hant_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-Hant.min.js") ? Url("globalize.culture.zh-Hant.min.js") : Url("globalize.culture.zh-Hant.js");
                                  
                    public static readonly string globalize_culture_zh_HK_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-HK.min.js") ? Url("globalize.culture.zh-HK.min.js") : Url("globalize.culture.zh-HK.js");
                                  
                    public static readonly string globalize_culture_zh_MO_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-MO.min.js") ? Url("globalize.culture.zh-MO.min.js") : Url("globalize.culture.zh-MO.js");
                                  
                    public static readonly string globalize_culture_zh_SG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-SG.min.js") ? Url("globalize.culture.zh-SG.min.js") : Url("globalize.culture.zh-SG.js");
                                  
                    public static readonly string globalize_culture_zh_TW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh-TW.min.js") ? Url("globalize.culture.zh-TW.min.js") : Url("globalize.culture.zh-TW.js");
                                  
                    public static readonly string globalize_culture_zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zh.min.js") ? Url("globalize.culture.zh.min.js") : Url("globalize.culture.zh.js");
                                  
                    public static readonly string globalize_culture_zu_ZA_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zu-ZA.min.js") ? Url("globalize.culture.zu-ZA.min.js") : Url("globalize.culture.zu-ZA.js");
                                  
                    public static readonly string globalize_culture_zu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.culture.zu.min.js") ? Url("globalize.culture.zu.min.js") : Url("globalize.culture.zu.js");
                                  
                    public static readonly string globalize_cultures_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.cultures.min.js") ? Url("globalize.cultures.min.js") : Url("globalize.cultures.js");
                                  
                }
            
                public static readonly string globalize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.min.js") ? Url("globalize.min.js") : Url("globalize.js");
                              
                public static readonly string globalize_require_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/globalize.require.min.js") ? Url("globalize.require.min.js") : Url("globalize.require.js");
                              
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class kendo {
            private const string URLPATH = "~/scripts/kendo";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class _2013_2_716 {
                private const string URLPATH = "~/scripts/kendo/2013.2.716";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class cultures {
                    private const string URLPATH = "~/scripts/kendo/2013.2.716/cultures";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string kendo_culture_af_ZA_min_js = Url("kendo.culture.af-ZA.min.js");
                    public static readonly string kendo_culture_af_min_js = Url("kendo.culture.af.min.js");
                    public static readonly string kendo_culture_am_ET_min_js = Url("kendo.culture.am-ET.min.js");
                    public static readonly string kendo_culture_am_min_js = Url("kendo.culture.am.min.js");
                    public static readonly string kendo_culture_ar_AE_min_js = Url("kendo.culture.ar-AE.min.js");
                    public static readonly string kendo_culture_ar_BH_min_js = Url("kendo.culture.ar-BH.min.js");
                    public static readonly string kendo_culture_ar_DZ_min_js = Url("kendo.culture.ar-DZ.min.js");
                    public static readonly string kendo_culture_ar_EG_min_js = Url("kendo.culture.ar-EG.min.js");
                    public static readonly string kendo_culture_ar_IQ_min_js = Url("kendo.culture.ar-IQ.min.js");
                    public static readonly string kendo_culture_ar_JO_min_js = Url("kendo.culture.ar-JO.min.js");
                    public static readonly string kendo_culture_ar_KW_min_js = Url("kendo.culture.ar-KW.min.js");
                    public static readonly string kendo_culture_ar_LB_min_js = Url("kendo.culture.ar-LB.min.js");
                    public static readonly string kendo_culture_ar_LY_min_js = Url("kendo.culture.ar-LY.min.js");
                    public static readonly string kendo_culture_ar_MA_min_js = Url("kendo.culture.ar-MA.min.js");
                    public static readonly string kendo_culture_ar_OM_min_js = Url("kendo.culture.ar-OM.min.js");
                    public static readonly string kendo_culture_ar_QA_min_js = Url("kendo.culture.ar-QA.min.js");
                    public static readonly string kendo_culture_ar_SA_min_js = Url("kendo.culture.ar-SA.min.js");
                    public static readonly string kendo_culture_ar_SY_min_js = Url("kendo.culture.ar-SY.min.js");
                    public static readonly string kendo_culture_ar_TN_min_js = Url("kendo.culture.ar-TN.min.js");
                    public static readonly string kendo_culture_ar_YE_min_js = Url("kendo.culture.ar-YE.min.js");
                    public static readonly string kendo_culture_ar_min_js = Url("kendo.culture.ar.min.js");
                    public static readonly string kendo_culture_arn_CL_min_js = Url("kendo.culture.arn-CL.min.js");
                    public static readonly string kendo_culture_arn_min_js = Url("kendo.culture.arn.min.js");
                    public static readonly string kendo_culture_as_IN_min_js = Url("kendo.culture.as-IN.min.js");
                    public static readonly string kendo_culture_as_min_js = Url("kendo.culture.as.min.js");
                    public static readonly string kendo_culture_az_Cyrl_AZ_min_js = Url("kendo.culture.az-Cyrl-AZ.min.js");
                    public static readonly string kendo_culture_az_Cyrl_min_js = Url("kendo.culture.az-Cyrl.min.js");
                    public static readonly string kendo_culture_az_Latn_AZ_min_js = Url("kendo.culture.az-Latn-AZ.min.js");
                    public static readonly string kendo_culture_az_Latn_min_js = Url("kendo.culture.az-Latn.min.js");
                    public static readonly string kendo_culture_az_min_js = Url("kendo.culture.az.min.js");
                    public static readonly string kendo_culture_ba_RU_min_js = Url("kendo.culture.ba-RU.min.js");
                    public static readonly string kendo_culture_ba_min_js = Url("kendo.culture.ba.min.js");
                    public static readonly string kendo_culture_be_BY_min_js = Url("kendo.culture.be-BY.min.js");
                    public static readonly string kendo_culture_be_min_js = Url("kendo.culture.be.min.js");
                    public static readonly string kendo_culture_bg_BG_min_js = Url("kendo.culture.bg-BG.min.js");
                    public static readonly string kendo_culture_bg_min_js = Url("kendo.culture.bg.min.js");
                    public static readonly string kendo_culture_bn_BD_min_js = Url("kendo.culture.bn-BD.min.js");
                    public static readonly string kendo_culture_bn_IN_min_js = Url("kendo.culture.bn-IN.min.js");
                    public static readonly string kendo_culture_bn_min_js = Url("kendo.culture.bn.min.js");
                    public static readonly string kendo_culture_bo_CN_min_js = Url("kendo.culture.bo-CN.min.js");
                    public static readonly string kendo_culture_bo_min_js = Url("kendo.culture.bo.min.js");
                    public static readonly string kendo_culture_br_FR_min_js = Url("kendo.culture.br-FR.min.js");
                    public static readonly string kendo_culture_br_min_js = Url("kendo.culture.br.min.js");
                    public static readonly string kendo_culture_bs_Cyrl_BA_min_js = Url("kendo.culture.bs-Cyrl-BA.min.js");
                    public static readonly string kendo_culture_bs_Cyrl_min_js = Url("kendo.culture.bs-Cyrl.min.js");
                    public static readonly string kendo_culture_bs_Latn_BA_min_js = Url("kendo.culture.bs-Latn-BA.min.js");
                    public static readonly string kendo_culture_bs_Latn_min_js = Url("kendo.culture.bs-Latn.min.js");
                    public static readonly string kendo_culture_bs_min_js = Url("kendo.culture.bs.min.js");
                    public static readonly string kendo_culture_ca_ES_min_js = Url("kendo.culture.ca-ES.min.js");
                    public static readonly string kendo_culture_ca_min_js = Url("kendo.culture.ca.min.js");
                    public static readonly string kendo_culture_co_FR_min_js = Url("kendo.culture.co-FR.min.js");
                    public static readonly string kendo_culture_co_min_js = Url("kendo.culture.co.min.js");
                    public static readonly string kendo_culture_cs_CZ_min_js = Url("kendo.culture.cs-CZ.min.js");
                    public static readonly string kendo_culture_cs_min_js = Url("kendo.culture.cs.min.js");
                    public static readonly string kendo_culture_cy_GB_min_js = Url("kendo.culture.cy-GB.min.js");
                    public static readonly string kendo_culture_cy_min_js = Url("kendo.culture.cy.min.js");
                    public static readonly string kendo_culture_da_DK_min_js = Url("kendo.culture.da-DK.min.js");
                    public static readonly string kendo_culture_da_min_js = Url("kendo.culture.da.min.js");
                    public static readonly string kendo_culture_de_AT_min_js = Url("kendo.culture.de-AT.min.js");
                    public static readonly string kendo_culture_de_CH_min_js = Url("kendo.culture.de-CH.min.js");
                    public static readonly string kendo_culture_de_DE_min_js = Url("kendo.culture.de-DE.min.js");
                    public static readonly string kendo_culture_de_LI_min_js = Url("kendo.culture.de-LI.min.js");
                    public static readonly string kendo_culture_de_LU_min_js = Url("kendo.culture.de-LU.min.js");
                    public static readonly string kendo_culture_de_min_js = Url("kendo.culture.de.min.js");
                    public static readonly string kendo_culture_dsb_DE_min_js = Url("kendo.culture.dsb-DE.min.js");
                    public static readonly string kendo_culture_dsb_min_js = Url("kendo.culture.dsb.min.js");
                    public static readonly string kendo_culture_dv_MV_min_js = Url("kendo.culture.dv-MV.min.js");
                    public static readonly string kendo_culture_dv_min_js = Url("kendo.culture.dv.min.js");
                    public static readonly string kendo_culture_el_GR_min_js = Url("kendo.culture.el-GR.min.js");
                    public static readonly string kendo_culture_el_min_js = Url("kendo.culture.el.min.js");
                    public static readonly string kendo_culture_en_029_min_js = Url("kendo.culture.en-029.min.js");
                    public static readonly string kendo_culture_en_AU_min_js = Url("kendo.culture.en-AU.min.js");
                    public static readonly string kendo_culture_en_BZ_min_js = Url("kendo.culture.en-BZ.min.js");
                    public static readonly string kendo_culture_en_CA_min_js = Url("kendo.culture.en-CA.min.js");
                    public static readonly string kendo_culture_en_GB_min_js = Url("kendo.culture.en-GB.min.js");
                    public static readonly string kendo_culture_en_IE_min_js = Url("kendo.culture.en-IE.min.js");
                    public static readonly string kendo_culture_en_IN_min_js = Url("kendo.culture.en-IN.min.js");
                    public static readonly string kendo_culture_en_JM_min_js = Url("kendo.culture.en-JM.min.js");
                    public static readonly string kendo_culture_en_MY_min_js = Url("kendo.culture.en-MY.min.js");
                    public static readonly string kendo_culture_en_NZ_min_js = Url("kendo.culture.en-NZ.min.js");
                    public static readonly string kendo_culture_en_PH_min_js = Url("kendo.culture.en-PH.min.js");
                    public static readonly string kendo_culture_en_SG_min_js = Url("kendo.culture.en-SG.min.js");
                    public static readonly string kendo_culture_en_TT_min_js = Url("kendo.culture.en-TT.min.js");
                    public static readonly string kendo_culture_en_US_min_js = Url("kendo.culture.en-US.min.js");
                    public static readonly string kendo_culture_en_ZA_min_js = Url("kendo.culture.en-ZA.min.js");
                    public static readonly string kendo_culture_en_ZW_min_js = Url("kendo.culture.en-ZW.min.js");
                    public static readonly string kendo_culture_en_min_js = Url("kendo.culture.en.min.js");
                    public static readonly string kendo_culture_es_AR_min_js = Url("kendo.culture.es-AR.min.js");
                    public static readonly string kendo_culture_es_BO_min_js = Url("kendo.culture.es-BO.min.js");
                    public static readonly string kendo_culture_es_CL_min_js = Url("kendo.culture.es-CL.min.js");
                    public static readonly string kendo_culture_es_CO_min_js = Url("kendo.culture.es-CO.min.js");
                    public static readonly string kendo_culture_es_CR_min_js = Url("kendo.culture.es-CR.min.js");
                    public static readonly string kendo_culture_es_DO_min_js = Url("kendo.culture.es-DO.min.js");
                    public static readonly string kendo_culture_es_EC_min_js = Url("kendo.culture.es-EC.min.js");
                    public static readonly string kendo_culture_es_ES_min_js = Url("kendo.culture.es-ES.min.js");
                    public static readonly string kendo_culture_es_GT_min_js = Url("kendo.culture.es-GT.min.js");
                    public static readonly string kendo_culture_es_HN_min_js = Url("kendo.culture.es-HN.min.js");
                    public static readonly string kendo_culture_es_MX_min_js = Url("kendo.culture.es-MX.min.js");
                    public static readonly string kendo_culture_es_NI_min_js = Url("kendo.culture.es-NI.min.js");
                    public static readonly string kendo_culture_es_PA_min_js = Url("kendo.culture.es-PA.min.js");
                    public static readonly string kendo_culture_es_PE_min_js = Url("kendo.culture.es-PE.min.js");
                    public static readonly string kendo_culture_es_PR_min_js = Url("kendo.culture.es-PR.min.js");
                    public static readonly string kendo_culture_es_PY_min_js = Url("kendo.culture.es-PY.min.js");
                    public static readonly string kendo_culture_es_SV_min_js = Url("kendo.culture.es-SV.min.js");
                    public static readonly string kendo_culture_es_US_min_js = Url("kendo.culture.es-US.min.js");
                    public static readonly string kendo_culture_es_UY_min_js = Url("kendo.culture.es-UY.min.js");
                    public static readonly string kendo_culture_es_VE_min_js = Url("kendo.culture.es-VE.min.js");
                    public static readonly string kendo_culture_es_min_js = Url("kendo.culture.es.min.js");
                    public static readonly string kendo_culture_et_EE_min_js = Url("kendo.culture.et-EE.min.js");
                    public static readonly string kendo_culture_et_min_js = Url("kendo.culture.et.min.js");
                    public static readonly string kendo_culture_eu_ES_min_js = Url("kendo.culture.eu-ES.min.js");
                    public static readonly string kendo_culture_eu_min_js = Url("kendo.culture.eu.min.js");
                    public static readonly string kendo_culture_fa_IR_min_js = Url("kendo.culture.fa-IR.min.js");
                    public static readonly string kendo_culture_fa_min_js = Url("kendo.culture.fa.min.js");
                    public static readonly string kendo_culture_fi_FI_min_js = Url("kendo.culture.fi-FI.min.js");
                    public static readonly string kendo_culture_fi_min_js = Url("kendo.culture.fi.min.js");
                    public static readonly string kendo_culture_fil_PH_min_js = Url("kendo.culture.fil-PH.min.js");
                    public static readonly string kendo_culture_fil_min_js = Url("kendo.culture.fil.min.js");
                    public static readonly string kendo_culture_fo_FO_min_js = Url("kendo.culture.fo-FO.min.js");
                    public static readonly string kendo_culture_fo_min_js = Url("kendo.culture.fo.min.js");
                    public static readonly string kendo_culture_fr_BE_min_js = Url("kendo.culture.fr-BE.min.js");
                    public static readonly string kendo_culture_fr_CA_min_js = Url("kendo.culture.fr-CA.min.js");
                    public static readonly string kendo_culture_fr_CH_min_js = Url("kendo.culture.fr-CH.min.js");
                    public static readonly string kendo_culture_fr_FR_min_js = Url("kendo.culture.fr-FR.min.js");
                    public static readonly string kendo_culture_fr_LU_min_js = Url("kendo.culture.fr-LU.min.js");
                    public static readonly string kendo_culture_fr_MC_min_js = Url("kendo.culture.fr-MC.min.js");
                    public static readonly string kendo_culture_fr_min_js = Url("kendo.culture.fr.min.js");
                    public static readonly string kendo_culture_fy_NL_min_js = Url("kendo.culture.fy-NL.min.js");
                    public static readonly string kendo_culture_fy_min_js = Url("kendo.culture.fy.min.js");
                    public static readonly string kendo_culture_ga_IE_min_js = Url("kendo.culture.ga-IE.min.js");
                    public static readonly string kendo_culture_ga_min_js = Url("kendo.culture.ga.min.js");
                    public static readonly string kendo_culture_gd_GB_min_js = Url("kendo.culture.gd-GB.min.js");
                    public static readonly string kendo_culture_gd_min_js = Url("kendo.culture.gd.min.js");
                    public static readonly string kendo_culture_gl_ES_min_js = Url("kendo.culture.gl-ES.min.js");
                    public static readonly string kendo_culture_gl_min_js = Url("kendo.culture.gl.min.js");
                    public static readonly string kendo_culture_gsw_FR_min_js = Url("kendo.culture.gsw-FR.min.js");
                    public static readonly string kendo_culture_gsw_min_js = Url("kendo.culture.gsw.min.js");
                    public static readonly string kendo_culture_gu_IN_min_js = Url("kendo.culture.gu-IN.min.js");
                    public static readonly string kendo_culture_gu_min_js = Url("kendo.culture.gu.min.js");
                    public static readonly string kendo_culture_ha_Latn_NG_min_js = Url("kendo.culture.ha-Latn-NG.min.js");
                    public static readonly string kendo_culture_ha_Latn_min_js = Url("kendo.culture.ha-Latn.min.js");
                    public static readonly string kendo_culture_ha_min_js = Url("kendo.culture.ha.min.js");
                    public static readonly string kendo_culture_he_IL_min_js = Url("kendo.culture.he-IL.min.js");
                    public static readonly string kendo_culture_he_min_js = Url("kendo.culture.he.min.js");
                    public static readonly string kendo_culture_hi_IN_min_js = Url("kendo.culture.hi-IN.min.js");
                    public static readonly string kendo_culture_hi_min_js = Url("kendo.culture.hi.min.js");
                    public static readonly string kendo_culture_hr_BA_min_js = Url("kendo.culture.hr-BA.min.js");
                    public static readonly string kendo_culture_hr_HR_min_js = Url("kendo.culture.hr-HR.min.js");
                    public static readonly string kendo_culture_hr_min_js = Url("kendo.culture.hr.min.js");
                    public static readonly string kendo_culture_hsb_DE_min_js = Url("kendo.culture.hsb-DE.min.js");
                    public static readonly string kendo_culture_hsb_min_js = Url("kendo.culture.hsb.min.js");
                    public static readonly string kendo_culture_hu_HU_min_js = Url("kendo.culture.hu-HU.min.js");
                    public static readonly string kendo_culture_hu_min_js = Url("kendo.culture.hu.min.js");
                    public static readonly string kendo_culture_hy_AM_min_js = Url("kendo.culture.hy-AM.min.js");
                    public static readonly string kendo_culture_hy_min_js = Url("kendo.culture.hy.min.js");
                    public static readonly string kendo_culture_id_ID_min_js = Url("kendo.culture.id-ID.min.js");
                    public static readonly string kendo_culture_id_min_js = Url("kendo.culture.id.min.js");
                    public static readonly string kendo_culture_ig_NG_min_js = Url("kendo.culture.ig-NG.min.js");
                    public static readonly string kendo_culture_ig_min_js = Url("kendo.culture.ig.min.js");
                    public static readonly string kendo_culture_ii_CN_min_js = Url("kendo.culture.ii-CN.min.js");
                    public static readonly string kendo_culture_ii_min_js = Url("kendo.culture.ii.min.js");
                    public static readonly string kendo_culture_is_IS_min_js = Url("kendo.culture.is-IS.min.js");
                    public static readonly string kendo_culture_is_min_js = Url("kendo.culture.is.min.js");
                    public static readonly string kendo_culture_it_CH_min_js = Url("kendo.culture.it-CH.min.js");
                    public static readonly string kendo_culture_it_IT_min_js = Url("kendo.culture.it-IT.min.js");
                    public static readonly string kendo_culture_it_min_js = Url("kendo.culture.it.min.js");
                    public static readonly string kendo_culture_iu_Cans_CA_min_js = Url("kendo.culture.iu-Cans-CA.min.js");
                    public static readonly string kendo_culture_iu_Cans_min_js = Url("kendo.culture.iu-Cans.min.js");
                    public static readonly string kendo_culture_iu_Latn_CA_min_js = Url("kendo.culture.iu-Latn-CA.min.js");
                    public static readonly string kendo_culture_iu_Latn_min_js = Url("kendo.culture.iu-Latn.min.js");
                    public static readonly string kendo_culture_iu_min_js = Url("kendo.culture.iu.min.js");
                    public static readonly string kendo_culture_ja_JP_min_js = Url("kendo.culture.ja-JP.min.js");
                    public static readonly string kendo_culture_ja_min_js = Url("kendo.culture.ja.min.js");
                    public static readonly string kendo_culture_ka_GE_min_js = Url("kendo.culture.ka-GE.min.js");
                    public static readonly string kendo_culture_ka_min_js = Url("kendo.culture.ka.min.js");
                    public static readonly string kendo_culture_kk_KZ_min_js = Url("kendo.culture.kk-KZ.min.js");
                    public static readonly string kendo_culture_kk_min_js = Url("kendo.culture.kk.min.js");
                    public static readonly string kendo_culture_kl_GL_min_js = Url("kendo.culture.kl-GL.min.js");
                    public static readonly string kendo_culture_kl_min_js = Url("kendo.culture.kl.min.js");
                    public static readonly string kendo_culture_km_KH_min_js = Url("kendo.culture.km-KH.min.js");
                    public static readonly string kendo_culture_km_min_js = Url("kendo.culture.km.min.js");
                    public static readonly string kendo_culture_kn_IN_min_js = Url("kendo.culture.kn-IN.min.js");
                    public static readonly string kendo_culture_kn_min_js = Url("kendo.culture.kn.min.js");
                    public static readonly string kendo_culture_ko_KR_min_js = Url("kendo.culture.ko-KR.min.js");
                    public static readonly string kendo_culture_ko_min_js = Url("kendo.culture.ko.min.js");
                    public static readonly string kendo_culture_kok_IN_min_js = Url("kendo.culture.kok-IN.min.js");
                    public static readonly string kendo_culture_kok_min_js = Url("kendo.culture.kok.min.js");
                    public static readonly string kendo_culture_ky_KG_min_js = Url("kendo.culture.ky-KG.min.js");
                    public static readonly string kendo_culture_ky_min_js = Url("kendo.culture.ky.min.js");
                    public static readonly string kendo_culture_lb_LU_min_js = Url("kendo.culture.lb-LU.min.js");
                    public static readonly string kendo_culture_lb_min_js = Url("kendo.culture.lb.min.js");
                    public static readonly string kendo_culture_lo_LA_min_js = Url("kendo.culture.lo-LA.min.js");
                    public static readonly string kendo_culture_lo_min_js = Url("kendo.culture.lo.min.js");
                    public static readonly string kendo_culture_lt_LT_min_js = Url("kendo.culture.lt-LT.min.js");
                    public static readonly string kendo_culture_lt_min_js = Url("kendo.culture.lt.min.js");
                    public static readonly string kendo_culture_lv_LV_min_js = Url("kendo.culture.lv-LV.min.js");
                    public static readonly string kendo_culture_lv_min_js = Url("kendo.culture.lv.min.js");
                    public static readonly string kendo_culture_mi_NZ_min_js = Url("kendo.culture.mi-NZ.min.js");
                    public static readonly string kendo_culture_mi_min_js = Url("kendo.culture.mi.min.js");
                    public static readonly string kendo_culture_mk_MK_min_js = Url("kendo.culture.mk-MK.min.js");
                    public static readonly string kendo_culture_mk_min_js = Url("kendo.culture.mk.min.js");
                    public static readonly string kendo_culture_ml_IN_min_js = Url("kendo.culture.ml-IN.min.js");
                    public static readonly string kendo_culture_ml_min_js = Url("kendo.culture.ml.min.js");
                    public static readonly string kendo_culture_mn_Cyrl_min_js = Url("kendo.culture.mn-Cyrl.min.js");
                    public static readonly string kendo_culture_mn_MN_min_js = Url("kendo.culture.mn-MN.min.js");
                    public static readonly string kendo_culture_mn_Mong_CN_min_js = Url("kendo.culture.mn-Mong-CN.min.js");
                    public static readonly string kendo_culture_mn_Mong_min_js = Url("kendo.culture.mn-Mong.min.js");
                    public static readonly string kendo_culture_mn_min_js = Url("kendo.culture.mn.min.js");
                    public static readonly string kendo_culture_moh_CA_min_js = Url("kendo.culture.moh-CA.min.js");
                    public static readonly string kendo_culture_moh_min_js = Url("kendo.culture.moh.min.js");
                    public static readonly string kendo_culture_mr_IN_min_js = Url("kendo.culture.mr-IN.min.js");
                    public static readonly string kendo_culture_mr_min_js = Url("kendo.culture.mr.min.js");
                    public static readonly string kendo_culture_ms_BN_min_js = Url("kendo.culture.ms-BN.min.js");
                    public static readonly string kendo_culture_ms_MY_min_js = Url("kendo.culture.ms-MY.min.js");
                    public static readonly string kendo_culture_ms_min_js = Url("kendo.culture.ms.min.js");
                    public static readonly string kendo_culture_mt_MT_min_js = Url("kendo.culture.mt-MT.min.js");
                    public static readonly string kendo_culture_mt_min_js = Url("kendo.culture.mt.min.js");
                    public static readonly string kendo_culture_nb_NO_min_js = Url("kendo.culture.nb-NO.min.js");
                    public static readonly string kendo_culture_nb_min_js = Url("kendo.culture.nb.min.js");
                    public static readonly string kendo_culture_ne_NP_min_js = Url("kendo.culture.ne-NP.min.js");
                    public static readonly string kendo_culture_ne_min_js = Url("kendo.culture.ne.min.js");
                    public static readonly string kendo_culture_nl_BE_min_js = Url("kendo.culture.nl-BE.min.js");
                    public static readonly string kendo_culture_nl_NL_min_js = Url("kendo.culture.nl-NL.min.js");
                    public static readonly string kendo_culture_nl_min_js = Url("kendo.culture.nl.min.js");
                    public static readonly string kendo_culture_nn_NO_min_js = Url("kendo.culture.nn-NO.min.js");
                    public static readonly string kendo_culture_nn_min_js = Url("kendo.culture.nn.min.js");
                    public static readonly string kendo_culture_no_min_js = Url("kendo.culture.no.min.js");
                    public static readonly string kendo_culture_nso_ZA_min_js = Url("kendo.culture.nso-ZA.min.js");
                    public static readonly string kendo_culture_nso_min_js = Url("kendo.culture.nso.min.js");
                    public static readonly string kendo_culture_oc_FR_min_js = Url("kendo.culture.oc-FR.min.js");
                    public static readonly string kendo_culture_oc_min_js = Url("kendo.culture.oc.min.js");
                    public static readonly string kendo_culture_or_IN_min_js = Url("kendo.culture.or-IN.min.js");
                    public static readonly string kendo_culture_or_min_js = Url("kendo.culture.or.min.js");
                    public static readonly string kendo_culture_pa_IN_min_js = Url("kendo.culture.pa-IN.min.js");
                    public static readonly string kendo_culture_pa_min_js = Url("kendo.culture.pa.min.js");
                    public static readonly string kendo_culture_pl_PL_min_js = Url("kendo.culture.pl-PL.min.js");
                    public static readonly string kendo_culture_pl_min_js = Url("kendo.culture.pl.min.js");
                    public static readonly string kendo_culture_prs_AF_min_js = Url("kendo.culture.prs-AF.min.js");
                    public static readonly string kendo_culture_prs_min_js = Url("kendo.culture.prs.min.js");
                    public static readonly string kendo_culture_ps_AF_min_js = Url("kendo.culture.ps-AF.min.js");
                    public static readonly string kendo_culture_ps_min_js = Url("kendo.culture.ps.min.js");
                    public static readonly string kendo_culture_pt_BR_min_js = Url("kendo.culture.pt-BR.min.js");
                    public static readonly string kendo_culture_pt_PT_min_js = Url("kendo.culture.pt-PT.min.js");
                    public static readonly string kendo_culture_pt_min_js = Url("kendo.culture.pt.min.js");
                    public static readonly string kendo_culture_qut_GT_min_js = Url("kendo.culture.qut-GT.min.js");
                    public static readonly string kendo_culture_qut_min_js = Url("kendo.culture.qut.min.js");
                    public static readonly string kendo_culture_quz_BO_min_js = Url("kendo.culture.quz-BO.min.js");
                    public static readonly string kendo_culture_quz_EC_min_js = Url("kendo.culture.quz-EC.min.js");
                    public static readonly string kendo_culture_quz_PE_min_js = Url("kendo.culture.quz-PE.min.js");
                    public static readonly string kendo_culture_quz_min_js = Url("kendo.culture.quz.min.js");
                    public static readonly string kendo_culture_rm_CH_min_js = Url("kendo.culture.rm-CH.min.js");
                    public static readonly string kendo_culture_rm_min_js = Url("kendo.culture.rm.min.js");
                    public static readonly string kendo_culture_ro_RO_min_js = Url("kendo.culture.ro-RO.min.js");
                    public static readonly string kendo_culture_ro_min_js = Url("kendo.culture.ro.min.js");
                    public static readonly string kendo_culture_ru_RU_min_js = Url("kendo.culture.ru-RU.min.js");
                    public static readonly string kendo_culture_ru_UA_min_js = Url("kendo.culture.ru-UA.min.js");
                    public static readonly string kendo_culture_ru_min_js = Url("kendo.culture.ru.min.js");
                    public static readonly string kendo_culture_rw_RW_min_js = Url("kendo.culture.rw-RW.min.js");
                    public static readonly string kendo_culture_rw_min_js = Url("kendo.culture.rw.min.js");
                    public static readonly string kendo_culture_sa_IN_min_js = Url("kendo.culture.sa-IN.min.js");
                    public static readonly string kendo_culture_sa_min_js = Url("kendo.culture.sa.min.js");
                    public static readonly string kendo_culture_sah_RU_min_js = Url("kendo.culture.sah-RU.min.js");
                    public static readonly string kendo_culture_sah_min_js = Url("kendo.culture.sah.min.js");
                    public static readonly string kendo_culture_se_FI_min_js = Url("kendo.culture.se-FI.min.js");
                    public static readonly string kendo_culture_se_NO_min_js = Url("kendo.culture.se-NO.min.js");
                    public static readonly string kendo_culture_se_SE_min_js = Url("kendo.culture.se-SE.min.js");
                    public static readonly string kendo_culture_se_min_js = Url("kendo.culture.se.min.js");
                    public static readonly string kendo_culture_si_LK_min_js = Url("kendo.culture.si-LK.min.js");
                    public static readonly string kendo_culture_si_min_js = Url("kendo.culture.si.min.js");
                    public static readonly string kendo_culture_sk_SK_min_js = Url("kendo.culture.sk-SK.min.js");
                    public static readonly string kendo_culture_sk_min_js = Url("kendo.culture.sk.min.js");
                    public static readonly string kendo_culture_sl_SI_min_js = Url("kendo.culture.sl-SI.min.js");
                    public static readonly string kendo_culture_sl_min_js = Url("kendo.culture.sl.min.js");
                    public static readonly string kendo_culture_sma_NO_min_js = Url("kendo.culture.sma-NO.min.js");
                    public static readonly string kendo_culture_sma_SE_min_js = Url("kendo.culture.sma-SE.min.js");
                    public static readonly string kendo_culture_sma_min_js = Url("kendo.culture.sma.min.js");
                    public static readonly string kendo_culture_smj_NO_min_js = Url("kendo.culture.smj-NO.min.js");
                    public static readonly string kendo_culture_smj_SE_min_js = Url("kendo.culture.smj-SE.min.js");
                    public static readonly string kendo_culture_smj_min_js = Url("kendo.culture.smj.min.js");
                    public static readonly string kendo_culture_smn_FI_min_js = Url("kendo.culture.smn-FI.min.js");
                    public static readonly string kendo_culture_smn_min_js = Url("kendo.culture.smn.min.js");
                    public static readonly string kendo_culture_sms_FI_min_js = Url("kendo.culture.sms-FI.min.js");
                    public static readonly string kendo_culture_sms_min_js = Url("kendo.culture.sms.min.js");
                    public static readonly string kendo_culture_sq_AL_min_js = Url("kendo.culture.sq-AL.min.js");
                    public static readonly string kendo_culture_sq_min_js = Url("kendo.culture.sq.min.js");
                    public static readonly string kendo_culture_sr_Cyrl_BA_min_js = Url("kendo.culture.sr-Cyrl-BA.min.js");
                    public static readonly string kendo_culture_sr_Cyrl_CS_min_js = Url("kendo.culture.sr-Cyrl-CS.min.js");
                    public static readonly string kendo_culture_sr_Cyrl_ME_min_js = Url("kendo.culture.sr-Cyrl-ME.min.js");
                    public static readonly string kendo_culture_sr_Cyrl_RS_min_js = Url("kendo.culture.sr-Cyrl-RS.min.js");
                    public static readonly string kendo_culture_sr_Cyrl_min_js = Url("kendo.culture.sr-Cyrl.min.js");
                    public static readonly string kendo_culture_sr_Latn_BA_min_js = Url("kendo.culture.sr-Latn-BA.min.js");
                    public static readonly string kendo_culture_sr_Latn_CS_min_js = Url("kendo.culture.sr-Latn-CS.min.js");
                    public static readonly string kendo_culture_sr_Latn_ME_min_js = Url("kendo.culture.sr-Latn-ME.min.js");
                    public static readonly string kendo_culture_sr_Latn_RS_min_js = Url("kendo.culture.sr-Latn-RS.min.js");
                    public static readonly string kendo_culture_sr_Latn_min_js = Url("kendo.culture.sr-Latn.min.js");
                    public static readonly string kendo_culture_sr_min_js = Url("kendo.culture.sr.min.js");
                    public static readonly string kendo_culture_sv_FI_min_js = Url("kendo.culture.sv-FI.min.js");
                    public static readonly string kendo_culture_sv_SE_min_js = Url("kendo.culture.sv-SE.min.js");
                    public static readonly string kendo_culture_sv_min_js = Url("kendo.culture.sv.min.js");
                    public static readonly string kendo_culture_sw_KE_min_js = Url("kendo.culture.sw-KE.min.js");
                    public static readonly string kendo_culture_sw_min_js = Url("kendo.culture.sw.min.js");
                    public static readonly string kendo_culture_syr_SY_min_js = Url("kendo.culture.syr-SY.min.js");
                    public static readonly string kendo_culture_syr_min_js = Url("kendo.culture.syr.min.js");
                    public static readonly string kendo_culture_ta_IN_min_js = Url("kendo.culture.ta-IN.min.js");
                    public static readonly string kendo_culture_ta_min_js = Url("kendo.culture.ta.min.js");
                    public static readonly string kendo_culture_te_IN_min_js = Url("kendo.culture.te-IN.min.js");
                    public static readonly string kendo_culture_te_min_js = Url("kendo.culture.te.min.js");
                    public static readonly string kendo_culture_tg_Cyrl_TJ_min_js = Url("kendo.culture.tg-Cyrl-TJ.min.js");
                    public static readonly string kendo_culture_tg_Cyrl_min_js = Url("kendo.culture.tg-Cyrl.min.js");
                    public static readonly string kendo_culture_tg_min_js = Url("kendo.culture.tg.min.js");
                    public static readonly string kendo_culture_th_TH_min_js = Url("kendo.culture.th-TH.min.js");
                    public static readonly string kendo_culture_th_min_js = Url("kendo.culture.th.min.js");
                    public static readonly string kendo_culture_tk_TM_min_js = Url("kendo.culture.tk-TM.min.js");
                    public static readonly string kendo_culture_tk_min_js = Url("kendo.culture.tk.min.js");
                    public static readonly string kendo_culture_tn_ZA_min_js = Url("kendo.culture.tn-ZA.min.js");
                    public static readonly string kendo_culture_tn_min_js = Url("kendo.culture.tn.min.js");
                    public static readonly string kendo_culture_tr_TR_min_js = Url("kendo.culture.tr-TR.min.js");
                    public static readonly string kendo_culture_tr_min_js = Url("kendo.culture.tr.min.js");
                    public static readonly string kendo_culture_tt_RU_min_js = Url("kendo.culture.tt-RU.min.js");
                    public static readonly string kendo_culture_tt_min_js = Url("kendo.culture.tt.min.js");
                    public static readonly string kendo_culture_tzm_Latn_DZ_min_js = Url("kendo.culture.tzm-Latn-DZ.min.js");
                    public static readonly string kendo_culture_tzm_Latn_min_js = Url("kendo.culture.tzm-Latn.min.js");
                    public static readonly string kendo_culture_tzm_min_js = Url("kendo.culture.tzm.min.js");
                    public static readonly string kendo_culture_ug_CN_min_js = Url("kendo.culture.ug-CN.min.js");
                    public static readonly string kendo_culture_ug_min_js = Url("kendo.culture.ug.min.js");
                    public static readonly string kendo_culture_uk_UA_min_js = Url("kendo.culture.uk-UA.min.js");
                    public static readonly string kendo_culture_uk_min_js = Url("kendo.culture.uk.min.js");
                    public static readonly string kendo_culture_ur_PK_min_js = Url("kendo.culture.ur-PK.min.js");
                    public static readonly string kendo_culture_ur_min_js = Url("kendo.culture.ur.min.js");
                    public static readonly string kendo_culture_uz_Cyrl_UZ_min_js = Url("kendo.culture.uz-Cyrl-UZ.min.js");
                    public static readonly string kendo_culture_uz_Cyrl_min_js = Url("kendo.culture.uz-Cyrl.min.js");
                    public static readonly string kendo_culture_uz_Latn_UZ_min_js = Url("kendo.culture.uz-Latn-UZ.min.js");
                    public static readonly string kendo_culture_uz_Latn_min_js = Url("kendo.culture.uz-Latn.min.js");
                    public static readonly string kendo_culture_uz_min_js = Url("kendo.culture.uz.min.js");
                    public static readonly string kendo_culture_vi_VN_min_js = Url("kendo.culture.vi-VN.min.js");
                    public static readonly string kendo_culture_vi_min_js = Url("kendo.culture.vi.min.js");
                    public static readonly string kendo_culture_wo_SN_min_js = Url("kendo.culture.wo-SN.min.js");
                    public static readonly string kendo_culture_wo_min_js = Url("kendo.culture.wo.min.js");
                    public static readonly string kendo_culture_xh_ZA_min_js = Url("kendo.culture.xh-ZA.min.js");
                    public static readonly string kendo_culture_xh_min_js = Url("kendo.culture.xh.min.js");
                    public static readonly string kendo_culture_yo_NG_min_js = Url("kendo.culture.yo-NG.min.js");
                    public static readonly string kendo_culture_yo_min_js = Url("kendo.culture.yo.min.js");
                    public static readonly string kendo_culture_zh_CHS_min_js = Url("kendo.culture.zh-CHS.min.js");
                    public static readonly string kendo_culture_zh_CHT_min_js = Url("kendo.culture.zh-CHT.min.js");
                    public static readonly string kendo_culture_zh_CN_min_js = Url("kendo.culture.zh-CN.min.js");
                    public static readonly string kendo_culture_zh_Hans_min_js = Url("kendo.culture.zh-Hans.min.js");
                    public static readonly string kendo_culture_zh_Hant_min_js = Url("kendo.culture.zh-Hant.min.js");
                    public static readonly string kendo_culture_zh_HK_min_js = Url("kendo.culture.zh-HK.min.js");
                    public static readonly string kendo_culture_zh_MO_min_js = Url("kendo.culture.zh-MO.min.js");
                    public static readonly string kendo_culture_zh_SG_min_js = Url("kendo.culture.zh-SG.min.js");
                    public static readonly string kendo_culture_zh_TW_min_js = Url("kendo.culture.zh-TW.min.js");
                    public static readonly string kendo_culture_zh_min_js = Url("kendo.culture.zh.min.js");
                    public static readonly string kendo_culture_zu_ZA_min_js = Url("kendo.culture.zu-ZA.min.js");
                    public static readonly string kendo_culture_zu_min_js = Url("kendo.culture.zu.min.js");
                }
            
                public static readonly string jquery_min_js = Url("jquery.min.js");
                public static readonly string kendo_autocomplete_min_js = Url("kendo.autocomplete.min.js");
                public static readonly string kendo_binder_min_js = Url("kendo.binder.min.js");
                public static readonly string kendo_calendar_min_js = Url("kendo.calendar.min.js");
                public static readonly string kendo_colorpicker_min_js = Url("kendo.colorpicker.min.js");
                public static readonly string kendo_columnmenu_min_js = Url("kendo.columnmenu.min.js");
                public static readonly string kendo_combobox_min_js = Url("kendo.combobox.min.js");
                public static readonly string kendo_core_min_js = Url("kendo.core.min.js");
                public static readonly string kendo_data_min_js = Url("kendo.data.min.js");
                public static readonly string kendo_data_odata_min_js = Url("kendo.data.odata.min.js");
                public static readonly string kendo_data_xml_min_js = Url("kendo.data.xml.min.js");
                public static readonly string kendo_datepicker_min_js = Url("kendo.datepicker.min.js");
                public static readonly string kendo_datetimepicker_min_js = Url("kendo.datetimepicker.min.js");
                public static readonly string kendo_draganddrop_min_js = Url("kendo.draganddrop.min.js");
                public static readonly string kendo_dropdownlist_min_js = Url("kendo.dropdownlist.min.js");
                public static readonly string kendo_editable_min_js = Url("kendo.editable.min.js");
                public static readonly string kendo_editor_min_js = Url("kendo.editor.min.js");
                public static readonly string kendo_filtermenu_min_js = Url("kendo.filtermenu.min.js");
                public static readonly string kendo_fx_min_js = Url("kendo.fx.min.js");
                public static readonly string kendo_grid_min_js = Url("kendo.grid.min.js");
                public static readonly string kendo_groupable_min_js = Url("kendo.groupable.min.js");
                public static readonly string kendo_imagebrowser_min_js = Url("kendo.imagebrowser.min.js");
                public static readonly string kendo_list_min_js = Url("kendo.list.min.js");
                public static readonly string kendo_listview_min_js = Url("kendo.listview.min.js");
                public static readonly string kendo_menu_min_js = Url("kendo.menu.min.js");
                public static readonly string kendo_mobile_scroller_min_js = Url("kendo.mobile.scroller.min.js");
                public static readonly string kendo_multiselect_min_js = Url("kendo.multiselect.min.js");
                public static readonly string kendo_numerictextbox_min_js = Url("kendo.numerictextbox.min.js");
                public static readonly string kendo_pager_min_js = Url("kendo.pager.min.js");
                public static readonly string kendo_panelbar_min_js = Url("kendo.panelbar.min.js");
                public static readonly string kendo_popup_min_js = Url("kendo.popup.min.js");
                public static readonly string kendo_reorderable_min_js = Url("kendo.reorderable.min.js");
                public static readonly string kendo_resizable_min_js = Url("kendo.resizable.min.js");
                public static readonly string kendo_router_min_js = Url("kendo.router.min.js");
                public static readonly string kendo_scheduler_agendaview_min_js = Url("kendo.scheduler.agendaview.min.js");
                public static readonly string kendo_scheduler_dayview_min_js = Url("kendo.scheduler.dayview.min.js");
                public static readonly string kendo_scheduler_min_js = Url("kendo.scheduler.min.js");
                public static readonly string kendo_scheduler_monthview_min_js = Url("kendo.scheduler.monthview.min.js");
                public static readonly string kendo_scheduler_recurrence_min_js = Url("kendo.scheduler.recurrence.min.js");
                public static readonly string kendo_scheduler_view_min_js = Url("kendo.scheduler.view.min.js");
                public static readonly string kendo_selectable_min_js = Url("kendo.selectable.min.js");
                public static readonly string kendo_slider_min_js = Url("kendo.slider.min.js");
                public static readonly string kendo_sortable_min_js = Url("kendo.sortable.min.js");
                public static readonly string kendo_splitter_min_js = Url("kendo.splitter.min.js");
                public static readonly string kendo_tabstrip_min_js = Url("kendo.tabstrip.min.js");
                public static readonly string kendo_timepicker_min_js = Url("kendo.timepicker.min.js");
                public static readonly string kendo_timezones_min_js = Url("kendo.timezones.min.js");
                public static readonly string kendo_tooltip_min_js = Url("kendo.tooltip.min.js");
                public static readonly string kendo_treeview_min_js = Url("kendo.treeview.min.js");
                public static readonly string kendo_upload_min_js = Url("kendo.upload.min.js");
                public static readonly string kendo_userevents_min_js = Url("kendo.userevents.min.js");
                public static readonly string kendo_validator_min_js = Url("kendo.validator.min.js");
                public static readonly string kendo_view_min_js = Url("kendo.view.min.js");
                public static readonly string kendo_web_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/kendo.web.min.js") ? Url("kendo.web.min.js") : Url("kendo.web.js");
                              
                public static readonly string kendo_web_min_js = Url("kendo.web.min.js");
                public static readonly string kendo_window_min_js = Url("kendo.window.min.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ko {
            private const string URLPATH = "~/scripts/ko";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string knockout_2_3_0_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.3.0.debug.min.js") ? Url("knockout-2.3.0.debug.min.js") : Url("knockout-2.3.0.debug.js");
                          
            public static readonly string knockout_2_3_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.3.0.min.js") ? Url("knockout-2.3.0.min.js") : Url("knockout-2.3.0.js");
                          
            public static readonly string knockout_binding_handlers_ts = Url("knockout.binding-handlers.ts");
            public static readonly string knockout_binding_handlers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.binding-handlers.min.js") ? Url("knockout.binding-handlers.min.js") : Url("knockout.binding-handlers.js");
                          
            public static readonly string knockout_mapping_latest_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.mapping-latest.debug.min.js") ? Url("knockout.mapping-latest.debug.min.js") : Url("knockout.mapping-latest.debug.js");
                          
            public static readonly string knockout_mapping_latest_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.mapping-latest.min.js") ? Url("knockout.mapping-latest.min.js") : Url("knockout.mapping-latest.js");
                          
            public static readonly string knockout_validation_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.validation.debug.min.js") ? Url("knockout.validation.debug.min.js") : Url("knockout.validation.debug.js");
                          
            public static readonly string knockout_validation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.validation.min.js") ? Url("knockout.validation.min.js") : Url("knockout.validation.js");
                          
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class modernizr {
            private const string URLPATH = "~/scripts/modernizr";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
                          
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class oss {
            private const string URLPATH = "~/scripts/oss";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string D3_LICENSE_txt = Url("D3-LICENSE.txt");
            public static readonly string d3_v3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/d3.v3.min.js") ? Url("d3.v3.min.js") : Url("d3.v3.js");
                          
            public static readonly string d3_v3_min_js = Url("d3.v3.min.js");
            public static readonly string jquery_animate_enhanced_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.animate-enhanced.min.js") ? Url("jquery.animate-enhanced.min.js") : Url("jquery.animate-enhanced.js");
                          
            public static readonly string jquery_autosize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.autosize.min.js") ? Url("jquery.autosize.min.js") : Url("jquery.autosize.js");
                          
            public static readonly string jquery_placeholder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.placeholder.min.js") ? Url("jquery.placeholder.min.js") : Url("jquery.placeholder.js");
                          
            public static readonly string jquery_placeholder_min_js = Url("jquery.placeholder.min.js");
            public static readonly string jquery_tinymce_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tinymce.min.js") ? Url("jquery.tinymce.min.js") : Url("jquery.tinymce.js");
                          
            public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
                          
            public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
            public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
                          
            public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
                          
            public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
                          
            public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
            public static readonly string linq_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linq-vsdoc.min.js") ? Url("linq-vsdoc.min.js") : Url("linq-vsdoc.js");
                          
            public static readonly string linq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/linq.min.js") ? Url("linq.min.js") : Url("linq.js");
                          
            public static readonly string linq_min_js = Url("linq.min.js");
            public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
                          
            public static readonly string moment_min_js = Url("moment.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class require {
            private const string URLPATH = "~/scripts/require";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string main_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/main.min.js") ? Url("main.min.js") : Url("main.js");
                          
            public static readonly string require_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/require.min.js") ? Url("require.min.js") : Url("require.js");
                          
            public static readonly string requireConfig_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/requireConfig.min.js") ? Url("requireConfig.min.js") : Url("requireConfig.js");
                          
            public static readonly string requireConfig_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/requireConfig_debug.min.js") ? Url("requireConfig_debug.min.js") : Url("requireConfig_debug.js");
                          
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class sammy {
            private const string URLPATH = "~/scripts/sammy";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string sammy_0_7_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sammy-0.7.4.min.js") ? Url("sammy-0.7.4.min.js") : Url("sammy-0.7.4.js");
                          
            public static readonly string sammy_0_7_4_min_js = Url("sammy-0.7.4.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class tinymce {
            private const string URLPATH = "~/scripts/tinymce";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/scripts/tinymce/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class langs {
                private const string URLPATH = "~/scripts/tinymce/langs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                              
            }
        
            public static readonly string license_txt = Url("license.txt");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/scripts/tinymce/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advhr {
                    private const string URLPATH = "~/scripts/tinymce/plugins/advhr";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advhr/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string advhr_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advhr.min.css") ? Url("advhr.min.css") : Url("advhr.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advhr/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string rule_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rule.min.js") ? Url("rule.min.js") : Url("rule.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advhr/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string rule_htm = Url("rule.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advimage {
                    private const string URLPATH = "~/scripts/tinymce/plugins/advimage";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advimage/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string advimage_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advimage.min.css") ? Url("advimage.min.css") : Url("advimage.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    public static readonly string image_htm = Url("image.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advimage/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string sample_gif = Url("sample.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advimage/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advimage/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advlink {
                    private const string URLPATH = "~/scripts/tinymce/plugins/advlink";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advlink/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string advlink_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advlink.min.css") ? Url("advlink.min.css") : Url("advlink.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advlink/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string advlink_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advlink.min.js") ? Url("advlink.min.js") : Url("advlink.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advlink/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string link_htm = Url("link.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advlist {
                    private const string URLPATH = "~/scripts/tinymce/plugins/advlist";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autolink {
                    private const string URLPATH = "~/scripts/tinymce/plugins/autolink";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autoresize {
                    private const string URLPATH = "~/scripts/tinymce/plugins/autoresize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autosave {
                    private const string URLPATH = "~/scripts/tinymce/plugins/autosave";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bbcode {
                    private const string URLPATH = "~/scripts/tinymce/plugins/bbcode";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class contextmenu {
                    private const string URLPATH = "~/scripts/tinymce/plugins/contextmenu";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class directionality {
                    private const string URLPATH = "~/scripts/tinymce/plugins/directionality";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class emotions {
                    private const string URLPATH = "~/scripts/tinymce/plugins/emotions";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    public static readonly string emotions_htm = Url("emotions.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/plugins/emotions/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string smiley_cool_gif = Url("smiley-cool.gif");
                        public static readonly string smiley_cry_gif = Url("smiley-cry.gif");
                        public static readonly string smiley_embarassed_gif = Url("smiley-embarassed.gif");
                        public static readonly string smiley_foot_in_mouth_gif = Url("smiley-foot-in-mouth.gif");
                        public static readonly string smiley_frown_gif = Url("smiley-frown.gif");
                        public static readonly string smiley_innocent_gif = Url("smiley-innocent.gif");
                        public static readonly string smiley_kiss_gif = Url("smiley-kiss.gif");
                        public static readonly string smiley_laughing_gif = Url("smiley-laughing.gif");
                        public static readonly string smiley_money_mouth_gif = Url("smiley-money-mouth.gif");
                        public static readonly string smiley_sealed_gif = Url("smiley-sealed.gif");
                        public static readonly string smiley_smile_gif = Url("smiley-smile.gif");
                        public static readonly string smiley_surprised_gif = Url("smiley-surprised.gif");
                        public static readonly string smiley_tongue_out_gif = Url("smiley-tongue-out.gif");
                        public static readonly string smiley_undecided_gif = Url("smiley-undecided.gif");
                        public static readonly string smiley_wink_gif = Url("smiley-wink.gif");
                        public static readonly string smiley_yell_gif = Url("smiley-yell.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/emotions/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string emotions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/emotions.min.js") ? Url("emotions.min.js") : Url("emotions.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/emotions/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class example {
                    private const string URLPATH = "~/scripts/tinymce/plugins/example";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_htm = Url("dialog.htm");
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/plugins/example/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string example_gif = Url("example.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/example/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.js") ? Url("dialog.min.js") : Url("dialog.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/example/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                                      
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class example_dependency {
                    private const string URLPATH = "~/scripts/tinymce/plugins/example_dependency";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fullpage {
                    private const string URLPATH = "~/scripts/tinymce/plugins/fullpage";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/fullpage/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fullpage_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullpage.min.css") ? Url("fullpage.min.css") : Url("fullpage.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    public static readonly string fullpage_htm = Url("fullpage.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/fullpage/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fullpage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullpage.min.js") ? Url("fullpage.min.js") : Url("fullpage.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/fullpage/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fullscreen {
                    private const string URLPATH = "~/scripts/tinymce/plugins/fullscreen";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    public static readonly string fullscreen_htm = Url("fullscreen.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iespell {
                    private const string URLPATH = "~/scripts/tinymce/plugins/iespell";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class inlinepopups {
                    private const string URLPATH = "~/scripts/tinymce/plugins/inlinepopups";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class skins {
                        private const string URLPATH = "~/scripts/tinymce/plugins/inlinepopups/skins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class clearlooks2 {
                            private const string URLPATH = "~/scripts/tinymce/plugins/inlinepopups/skins/clearlooks2";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class img {
                                private const string URLPATH = "~/scripts/tinymce/plugins/inlinepopups/skins/clearlooks2/img";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string alert_gif = Url("alert.gif");
                                public static readonly string button_gif = Url("button.gif");
                                public static readonly string buttons_gif = Url("buttons.gif");
                                public static readonly string confirm_gif = Url("confirm.gif");
                                public static readonly string corners_gif = Url("corners.gif");
                                public static readonly string horizontal_gif = Url("horizontal.gif");
                                public static readonly string vertical_gif = Url("vertical.gif");
                            }
                        
                            public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                                 
                        }
                    
                    }
                
                    public static readonly string template_htm = Url("template.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class insertdatetime {
                    private const string URLPATH = "~/scripts/tinymce/plugins/insertdatetime";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class layer {
                    private const string URLPATH = "~/scripts/tinymce/plugins/layer";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class legacyoutput {
                    private const string URLPATH = "~/scripts/tinymce/plugins/legacyoutput";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lists {
                    private const string URLPATH = "~/scripts/tinymce/plugins/lists";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class media {
                    private const string URLPATH = "~/scripts/tinymce/plugins/media";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/media/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string media_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/media.min.css") ? Url("media.min.css") : Url("media.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/media/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string embed_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/embed.min.js") ? Url("embed.min.js") : Url("embed.js");
                                      
                        public static readonly string media_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/media.min.js") ? Url("media.min.js") : Url("media.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/media/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string media_htm = Url("media.htm");
                    public static readonly string moxieplayer_swf = Url("moxieplayer.swf");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class nonbreaking {
                    private const string URLPATH = "~/scripts/tinymce/plugins/nonbreaking";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class noneditable {
                    private const string URLPATH = "~/scripts/tinymce/plugins/noneditable";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    private const string URLPATH = "~/scripts/tinymce/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class paste {
                    private const string URLPATH = "~/scripts/tinymce/plugins/paste";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/paste/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pastetext_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pastetext.min.js") ? Url("pastetext.min.js") : Url("pastetext.js");
                                      
                        public static readonly string pasteword_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pasteword.min.js") ? Url("pasteword.min.js") : Url("pasteword.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/paste/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string pastetext_htm = Url("pastetext.htm");
                    public static readonly string pasteword_htm = Url("pasteword.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    private const string URLPATH = "~/scripts/tinymce/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    public static readonly string example_html = Url("example.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jscripts {
                        private const string URLPATH = "~/scripts/tinymce/plugins/preview/jscripts";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string embed_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/embed.min.js") ? Url("embed.min.js") : Url("embed.js");
                                      
                    }
                
                    public static readonly string preview_html = Url("preview.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class print {
                    private const string URLPATH = "~/scripts/tinymce/plugins/print";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class save {
                    private const string URLPATH = "~/scripts/tinymce/plugins/save";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class searchreplace {
                    private const string URLPATH = "~/scripts/tinymce/plugins/searchreplace";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/searchreplace/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string searchreplace_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchreplace.min.css") ? Url("searchreplace.min.css") : Url("searchreplace.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/searchreplace/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string searchreplace_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchreplace.min.js") ? Url("searchreplace.min.js") : Url("searchreplace.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/searchreplace/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string searchreplace_htm = Url("searchreplace.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class spellchecker {
                    private const string URLPATH = "~/scripts/tinymce/plugins/spellchecker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/spellchecker/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/plugins/spellchecker/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string wline_gif = Url("wline.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class style {
                    private const string URLPATH = "~/scripts/tinymce/plugins/style";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/style/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string props_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/props.min.css") ? Url("props.min.css") : Url("props.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/style/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string props_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/props.min.js") ? Url("props.min.js") : Url("props.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/style/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string props_htm = Url("props.htm");
                    public static readonly string readme_txt = Url("readme.txt");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabfocus {
                    private const string URLPATH = "~/scripts/tinymce/plugins/tabfocus";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    private const string URLPATH = "~/scripts/tinymce/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string cell_htm = Url("cell.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/table/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string cell_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cell.min.css") ? Url("cell.min.css") : Url("cell.css");
                             
                        public static readonly string row_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/row.min.css") ? Url("row.min.css") : Url("row.css");
                             
                        public static readonly string table_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.css") ? Url("table.min.css") : Url("table.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/table/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string cell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cell.min.js") ? Url("cell.min.js") : Url("cell.js");
                                      
                        public static readonly string merge_cells_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/merge_cells.min.js") ? Url("merge_cells.min.js") : Url("merge_cells.js");
                                      
                        public static readonly string row_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/row.min.js") ? Url("row.min.js") : Url("row.js");
                                      
                        public static readonly string table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.js") ? Url("table.min.js") : Url("table.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/table/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string merge_cells_htm = Url("merge_cells.htm");
                    public static readonly string row_htm = Url("row.htm");
                    public static readonly string table_htm = Url("table.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class template {
                    private const string URLPATH = "~/scripts/tinymce/plugins/template";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string blank_htm = Url("blank.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/template/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string template_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/template.min.css") ? Url("template.min.css") : Url("template.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/template/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string template_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/template.min.js") ? Url("template.min.js") : Url("template.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/template/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string template_htm = Url("template.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class visualblocks {
                    private const string URLPATH = "~/scripts/tinymce/plugins/visualblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/visualblocks/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string visualblocks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/visualblocks.min.css") ? Url("visualblocks.min.css") : Url("visualblocks.css");
                             
                    }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class visualchars {
                    private const string URLPATH = "~/scripts/tinymce/plugins/visualchars";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wordcount {
                    private const string URLPATH = "~/scripts/tinymce/plugins/wordcount";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class xhtmlxtras {
                    private const string URLPATH = "~/scripts/tinymce/plugins/xhtmlxtras";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string abbr_htm = Url("abbr.htm");
                    public static readonly string acronym_htm = Url("acronym.htm");
                    public static readonly string attributes_htm = Url("attributes.htm");
                    public static readonly string cite_htm = Url("cite.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/xhtmlxtras/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string attributes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/attributes.min.css") ? Url("attributes.min.css") : Url("attributes.css");
                             
                        public static readonly string popup_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popup.min.css") ? Url("popup.min.css") : Url("popup.css");
                             
                    }
                
                    public static readonly string del_htm = Url("del.htm");
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                                  
                    public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                                  
                    public static readonly string ins_htm = Url("ins.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/xhtmlxtras/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string abbr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/abbr.min.js") ? Url("abbr.min.js") : Url("abbr.js");
                                      
                        public static readonly string acronym_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/acronym.min.js") ? Url("acronym.min.js") : Url("acronym.js");
                                      
                        public static readonly string attributes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/attributes.min.js") ? Url("attributes.min.js") : Url("attributes.js");
                                      
                        public static readonly string cite_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cite.min.js") ? Url("cite.min.js") : Url("cite.js");
                                      
                        public static readonly string del_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/del.min.js") ? Url("del.min.js") : Url("del.js");
                                      
                        public static readonly string element_common_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/element_common.min.js") ? Url("element_common.min.js") : Url("element_common.js");
                                      
                        public static readonly string ins_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ins.min.js") ? Url("ins.min.js") : Url("ins.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/xhtmlxtras/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/scripts/tinymce/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advanced {
                    private const string URLPATH = "~/scripts/tinymce/themes/advanced";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string about_htm = Url("about.htm");
                    public static readonly string anchor_htm = Url("anchor.htm");
                    public static readonly string charmap_htm = Url("charmap.htm");
                    public static readonly string color_picker_htm = Url("color_picker.htm");
                    public static readonly string editor_template_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_template.min.js") ? Url("editor_template.min.js") : Url("editor_template.js");
                                  
                    public static readonly string editor_template_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_template_src.min.js") ? Url("editor_template_src.min.js") : Url("editor_template_src.js");
                                  
                    public static readonly string image_htm = Url("image.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/themes/advanced/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string colorpicker_jpg = Url("colorpicker.jpg");
                        public static readonly string flash_gif = Url("flash.gif");
                        public static readonly string icons_gif = Url("icons.gif");
                        public static readonly string iframe_gif = Url("iframe.gif");
                        public static readonly string pagebreak_gif = Url("pagebreak.gif");
                        public static readonly string quicktime_gif = Url("quicktime.gif");
                        public static readonly string realmedia_gif = Url("realmedia.gif");
                        public static readonly string shockwave_gif = Url("shockwave.gif");
                        public static readonly string trans_gif = Url("trans.gif");
                        public static readonly string video_gif = Url("video.gif");
                        public static readonly string windowsmedia_gif = Url("windowsmedia.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/themes/advanced/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string about_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/about.min.js") ? Url("about.min.js") : Url("about.js");
                                      
                        public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                                      
                        public static readonly string charmap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/charmap.min.js") ? Url("charmap.min.js") : Url("charmap.js");
                                      
                        public static readonly string color_picker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/color_picker.min.js") ? Url("color_picker.min.js") : Url("color_picker.js");
                                      
                        public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                                      
                        public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                                      
                        public static readonly string source_editor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/source_editor.min.js") ? Url("source_editor.min.js") : Url("source_editor.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/themes/advanced/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                                      
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                      
                    }
                
                    public static readonly string link_htm = Url("link.htm");
                    public static readonly string shortcuts_htm = Url("shortcuts.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class skins {
                        private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class @default {
                            private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/default";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                 
                            public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                                 
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class img {
                                private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/default/img";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string buttons_png = Url("buttons.png");
                                public static readonly string items_gif = Url("items.gif");
                                public static readonly string menu_arrow_gif = Url("menu_arrow.gif");
                                public static readonly string menu_check_gif = Url("menu_check.gif");
                                public static readonly string progress_gif = Url("progress.gif");
                                public static readonly string tabs_gif = Url("tabs.gif");
                            }
                        
                            public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class highcontrast {
                            private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/highcontrast";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                 
                            public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                                 
                            public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class o2k7 {
                            private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/o2k7";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                 
                            public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                                 
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class img {
                                private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/o2k7/img";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string button_bg_png = Url("button_bg.png");
                                public static readonly string button_bg_black_png = Url("button_bg_black.png");
                                public static readonly string button_bg_silver_png = Url("button_bg_silver.png");
                            }
                        
                            public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                 
                            public static readonly string ui_black_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui_black.min.css") ? Url("ui_black.min.css") : Url("ui_black.css");
                                 
                            public static readonly string ui_silver_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui_silver.min.css") ? Url("ui_silver.min.css") : Url("ui_silver.css");
                                 
                        }
                    
                    }
                
                    public static readonly string source_editor_htm = Url("source_editor.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class simple {
                    private const string URLPATH = "~/scripts/tinymce/themes/simple";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_template_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_template.min.js") ? Url("editor_template.min.js") : Url("editor_template.js");
                                  
                    public static readonly string editor_template_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_template_src.min.js") ? Url("editor_template_src.min.js") : Url("editor_template_src.js");
                                  
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/themes/simple/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string icons_gif = Url("icons.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/themes/simple/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                                      
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class skins {
                        private const string URLPATH = "~/scripts/tinymce/themes/simple/skins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class @default {
                            private const string URLPATH = "~/scripts/tinymce/themes/simple/skins/default";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                 
                            public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class o2k7 {
                            private const string URLPATH = "~/scripts/tinymce/themes/simple/skins/o2k7";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                 
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class img {
                                private const string URLPATH = "~/scripts/tinymce/themes/simple/skins/o2k7/img";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string button_bg_png = Url("button_bg.png");
                            }
                        
                            public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                 
                        }
                    
                    }
                
                }
            
            }
        
            public static readonly string tiny_mce_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiny_mce.min.js") ? Url("tiny_mce.min.js") : Url("tiny_mce.js");
                          
            public static readonly string tiny_mce_popup_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiny_mce_popup.min.js") ? Url("tiny_mce_popup.min.js") : Url("tiny_mce_popup.js");
                          
            public static readonly string tiny_mce_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiny_mce_src.min.js") ? Url("tiny_mce_src.min.js") : Url("tiny_mce_src.js");
                          
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class utils {
                private const string URLPATH = "~/scripts/tinymce/utils";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string editable_selects_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editable_selects.min.js") ? Url("editable_selects.min.js") : Url("editable_selects.js");
                              
                public static readonly string form_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form_utils.min.js") ? Url("form_utils.min.js") : Url("form_utils.js");
                              
                public static readonly string mctabs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mctabs.min.js") ? Url("mctabs.min.js") : Url("mctabs.js");
                              
                public static readonly string validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validate.min.js") ? Url("validate.min.js") : Url("validate.js");
                              
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class typings {
            private const string URLPATH = "~/scripts/typings";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class d3 {
                private const string URLPATH = "~/scripts/typings/d3";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string d3_d_ts = Url("d3.d.ts");
                public static readonly string d3_superformula_d_ts = Url("d3.superformula.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class globalize {
                private const string URLPATH = "~/scripts/typings/globalize";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string globalize_d_ts = Url("globalize.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class google_visualization {
                private const string URLPATH = "~/scripts/typings/google.visualization";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string google_visualization_d_ts = Url("google.visualization.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class googlemaps {
                private const string URLPATH = "~/scripts/typings/googlemaps";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string google_maps_d_ts = Url("google.maps.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class history {
                private const string URLPATH = "~/scripts/typings/history";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string history_d_ts = Url("history.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery {
                private const string URLPATH = "~/scripts/typings/jquery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_d_ts = Url("jquery.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery_plugins {
                private const string URLPATH = "~/scripts/typings/jquery.plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_autosize_d_ts = Url("jquery.autosize.d.ts");
                public static readonly string jquery_placeholder_d_ts = Url("jquery.placeholder.d.ts");
                public static readonly string jquery_tinymce_d_ts = Url("jquery.tinymce.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jqueryui {
                private const string URLPATH = "~/scripts/typings/jqueryui";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jqueryui_d_ts = Url("jqueryui.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class kendo {
                private const string URLPATH = "~/scripts/typings/kendo";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string kendo_all_d_ts = Url("kendo.all.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class knockout {
                private const string URLPATH = "~/scripts/typings/knockout";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string knockout_amd_d_ts = Url("knockout.amd.d.ts");
                public static readonly string knockout_d_ts = Url("knockout.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class knockout_mapping {
                private const string URLPATH = "~/scripts/typings/knockout.mapping";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string knockout_mapping_d_ts = Url("knockout.mapping.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class knockout_validation {
                private const string URLPATH = "~/scripts/typings/knockout.validation";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string knockout_validation_d_ts = Url("knockout.validation.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class linq {
                private const string URLPATH = "~/scripts/typings/linq";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string linq_3_0_3_Beta4_d_ts = Url("linq.3.0.3-Beta4.d.ts");
                public static readonly string linq_d_ts = Url("linq.d.ts");
                public static readonly string linq_jquery_d_ts = Url("linq.jquery.d.ts");
            }
        
            public static readonly string lodash_d_ts = Url("lodash.d.ts");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class modernizr {
                private const string URLPATH = "~/scripts/typings/modernizr";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string modernizr_d_ts = Url("modernizr.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class moment {
                private const string URLPATH = "~/scripts/typings/moment";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string moment_d_ts = Url("moment.d.ts");
            }
        
            public static readonly string myTypes_d_ts = Url("myTypes.d.ts");
            public static readonly string page_d_ts = Url("page.d.ts");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class sammyjs {
                private const string URLPATH = "~/scripts/typings/sammyjs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string sammyjs_d_ts = Url("sammyjs.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class tinymce {
                private const string URLPATH = "~/scripts/typings/tinymce";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string tinymce_d_ts = Url("tinymce.d.ts");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class viewmodels {
            private const string URLPATH = "~/scripts/viewmodels";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class activities {
                private const string URLPATH = "~/scripts/viewmodels/activities";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Activities_ts = Url("Activities.ts");
                public static readonly string Activities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Activities.min.js") ? Url("Activities.min.js") : Url("Activities.js");
                              
                public static readonly string Activity_ts = Url("Activity.ts");
                public static readonly string Activity_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Activity.min.js") ? Url("Activity.min.js") : Url("Activity.js");
                              
                public static readonly string ActivityEnums_ts = Url("ActivityEnums.ts");
                public static readonly string ActivityEnums_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ActivityEnums.min.js") ? Url("ActivityEnums.min.js") : Url("ActivityEnums.js");
                              
                public static readonly string Map_ts = Url("Map.ts");
                public static readonly string Map_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Map.min.js") ? Url("Map.min.js") : Url("Map.js");
                              
                public static readonly string MapOld_ts = Url("MapOld.ts");
                public static readonly string Models_d_ts = Url("Models.d.ts");
                public static readonly string PublicView_ts = Url("PublicView.ts");
                public static readonly string PublicView_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PublicView.min.js") ? Url("PublicView.min.js") : Url("PublicView.js");
                              
                public static readonly string Search_ts = Url("Search.ts");
                public static readonly string Search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Search.min.js") ? Url("Search.min.js") : Url("Search.js");
                              
                public static readonly string SearchMap_ts = Url("SearchMap.ts");
                public static readonly string SearchMap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchMap.min.js") ? Url("SearchMap.min.js") : Url("SearchMap.js");
                              
                public static readonly string Server_ts = Url("Server.ts");
                public static readonly string Server_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Server.min.js") ? Url("Server.min.js") : Url("Server.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class agreements {
                private const string URLPATH = "~/scripts/viewmodels/agreements";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string AgreementVM_ts = Url("AgreementVM.ts");
                public static readonly string AgreementVM_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AgreementVM.min.js") ? Url("AgreementVM.min.js") : Url("AgreementVM.js");
                              
                public static readonly string ApiModels_d_ts = Url("ApiModels.d.ts");
                public static readonly string BasicInfo_ts = Url("BasicInfo.ts");
                public static readonly string BasicInfo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/BasicInfo.min.js") ? Url("BasicInfo.min.js") : Url("BasicInfo.js");
                              
                public static readonly string Contacts_ts = Url("Contacts.ts");
                public static readonly string Contacts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Contacts.min.js") ? Url("Contacts.min.js") : Url("Contacts.js");
                              
                public static readonly string DatesStatus_ts = Url("DatesStatus.ts");
                public static readonly string DatesStatus_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/DatesStatus.min.js") ? Url("DatesStatus.min.js") : Url("DatesStatus.js");
                              
                public static readonly string EstablishmentSearchNav_ts = Url("EstablishmentSearchNav.ts");
                public static readonly string EstablishmentSearchNav_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/EstablishmentSearchNav.min.js") ? Url("EstablishmentSearchNav.min.js") : Url("EstablishmentSearchNav.js");
                              
                public static readonly string FileAttachments_ts = Url("FileAttachments.ts");
                public static readonly string FileAttachments_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/FileAttachments.min.js") ? Url("FileAttachments.min.js") : Url("FileAttachments.js");
                              
                public static readonly string Participants_ts = Url("Participants.ts");
                public static readonly string Participants_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Participants.min.js") ? Url("Participants.min.js") : Url("Participants.js");
                              
                public static readonly string Phones_ts = Url("Phones.ts");
                public static readonly string Phones_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Phones.min.js") ? Url("Phones.min.js") : Url("Phones.js");
                              
                public static readonly string PopulateFiles_ts = Url("PopulateFiles.ts");
                public static readonly string PopulateFiles_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PopulateFiles.min.js") ? Url("PopulateFiles.min.js") : Url("PopulateFiles.js");
                              
                public static readonly string PublicView_ts = Url("PublicView.ts");
                public static readonly string PublicView_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PublicView.min.js") ? Url("PublicView.min.js") : Url("PublicView.js");
                              
                public static readonly string ScrollBody_ts = Url("ScrollBody.ts");
                public static readonly string ScrollBody_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ScrollBody.min.js") ? Url("ScrollBody.min.js") : Url("ScrollBody.js");
                              
                public static readonly string Search_ts = Url("Search.ts");
                public static readonly string Search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Search.min.js") ? Url("Search.min.js") : Url("Search.js");
                              
                public static readonly string SearchLenses_ts = Url("SearchLenses.ts");
                public static readonly string SearchLenses_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchLenses.min.js") ? Url("SearchLenses.min.js") : Url("SearchLenses.js");
                              
                public static readonly string SearchMap_ts = Url("SearchMap.ts");
                public static readonly string SearchMap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchMap.min.js") ? Url("SearchMap.min.js") : Url("SearchMap.js");
                              
                public static readonly string SearchResult_ts = Url("SearchResult.ts");
                public static readonly string SearchResult_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchResult.min.js") ? Url("SearchResult.min.js") : Url("SearchResult.js");
                              
                public static readonly string SearchTable_ts = Url("SearchTable.ts");
                public static readonly string SearchTable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchTable.min.js") ? Url("SearchTable.min.js") : Url("SearchTable.js");
                              
                public static readonly string settings_ts = Url("settings.ts");
                public static readonly string settings_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/settings.min.js") ? Url("settings.min.js") : Url("settings.js");
                              
                public static readonly string Visibility_ts = Url("Visibility.ts");
                public static readonly string Visibility_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Visibility.min.js") ? Url("Visibility.min.js") : Url("Visibility.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class degrees {
                private const string URLPATH = "~/scripts/viewmodels/degrees";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Degree_ts = Url("Degree.ts");
                public static readonly string Degree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Degree.min.js") ? Url("Degree.min.js") : Url("Degree.js");
                              
                public static readonly string Degrees_ts = Url("Degrees.ts");
                public static readonly string Degrees_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Degrees.min.js") ? Url("Degrees.min.js") : Url("Degrees.js");
                              
                public static readonly string EstablishmentSearchNav_ts = Url("EstablishmentSearchNav.ts");
                public static readonly string EstablishmentSearchNav_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/EstablishmentSearchNav.min.js") ? Url("EstablishmentSearchNav.min.js") : Url("EstablishmentSearchNav.js");
                              
                public static readonly string Models_d_ts = Url("Models.d.ts");
                public static readonly string Search_ts = Url("Search.ts");
                public static readonly string Search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Search.min.js") ? Url("Search.min.js") : Url("Search.js");
                              
                public static readonly string ServiceApiModel_d_ts = Url("ServiceApiModel.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class employees {
                private const string URLPATH = "~/scripts/viewmodels/employees";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Employees_ts = Url("Employees.ts");
                public static readonly string Employees_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Employees.min.js") ? Url("Employees.min.js") : Url("Employees.js");
                              
                public static readonly string Models_d_ts = Url("Models.d.ts");
                public static readonly string Routes_d_ts = Url("Routes.d.ts");
                public static readonly string Server_ts = Url("Server.ts");
                public static readonly string Server_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Server.min.js") ? Url("Server.min.js") : Url("Server.js");
                              
                public static readonly string ServerApiModel_d_ts = Url("ServerApiModel.d.ts");
                public static readonly string Summary_ts = Url("Summary.ts");
                public static readonly string Summary_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Summary.min.js") ? Url("Summary.min.js") : Url("Summary.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class establishments {
                private const string URLPATH = "~/scripts/viewmodels/establishments";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ApiModels_d_ts = Url("ApiModels.d.ts");
                public static readonly string Item_ts = Url("Item.ts");
                public static readonly string Item_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Item.min.js") ? Url("Item.min.js") : Url("Item.js");
                              
                public static readonly string Location_ts = Url("Location.ts");
                public static readonly string Location_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Location.min.js") ? Url("Location.min.js") : Url("Location.js");
                              
                public static readonly string Name_ts = Url("Name.ts");
                public static readonly string Name_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Name.min.js") ? Url("Name.min.js") : Url("Name.js");
                              
                public static readonly string Routes_d_ts = Url("Routes.d.ts");
                public static readonly string Search_ts = Url("Search.ts");
                public static readonly string Search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Search.min.js") ? Url("Search.min.js") : Url("Search.js");
                              
                public static readonly string SearchResult_ts = Url("SearchResult.ts");
                public static readonly string SearchResult_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchResult.min.js") ? Url("SearchResult.min.js") : Url("SearchResult.js");
                              
                public static readonly string Server_ts = Url("Server.ts");
                public static readonly string Server_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Server.min.js") ? Url("Server.min.js") : Url("Server.js");
                              
                public static readonly string Url_ts = Url("Url.ts");
                public static readonly string Url_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Url.min.js") ? Url("Url.min.js") : Url("Url.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class geographicExpertises {
                private const string URLPATH = "~/scripts/viewmodels/geographicExpertises";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string GeographicExpertise_ts = Url("GeographicExpertise.ts");
                public static readonly string GeographicExpertise_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/GeographicExpertise.min.js") ? Url("GeographicExpertise.min.js") : Url("GeographicExpertise.js");
                              
                public static readonly string GeographicExpertises_ts = Url("GeographicExpertises.ts");
                public static readonly string GeographicExpertises_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/GeographicExpertises.min.js") ? Url("GeographicExpertises.min.js") : Url("GeographicExpertises.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class internationalAffiliations {
                private const string URLPATH = "~/scripts/viewmodels/internationalAffiliations";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string InternationalAffiliation_ts = Url("InternationalAffiliation.ts");
                public static readonly string InternationalAffiliation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/InternationalAffiliation.min.js") ? Url("InternationalAffiliation.min.js") : Url("InternationalAffiliation.js");
                              
                public static readonly string InternationalAffiliations_ts = Url("InternationalAffiliations.ts");
                public static readonly string InternationalAffiliations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/InternationalAffiliations.min.js") ? Url("InternationalAffiliations.min.js") : Url("InternationalAffiliations.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class languageExpertises {
                private const string URLPATH = "~/scripts/viewmodels/languageExpertises";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string LanguageExpertise_ts = Url("LanguageExpertise.ts");
                public static readonly string LanguageExpertise_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LanguageExpertise.min.js") ? Url("LanguageExpertise.min.js") : Url("LanguageExpertise.js");
                              
                public static readonly string LanguageExpertises_ts = Url("LanguageExpertises.ts");
                public static readonly string LanguageExpertises_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LanguageExpertises.min.js") ? Url("LanguageExpertises.min.js") : Url("LanguageExpertises.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class languages {
                private const string URLPATH = "~/scripts/viewmodels/languages";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ApiModels_d_ts = Url("ApiModels.d.ts");
                public static readonly string Models_d_ts = Url("Models.d.ts");
                public static readonly string Search_ts = Url("Search.ts");
                public static readonly string Search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Search.min.js") ? Url("Search.min.js") : Url("Search.js");
                              
                public static readonly string ServiceApiModel_d_ts = Url("ServiceApiModel.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class my {
                private const string URLPATH = "~/scripts/viewmodels/my";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Affiliations_ts = Url("Affiliations.ts");
                public static readonly string Affiliations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Affiliations.min.js") ? Url("Affiliations.min.js") : Url("Affiliations.js");
                              
                public static readonly string EmailAddresses_ts = Url("EmailAddresses.ts");
                public static readonly string EmailAddresses_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/EmailAddresses.min.js") ? Url("EmailAddresses.min.js") : Url("EmailAddresses.js");
                              
                public static readonly string Profile_ts = Url("Profile.ts");
                public static readonly string Profile_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Profile.min.js") ? Url("Profile.min.js") : Url("Profile.js");
                              
                public static readonly string ServerApiModel_d_ts = Url("ServerApiModel.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class people {
                private const string URLPATH = "~/scripts/viewmodels/people";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Activities_ts = Url("Activities.ts");
                public static readonly string Activities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Activities.min.js") ? Url("Activities.min.js") : Url("Activities.js");
                              
                public static readonly string AffiliationsEditor_ts = Url("AffiliationsEditor.ts");
                public static readonly string AffiliationsEditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AffiliationsEditor.min.js") ? Url("AffiliationsEditor.min.js") : Url("AffiliationsEditor.js");
                              
                public static readonly string Degrees_ts = Url("Degrees.ts");
                public static readonly string Degrees_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Degrees.min.js") ? Url("Degrees.min.js") : Url("Degrees.js");
                              
                public static readonly string Global_ts = Url("Global.ts");
                public static readonly string Global_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Global.min.js") ? Url("Global.min.js") : Url("Global.js");
                              
                public static readonly string Languages_ts = Url("Languages.ts");
                public static readonly string Languages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Languages.min.js") ? Url("Languages.min.js") : Url("Languages.js");
                              
                public static readonly string Models_d_ts = Url("Models.d.ts");
                public static readonly string PersonalInfoEditor_ts = Url("PersonalInfoEditor.ts");
                public static readonly string PersonalInfoEditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PersonalInfoEditor.min.js") ? Url("PersonalInfoEditor.min.js") : Url("PersonalInfoEditor.js");
                              
                public static readonly string Routes_d_ts = Url("Routes.d.ts");
                public static readonly string Server_ts = Url("Server.ts");
                public static readonly string Server_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Server.min.js") ? Url("Server.min.js") : Url("Server.js");
                              
                public static readonly string Urls_ts = Url("Urls.ts");
                public static readonly string Urls_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Urls.min.js") ? Url("Urls.min.js") : Url("Urls.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class places {
                private const string URLPATH = "~/scripts/viewmodels/places";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ApiModels_d_ts = Url("ApiModels.d.ts");
                public static readonly string Routes_d_ts = Url("Routes.d.ts");
                public static readonly string Utils_ts = Url("Utils.ts");
                public static readonly string Utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Utils.min.js") ? Url("Utils.min.js") : Url("Utils.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class representatives {
                private const string URLPATH = "~/scripts/viewmodels/representatives";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string RepModuleSettings_ts = Url("RepModuleSettings.ts");
                public static readonly string RepModuleSettings_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RepModuleSettings.min.js") ? Url("RepModuleSettings.min.js") : Url("RepModuleSettings.js");
                              
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class users {
                private const string URLPATH = "~/scripts/viewmodels/users";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Search_ts = Url("Search.ts");
                public static readonly string Search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Search.min.js") ? Url("Search.min.js") : Url("Search.js");
                              
                public static readonly string SearchResult_ts = Url("SearchResult.ts");
                public static readonly string SearchResult_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchResult.min.js") ? Url("SearchResult.min.js") : Url("SearchResult.js");
                              
                public static readonly string User_ts = Url("User.ts");
                public static readonly string User_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/User.min.js") ? Url("User.min.js") : Url("User.js");
                              
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class content {
        private const string URLPATH = "~/content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class countries {
            private const string URLPATH = "~/content/countries";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string ne_countries_110m_json = Url("ne-countries-110m.json");
            public static readonly string ne_countries_50m_json = Url("ne-countries-50m.json");
            public static readonly string ne_v2_0_0_countries_geojson_zip = Url("ne-v2.0.0-countries-geojson.zip");
            public static readonly string world_countries_json = Url("world-countries.json");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class kendo {
            private const string URLPATH = "~/content/kendo";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class _2013_2_716 {
                private const string URLPATH = "~/content/kendo/2013.2.716";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Black {
                    private const string URLPATH = "~/content/kendo/2013.2.716/Black";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class BlueOpal {
                    private const string URLPATH = "~/content/kendo/2013.2.716/BlueOpal";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Bootstrap {
                    private const string URLPATH = "~/content/kendo/2013.2.716/Bootstrap";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Default {
                    private const string URLPATH = "~/content/kendo/2013.2.716/Default";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Flat {
                    private const string URLPATH = "~/content/kendo/2013.2.716/Flat";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class HighContrast {
                    private const string URLPATH = "~/content/kendo/2013.2.716/HighContrast";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                public static readonly string kendo_black_min_css = Url("kendo.black.min.css");
                public static readonly string kendo_blueopal_min_css = Url("kendo.blueopal.min.css");
                public static readonly string kendo_bootstrap_min_css = Url("kendo.bootstrap.min.css");
                public static readonly string kendo_common_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/kendo.common.min.css") ? Url("kendo.common.min.css") : Url("kendo.common.css");
                     
                public static readonly string kendo_common_min_css = Url("kendo.common.min.css");
                public static readonly string kendo_default_min_css = Url("kendo.default.min.css");
                public static readonly string kendo_flat_min_css = Url("kendo.flat.min.css");
                public static readonly string kendo_highcontrast_min_css = Url("kendo.highcontrast.min.css");
                public static readonly string kendo_metro_min_css = Url("kendo.metro.min.css");
                public static readonly string kendo_metroblack_min_css = Url("kendo.metroblack.min.css");
                public static readonly string kendo_moonlight_min_css = Url("kendo.moonlight.min.css");
                public static readonly string kendo_rtl_min_css = Url("kendo.rtl.min.css");
                public static readonly string kendo_silver_min_css = Url("kendo.silver.min.css");
                public static readonly string kendo_uniform_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/kendo.uniform.min.css") ? Url("kendo.uniform.min.css") : Url("kendo.uniform.css");
                     
                public static readonly string kendo_uniform_min_css = Url("kendo.uniform.min.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Metro {
                    private const string URLPATH = "~/content/kendo/2013.2.716/Metro";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class MetroBlack {
                    private const string URLPATH = "~/content/kendo/2013.2.716/MetroBlack";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Moonlight {
                    private const string URLPATH = "~/content/kendo/2013.2.716/Moonlight";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Silver {
                    private const string URLPATH = "~/content/kendo/2013.2.716/Silver";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class textures {
                    private const string URLPATH = "~/content/kendo/2013.2.716/textures";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string brushed_metal_png = Url("brushed-metal.png");
                    public static readonly string dots1_png = Url("dots1.png");
                    public static readonly string dots10_png = Url("dots10.png");
                    public static readonly string dots11_png = Url("dots11.png");
                    public static readonly string dots12_png = Url("dots12.png");
                    public static readonly string dots13_png = Url("dots13.png");
                    public static readonly string dots2_png = Url("dots2.png");
                    public static readonly string dots3_png = Url("dots3.png");
                    public static readonly string dots4_png = Url("dots4.png");
                    public static readonly string dots5_png = Url("dots5.png");
                    public static readonly string dots6_png = Url("dots6.png");
                    public static readonly string dots7_png = Url("dots7.png");
                    public static readonly string dots8_png = Url("dots8.png");
                    public static readonly string dots9_png = Url("dots9.png");
                    public static readonly string glass_lighter_png = Url("glass-lighter.png");
                    public static readonly string glass_png = Url("glass.png");
                    public static readonly string highlight_png = Url("highlight.png");
                    public static readonly string hsv_gradient_png = Url("hsv-gradient.png");
                    public static readonly string hue_png = Url("hue.png");
                    public static readonly string leather1_png = Url("leather1.png");
                    public static readonly string leather2_png = Url("leather2.png");
                    public static readonly string noise_png = Url("noise.png");
                    public static readonly string stripe1_png = Url("stripe1.png");
                    public static readonly string stripe2_png = Url("stripe2.png");
                    public static readonly string stripe3_png = Url("stripe3.png");
                    public static readonly string stripe4_png = Url("stripe4.png");
                    public static readonly string stripe5_png = Url("stripe5.png");
                    public static readonly string stripe6_png = Url("stripe6.png");
                    public static readonly string transparency_png = Url("transparency.png");
                    public static readonly string transtexture_png = Url("transtexture.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Uniform {
                    private const string URLPATH = "~/content/kendo/2013.2.716/Uniform";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_png = Url("editor.png");
                    public static readonly string imagebrowser_png = Url("imagebrowser.png");
                    public static readonly string loading_image_gif = Url("loading-image.gif");
                    public static readonly string loading_gif = Url("loading.gif");
                    public static readonly string loading_2x_gif = Url("loading_2x.gif");
                    public static readonly string slider_h_gif = Url("slider-h.gif");
                    public static readonly string slider_v_gif = Url("slider-v.gif");
                    public static readonly string sprite_png = Url("sprite.png");
                    public static readonly string sprite_2x_png = Url("sprite_2x.png");
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class mail {
            private const string URLPATH = "~/content/mail";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
                     
                public static readonly string jquery_ui_accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.accordion.min.css") ? Url("jquery.ui.accordion.min.css") : Url("jquery.ui.accordion.css");
                     
                public static readonly string jquery_ui_all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.all.min.css") ? Url("jquery.ui.all.min.css") : Url("jquery.ui.all.css");
                     
                public static readonly string jquery_ui_autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.autocomplete.min.css") ? Url("jquery.ui.autocomplete.min.css") : Url("jquery.ui.autocomplete.css");
                     
                public static readonly string jquery_ui_base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.base.min.css") ? Url("jquery.ui.base.min.css") : Url("jquery.ui.base.css");
                     
                public static readonly string jquery_ui_button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.button.min.css") ? Url("jquery.ui.button.min.css") : Url("jquery.ui.button.css");
                     
                public static readonly string jquery_ui_core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.core.min.css") ? Url("jquery.ui.core.min.css") : Url("jquery.ui.core.css");
                     
                public static readonly string jquery_ui_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker.min.css") ? Url("jquery.ui.datepicker.min.css") : Url("jquery.ui.datepicker.css");
                     
                public static readonly string jquery_ui_dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.dialog.min.css") ? Url("jquery.ui.dialog.min.css") : Url("jquery.ui.dialog.css");
                     
                public static readonly string jquery_ui_menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.menu.min.css") ? Url("jquery.ui.menu.min.css") : Url("jquery.ui.menu.css");
                     
                public static readonly string jquery_ui_progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.progressbar.min.css") ? Url("jquery.ui.progressbar.min.css") : Url("jquery.ui.progressbar.css");
                     
                public static readonly string jquery_ui_resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.resizable.min.css") ? Url("jquery.ui.resizable.min.css") : Url("jquery.ui.resizable.css");
                     
                public static readonly string jquery_ui_selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.selectable.min.css") ? Url("jquery.ui.selectable.min.css") : Url("jquery.ui.selectable.css");
                     
                public static readonly string jquery_ui_slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.slider.min.css") ? Url("jquery.ui.slider.min.css") : Url("jquery.ui.slider.css");
                     
                public static readonly string jquery_ui_spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.spinner.min.css") ? Url("jquery.ui.spinner.min.css") : Url("jquery.ui.spinner.css");
                     
                public static readonly string jquery_ui_tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tabs.min.css") ? Url("jquery.ui.tabs.min.css") : Url("jquery.ui.tabs.css");
                     
                public static readonly string jquery_ui_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.theme.min.css") ? Url("jquery.ui.theme.min.css") : Url("jquery.ui.theme.css");
                     
                public static readonly string jquery_ui_tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tooltip.min.css") ? Url("jquery.ui.tooltip.min.css") : Url("jquery.ui.tooltip.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class minified {
                    private const string URLPATH = "~/content/themes/base/minified";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/content/themes/base/minified/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                        public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                        public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                        public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                        public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                        public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                        public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                        public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                        public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                        public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                        public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                        public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                        public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                    }
                
                    public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
                    public static readonly string jquery_ui_accordion_min_css = Url("jquery.ui.accordion.min.css");
                    public static readonly string jquery_ui_autocomplete_min_css = Url("jquery.ui.autocomplete.min.css");
                    public static readonly string jquery_ui_button_min_css = Url("jquery.ui.button.min.css");
                    public static readonly string jquery_ui_core_min_css = Url("jquery.ui.core.min.css");
                    public static readonly string jquery_ui_datepicker_min_css = Url("jquery.ui.datepicker.min.css");
                    public static readonly string jquery_ui_dialog_min_css = Url("jquery.ui.dialog.min.css");
                    public static readonly string jquery_ui_menu_min_css = Url("jquery.ui.menu.min.css");
                    public static readonly string jquery_ui_progressbar_min_css = Url("jquery.ui.progressbar.min.css");
                    public static readonly string jquery_ui_resizable_min_css = Url("jquery.ui.resizable.min.css");
                    public static readonly string jquery_ui_selectable_min_css = Url("jquery.ui.selectable.min.css");
                    public static readonly string jquery_ui_slider_min_css = Url("jquery.ui.slider.min.css");
                    public static readonly string jquery_ui_spinner_min_css = Url("jquery.ui.spinner.min.css");
                    public static readonly string jquery_ui_tabs_min_css = Url("jquery.ui.tabs.min.css");
                    public static readonly string jquery_ui_theme_min_css = Url("jquery.ui.theme.min.css");
                    public static readonly string jquery_ui_tooltip_min_css = Url("jquery.ui.tooltip.min.css");
                }
            
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class styles {
        private const string URLPATH = "~/styles";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _resharper_unused_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_resharper-unused.min.css") ? Url("_resharper-unused.min.css") : Url("_resharper-unused.css");
             
        public static readonly string reset_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/reset.min.css") ? Url("reset.min.css") : Url("reset.css");
             
        public static readonly string ruler_50_50_png = Url("ruler-50-50.png");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class sass {
            private const string URLPATH = "~/styles/sass";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string _bootstrap_scss = Url("_bootstrap.scss");
            public static readonly string _future_scss = Url("_future.scss");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class sheets {
                private const string URLPATH = "~/styles/sass/sheets";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _designs_scss = Url("_designs.scss");
                public static readonly string _forms_scss = Url("_forms.scss");
                public static readonly string _ie8_scss = Url("_ie8.scss");
                public static readonly string _layout_banner_scss = Url("_layout-banner.scss");
                public static readonly string _layout_content_scss = Url("_layout-content.scss");
                public static readonly string _layout_footer_scss = Url("_layout-footer.scss");
                public static readonly string _layout_scss = Url("_layout.scss");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class employees {
                    private const string URLPATH = "~/styles/sass/sheets/employees";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string activities_table_scss = Url("activities-table.scss");
                    public static readonly string activities_table_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/activities-table.min.css") ? Url("activities-table.min.css") : Url("activities-table.css");
                         
                    public static readonly string summary_scss = Url("summary.scss");
                    public static readonly string summary_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summary.min.css") ? Url("summary.min.css") : Url("summary.css");
                         
                }
            
                public static readonly string maps_scss = Url("maps.scss");
                public static readonly string maps_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/maps.min.css") ? Url("maps.min.css") : Url("maps.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class people {
                    private const string URLPATH = "~/styles/sass/sheets/people";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string my_profile_scss = Url("my-profile.scss");
                    public static readonly string my_profile_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/my-profile.min.css") ? Url("my-profile.min.css") : Url("my-profile.css");
                         
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class tenants {
            private const string URLPATH = "~/styles/tenants";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class _default {
                private const string URLPATH = "~/styles/tenants/_default";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string box_shadow_2_2_png = Url("box-shadow-2-2.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class clemson_edu {
                private const string URLPATH = "~/styles/tenants/clemson.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class hpu_edu {
                private const string URLPATH = "~/styles/tenants/hpu.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lehigh_edu {
                private const string URLPATH = "~/styles/tenants/lehigh.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class napier_ac_uk {
                private const string URLPATH = "~/styles/tenants/napier.ac.uk";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class suny_edu {
                private const string URLPATH = "~/styles/tenants/suny.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class testshib_org {
                private const string URLPATH = "~/styles/tenants/testshib.org";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class uc_edu {
                private const string URLPATH = "~/styles/tenants/uc.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string designs_min_css = Url("designs.min.css");
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string forms_min_css = Url("forms.min.css");
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string ie8_min_css = Url("ie8.min.css");
                public static readonly string ingot_32_9_gif = Url("ingot-32-9.gif");
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class umn_edu {
                private const string URLPATH = "~/styles/tenants/umn.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_bg_png = Url("banner-bg.png");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class usf_edu {
                private const string URLPATH = "~/styles/tenants/usf.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class uwi_edu {
                private const string URLPATH = "~/styles/tenants/uwi.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class uwm_edu {
                private const string URLPATH = "~/styles/tenants/uwm.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class westernu_ca {
                private const string URLPATH = "~/styles/tenants/westernu.ca";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _brand_scss = Url("_brand.scss");
                public static readonly string _values_scss = Url("_values.scss");
                public static readonly string banner_logo_png = Url("banner-logo.png");
                public static readonly string designs_scss = Url("designs.scss");
                public static readonly string designs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/designs.min.css") ? Url("designs.min.css") : Url("designs.css");
                     
                public static readonly string forms_scss = Url("forms.scss");
                public static readonly string forms_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/forms.min.css") ? Url("forms.min.css") : Url("forms.css");
                     
                public static readonly string ie8_scss = Url("ie8.scss");
                public static readonly string ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.css") ? Url("ie8.min.css") : Url("ie8.css");
                     
                public static readonly string layout_scss = Url("layout.scss");
                public static readonly string layout_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/layout.min.css") ? Url("layout.min.css") : Url("layout.css");
                     
                public static readonly string layout_min_css = Url("layout.min.css");
                public static readonly string logo_png = Url("logo.png");
            }
        
        }
    
        public static readonly string tinymce_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tinymce.min.css") ? Url("tinymce.min.css") : Url("tinymce.css");
             
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class images {
        private const string URLPATH = "~/images";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string antarctica_283x35_png = Url("antarctica_283x35.png");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bg {
            private const string URLPATH = "~/images/bg";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string ui_bg_flat_black_40x100_png = Url("ui-bg_flat_black_40x100.png");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class geochart {
            private const string URLPATH = "~/images/geochart";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class hot {
                private const string URLPATH = "~/images/geochart/hot";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string antarctica_png = Url("antarctica.png");
                public static readonly string arctic_ocean_png = Url("arctic-ocean.png");
                public static readonly string atlantic_ocean_png = Url("atlantic-ocean.png");
                public static readonly string caribbean_sea_png = Url("caribbean-sea.png");
                public static readonly string gulf_of_mexico_png = Url("gulf-of-mexico.png");
                public static readonly string indian_ocean_png = Url("indian-ocean.png");
                public static readonly string pacific_ocean_png = Url("pacific-ocean.png");
                public static readonly string southern_ocean_png = Url("southern-ocean.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class up {
                private const string URLPATH = "~/images/geochart/up";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string antarctica_png = Url("antarctica.png");
                public static readonly string arctic_ocean_png = Url("arctic-ocean.png");
                public static readonly string atlantic_ocean_png = Url("atlantic-ocean.png");
                public static readonly string caribbean_sea_png = Url("caribbean-sea.png");
                public static readonly string gulf_of_mexico_png = Url("gulf-of-mexico.png");
                public static readonly string indian_ocean_png = Url("indian-ocean.png");
                public static readonly string pacific_ocean_png = Url("pacific-ocean.png");
                public static readonly string southern_ocean_png = Url("southern-ocean.png");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class icons {
            private const string URLPATH = "~/images/icons";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class agreements {
                private const string URLPATH = "~/images/icons/agreements";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string folder_contract_icon_png = Url("folder-contract-icon.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class cancel {
                private const string URLPATH = "~/images/icons/cancel";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string black_cancel_24_png = Url("black-cancel-24.png");
                public static readonly string undo_4_512_jpg = Url("undo-4-512.jpg");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class closer {
                private const string URLPATH = "~/images/icons/closer";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string closer_16_dark_png = Url("closer-16-dark.png");
                public static readonly string closer_16_red_disc_png = Url("closer-16-red-disc.png");
                public static readonly string closer_20_red_disc_png = Url("closer-20-red-disc.png");
                public static readonly string closer_24_dark_png = Url("closer-24-dark.png");
                public static readonly string closer_24_light_png = Url("closer-24-light.png");
                public static readonly string closer_24_red_disc_png = Url("closer-24-red-disc.png");
                public static readonly string closer_24_red_png = Url("closer-24-red.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class download {
                private const string URLPATH = "~/images/icons/download";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string down128_png = Url("down128.png");
                public static readonly string green_down_128_png = Url("green-down-128.png");
                public static readonly string green_down_24_png = Url("green-down-24.png");
                public static readonly string Navigation_Green_Up_png = Url("Navigation Green Up.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class edit {
                private const string URLPATH = "~/images/icons/edit";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string pencil_a_24_png = Url("pencil-a-24.png");
                public static readonly string pencil_a_64_png = Url("pencil-a-64.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class files {
                private const string URLPATH = "~/images/icons/files";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string doc_png = Url("doc.png");
                public static readonly string docx_png = Url("docx.png");
                public static readonly string pdf_16_png = Url("pdf-16.png");
                public static readonly string pdf_32_png = Url("pdf-32.png");
                public static readonly string pdf_doug_png = Url("pdf-doug.png");
                public static readonly string pdf_png = Url("pdf.png");
                public static readonly string ppt_png = Url("ppt.png");
                public static readonly string pptx_png = Url("pptx.png");
                public static readonly string unknown_doug_png = Url("unknown-doug.png");
                public static readonly string unknown_png = Url("unknown.png");
                public static readonly string xls_png = Url("xls.png");
                public static readonly string xlsx_png = Url("xlsx.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class globe {
                private const string URLPATH = "~/images/icons/globe";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string shiny_24_disabled_png = Url("shiny-24-disabled.png");
                public static readonly string shiny_24_png = Url("shiny-24.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class glyphs {
                private const string URLPATH = "~/images/icons/glyphs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string glyphicons_071_book_png = Url("glyphicons_071_book.png");
                public static readonly string glyphicons_072_bookmark_png = Url("glyphicons_072_bookmark.png");
                public static readonly string glyphicons_261_buoy_png = Url("glyphicons_261_buoy.png");
                public static readonly string glyphicons_261_buoy_blue_png = Url("glyphicons_261_buoy_blue.png");
                public static readonly string glyphicons_300_microphone_png = Url("glyphicons_300_microphone.png");
                public static readonly string glyphicons_341_briefcase_png = Url("glyphicons_341_briefcase.png");
                public static readonly string glyphicons_375_classic_hammer_png = Url("glyphicons_375_classic_hammer.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class help {
                private const string URLPATH = "~/images/icons/help";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string question_mark_24_blue_png = Url("question-mark-24-blue.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class logo {
                private const string URLPATH = "~/images/icons/logo";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string user_voice_24_filled_png = Url("user-voice-24-filled.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class maps {
                private const string URLPATH = "~/images/icons/maps";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string antarctica_png = Url("antarctica.png");
                public static readonly string antarcticaHover_png = Url("antarcticaHover.png");
                public static readonly string antarcticaLabeled_png = Url("antarcticaLabeled.png");
                public static readonly string antarcticaLabeledHover_png = Url("antarcticaLabeledHover.png");
                public static readonly string arcticOcean_png = Url("arcticOcean.png");
                public static readonly string arcticOceanHover_png = Url("arcticOceanHover.png");
                public static readonly string atlanticOcean_png = Url("atlanticOcean.png");
                public static readonly string atlanticOceanHover_png = Url("atlanticOceanHover.png");
                public static readonly string caribbean_png = Url("caribbean.png");
                public static readonly string caribbeanHover_png = Url("caribbeanHover.png");
                public static readonly string gulfOfMexico_png = Url("gulfOfMexico.png");
                public static readonly string gulfOfMexicoHover_png = Url("gulfOfMexicoHover.png");
                public static readonly string indianOcean_png = Url("indianOcean.png");
                public static readonly string indianOceanHover_png = Url("indianOceanHover.png");
                public static readonly string mapPimple_png = Url("mapPimple.png");
                public static readonly string pacificOcean_png = Url("pacificOcean.png");
                public static readonly string pacificOceanHover_png = Url("pacificOceanHover.png");
                public static readonly string southernOcean_png = Url("southernOcean.png");
                public static readonly string southernOceanHover_png = Url("southernOceanHover.png");
                public static readonly string tools_marker_add_png = Url("tools-marker-add.png");
                public static readonly string tools_marker_drag_png = Url("tools-marker-drag.png");
                public static readonly string tools_marker_remove_png = Url("tools-marker-remove.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class minus {
                private const string URLPATH = "~/images/icons/minus";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string minus_16_red_on_white_png = Url("minus-16-red-on-white.png");
                public static readonly string minus_20_red_png = Url("minus-20-red.png");
                public static readonly string minus_24_red_png = Url("minus-24-red.png");
                public static readonly string minus_24_white_on_red_png = Url("minus-24-white-on-red.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plus {
                private const string URLPATH = "~/images/icons/plus";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string plus_16_green_disc_png = Url("plus-16-green-disc.png");
                public static readonly string plus_20_green_disc_png = Url("plus-20-green-disc.png");
                public static readonly string plus_24_green_disc_png = Url("plus-24-green-disc.png");
                public static readonly string plus_24_green_png = Url("plus-24-green.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class print {
                private const string URLPATH = "~/images/icons/print";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string print_24_black_png = Url("print-24-black.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class save {
                private const string URLPATH = "~/images/icons/save";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string save_20_png = Url("save-20.png");
                public static readonly string Save_24_png = Url("Save-24.png");
                public static readonly string Save_256_png = Url("Save-256.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class search {
                private const string URLPATH = "~/images/icons/search";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string search_24_black_png = Url("search-24-black.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class sort {
                private const string URLPATH = "~/images/icons/sort";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string glyphicons_403_sorting_png = Url("glyphicons_403_sorting.png");
                public static readonly string glyphicons_404_sort_by_alphabet_png = Url("glyphicons_404_sort-by-alphabet.png");
                public static readonly string glyphicons_405_sort_by_alphabet_alt_png = Url("glyphicons_405_sort-by-alphabet-alt.png");
                public static readonly string glyphicons_406_sort_by_order_png = Url("glyphicons_406_sort-by-order.png");
                public static readonly string glyphicons_407_sort_by_order_alt_png = Url("glyphicons_407_sort-by-order-alt.png");
                public static readonly string glyphicons_408_sort_by_attributes_png = Url("glyphicons_408_sort-by-attributes.png");
                public static readonly string glyphicons_409_sort_by_attributes_alt_png = Url("glyphicons_409_sort-by-attributes-alt.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class spinner {
                private const string URLPATH = "~/images/icons/spinner";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string barber_38_green_gif = Url("barber-38-green.gif");
                public static readonly string barber_40_green_gif = Url("barber-40-green.gif");
                public static readonly string spinner_20_blue_on_ddd_gif = Url("spinner-20-blue-on-ddd.gif");
                public static readonly string spinner_20_blue_gif = Url("spinner-20-blue.gif");
                public static readonly string spinner_20_grey_gif = Url("spinner-20-grey.gif");
                public static readonly string spinner_24_blue_on_ddd_gif = Url("spinner-24-blue-on-ddd.gif");
                public static readonly string spinner_24_blue_gif = Url("spinner-24-blue.gif");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class user {
                private const string URLPATH = "~/images/icons/user";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string male_and_female_256_png = Url("male-and-female-256.png");
                public static readonly string unisex_a_128_png = Url("unisex-a-128.png");
                public static readonly string unisex_a_256_png = Url("unisex-a-256.png");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class placeholders {
            private const string URLPATH = "~/images/placeholders";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string aqua_96x96_png = Url("aqua-96x96.png");
            public static readonly string blue_96x96_png = Url("blue-96x96.png");
            public static readonly string ExpertiseMock_png = Url("ExpertiseMock.png");
            public static readonly string green_96x96_png = Url("green-96x96.png");
            public static readonly string purple_96x96_png = Url("purple-96x96.png");
            public static readonly string red_96x96_png = Url("red-96x96.png");
            public static readonly string yellow_96x96_png = Url("yellow-96x96.png");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class samples {
            private const string URLPATH = "~/images/samples";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string sample_photo_128_jpg = Url("sample-photo-128.jpg");
        }
    
        public static readonly string transparent_png = Url("transparent.png");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;


    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591


